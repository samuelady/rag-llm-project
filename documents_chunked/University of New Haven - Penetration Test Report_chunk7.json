{"text": "information which is integral to AEC’s ability to sell its products online may be Page 12\\nsubjecttounauthorizedmodification. Thisdataisnotdirectlyaccessedbythewebstorehost (Scrumdiddlyumptious), but rather through an API endpoint host (Whatchamacallit). Affected Hosts: Charley (10.0.17.14) Scrumdiddlyumptious (10.0.17.12) Whatchamacallit (10.0.17.13) Exploitation Details: New Haven Hacking Inc. used the MySQL command line application to query the unau- thenticated database as the root user. All customer information could be obtained without modifying the database schema or contents. This user also had write permissions, meaning a malicious actor could arbitrarily modify database contents. Figure 6 shows the connection from the PostgreSQL server and initial shell commands. Figure 6: MariaDB tokens Table Dump Recommended Remediation: A minimal number of hosts should be able to interact on the network with the MySQL database. By limiting network access to only those required hosts, potential attacks against the MySQL service are minimized. The following iptables commands can be used to enable access controls and limit which hosts can reach MySQL: iptables −A INPUT −p tcp −−dport 3306 −s <IP> −j ACCEPT iptables −A INPUT −p tcp −−dport 8000 −j DROP If a firewall is not an option due to constraints within the environment (we recommend using a firewall), another option is to use ACLs within MySQL. This can be done by altering Page 13\\nusers to only be accessible via certain IPs or domains. This can be done using the following commands: CREATE USER ‘user ’@‘ localhost ’ IDENTIFIED BY ‘password ’ ; CREATE USER ‘user ’@‘10.0.17.13 ’ IDENTIFIED BY ‘password ’ ; References: https://dev.mysql.com/doc/mysql-security-excerpt/8.0/en/general-security-iss ues.html https://dev.mysql.com/doc/mysql-security-excerpt/8.0/en/access-control.htm l https://www.digitalocean.com/community/tutorials/iptables-essentials-common- firewall-rules-and-commands Page 14\\n4.3 Moderate Risk 4.3.1 Payment Transaction Enumeration Threat Level: Moderate (4.5) Description: The Jawbreaker portal on the eggdicator host allows users to enter transaction IDs and returnstransactioninformationincludingtheamount,customer_id,andstatus. Allcustomer transactions can be enumerated without any authentication (see Figure 7). Figure 7: Powershell Script to pull all Customer transactions. Potential Business Impact: Potential attackers could extract all transactions regarding the revenue of AEC. Although thesestransactionsonlyrefertothecustomerasaUUID,thevalueisuniquetothatcustomer and could be used to associate multiple transactions to specific purchasers. Page 15\\nAffected Hosts: Eggdicator (10.0.17.10) Exploitation Details: Thepowershellscriptshownabovecanbeusedbynavigatingtohttps://10.0.17.10/payment/$i and replacing “$i” with a numeric value. This would return JSON data regarding a trans- action if one exists with the given ID. Based on results obtained from the script, a total of 6469 transactions were present and extractable. Recommended Remediation: Using a UUID instead of an id for each transaction would mitigate sequential enumeration and would greatly increase the time needed for a brute force attack. Additionally, rate limiting hosts to only a specific number of requests per minute (more information can be found in references) would further mitigate the attack. Moreover, implementing authentica- tion on the API would limit enumeration to only authorized users. Access tokens or basic http authentication are both options which would help reduce the risk introduced by this vulnerability. References: https://www.nginx.com/blog/rate-limiting-nginx/ https://docs.nginx.com/nginx /admin-guide/security-controls/configuring-http-basic-authentication/ Page 16\\n4.4 Low Risk 4.4.1 ScadaBR Reflected XSS (Username) Threat Level: Low (1.25) Description: A cross-site scripting (XSS) vulnerability was found in the login portal of ScadaBR. A mali- cious actor could", "metadata": {"doc_id": "University of New Haven - Penetration Test Report", "chunk_id": 7}}