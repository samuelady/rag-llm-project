{"text": "... Bundle:/private/var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67 Application:/private/var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/iGoat-Swift.app Data:/private/var/mobile/Containers/Data/Application/8C8E7EB0-BC9B-435B-8EF8-8F5560EB0693 Usingobjection’scommandenvwillalsoshowyouallthedirectoryinformationoftheapp. Connectingtotheapplication withobjectionisdescribedinthesection“RecommendedTools-Objection”. OWASP.iGoat-Swifton (iPhone:11.1.2)[usb] #env Name Path ----------------- ------------------------------------------------------------------------------------------- BundlePath /var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/iGoat-Swift.app CachesDirectory /var/mobile/Containers/Data/Application/8C8E7EB0-BC9B-435B-8EF8-8F5560EB0693/Library/Caches DocumentDirectory /var/mobile/Containers/Data/Application/8C8E7EB0-BC9B-435B-8EF8-8F5560EB0693/Documents LibraryDirectory /var/mobile/Containers/Data/Application/8C8E7EB0-BC9B-435B-8EF8-8F5560EB0693/Library Asyoucansee,appshavetwomainlocations: • TheBundledirectory(/var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/). • TheDatadirectory(/var/mobile/Containers/Data/Application/8C8E7EB0-BC9B-435B-8EF8-8F5560EB0693/). Thesefolderscontaininformationthatmustbeexaminedcloselyduringapplicationsecurityassessments(forexample whenanalyzingthestoreddataforsensitivedata). Bundledirectory: • AppName.app – ThisistheApplicationBundleasseenbeforeintheIPA,itcontainsessentialapplicationdata,staticcontent aswellastheapplication’scompiledbinary. – Thisdirectoryisvisibletousers,butuserscan’twritetoit. – Contentinthisdirectoryisnotbackedup. – Thecontentsofthisfolderareusedtovalidatethecodesignature. Datadirectory: • Documents/ – Containsalltheuser-generateddata. Theapplicationenduserinitiatesthecreationofthisdata. – Visibletousersanduserscanwritetoit. – Contentinthisdirectoryisbackedup. – TheappcandisablepathsbysettingNSURLIsExcludedFromBackupKey. • Library/ – Containsallfilesthataren’tuser-specific,suchascaches,preferences,cookies,andpropertylist(plist)con- figurationfiles. – iOS apps usually use the Application Support and Caches subdirectories, but the app can create custom subdirectories. • Library/Caches/ – Containssemi-persistentcachedfiles. – Invisibletousersanduserscan’twritetoit. – Contentinthisdirectoryisnotbackedup. – TheOSmaydeletethisdirectory’sfilesautomaticallywhentheappisnotrunningandstoragespaceisrunning low. • Library/ApplicationSupport/ – Containspersistentfilesnecessaryforrunningtheapp. – Invisibletousersanduserscan’twritetoit. – Contentinthisdirectoryisbackedup. 358\\n– TheappcandisablepathsbysettingNSURLIsExcludedFromBackupKey. • Library/Preferences/ – Usedforstoringpropertiesthatcanpersistevenafteranapplicationisrestarted. – Informationissaved,unencrypted,insidetheapplicationsandboxinaplistfilecalled[BUNDLE_ID].plist. – Allthekey/valuepairsstoredusingNSUserDefaultscanbefoundinthisfile. • tmp/ – Usethisdirectorytowritetemporaryfilesthatdonotneedtopersistbetweenapplaunches. – Containsnon-persistentcachedfiles. – Invisibletousers. – Contentinthisdirectoryisnotbackedup. – TheOSmaydeletethisdirectory’sfilesautomaticallywhentheappisnotrunningandstoragespaceisrunning low. Let’stakeacloserlookatiGoat-Swift’sApplicationBundle(.app)directoryinsidetheBundledirectory(/var/containers/ Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/iGoat-Swift.app): OWASP.iGoat-Swifton (iPhone:11.1.2)[usb] #ls NSFileType Perms NSFileProtection ... Name ------------ ------- ------------------ ... -------------------------------------- Regular 420 None ... rutger.html Regular 420 None ... mansi.html Regular 420 None ... splash.html Regular 420 None ... about.html Regular 420 None ... LICENSE.txt Regular 420 None ... Sentinel.txt Regular 420 None ... README.txt Directory 493 None ... URLSchemeAttackExerciseVC.nib Directory 493 None ... CutAndPasteExerciseVC.nib Directory 493 None ... RandomKeyGenerationExerciseVC.nib Directory 493 None ... KeychainExerciseVC.nib Directory 493 None ... CoreData.momd Regular 420 None ... archived-expanded-entitlements.xcent Directory 493 None ... SVProgressHUD.bundle Directory 493 None ... Base.lproj Regular 420 None ... Assets.car Regular 420 None ... PkgInfo Directory 493 None ... _CodeSignature Regular 420 None ... AppIcon60x60@3x.png Directory 493 None ... Frameworks Regular 420 None ... embedded.mobileprovision Regular 420 None ... Credentials.plist Regular 420 None ... Assets.plist Regular 420 None ... Info.plist Regular 493 None ... iGoat-Swift YoucanalsovisualizetheBundledirectoryfromGrapefruitbyclickingonFinder->Bundle: 359\\nIncludingtheInfo.plistfile: AswellastheDatadirectoryinFinder->Home: 360\\nRefertotheTestingDataStoragechapterformoreinformationandbestpracticesonsecurelystoringsensitivedata. Symbolic Execution Platform: ios TODO:Currentlydon’thavethis,butwedohavethissectionbelowwhichdoestalkaboutAngrandasmallintroreferring toAndroid Anintroductiontobinaryanalysisusingbinaryanalysisframeworkshasalreadybeendiscussedinthe“DynamicAnalysis” sectionforAndroid. Werecommendyoutorevisitthissectionandrefreshtheconceptsonthissubject. ForAndroid,weusedAngr’ssymbolicexecutionenginetosolveachallenge. Inthissection,wewillfirstlyuseUnicornto solvetheUnCrackableAppforiOSLevel1challengeandthenwewillrevisittheAngrbinaryanalysisframeworktoanalyze thechallengebutinsteadofsymbolicexecutionwewilluseitsconcreteexecution(ordynamicexecution)features. Angr Angrisaveryversatiletool,providingmultipletechniquestofacilitatebinaryanalysis,whilesupportingvariousfileformats andhardwareinstructionssets. TheMach-ObackendinAngrisnotwell-supported,butitworksperfectlyfineforourcase. While manually analyzing the code in the Reviewing Disassembled Native Code” section, we reached a point where performing further manual analysis was cumbersome. The function at offset 0x1000080d4 was identified as the final targetwhichcontainsthesecretstring. Ifwerevisitthatfunction,wecanseethatitinvolvesmultiplesub-functioncallsandinterestinglynoneofthesefunctions have any dependencies on other library calls or system calls. This is a perfect case to use Angr’s concrete execution engine. Followthestepsbelowtosolvethischallenge: 361\\n• Get the ARM64 version of the binary by running lipo -thin arm64 <app_binary> -output uncrackable.arm64 (ARMv7canbeusedaswell). • CreateanAngrProjectbyloadingtheabovebinary. • Getacallableobjectbypassingtheaddressofthefunctiontobeexecuted. FromtheAngrdocumentation: “A Callableisarepresentationofafunctioninthebinarythatcanbeinteractedwithlikeanativepythonfunction.”. • Pass the above callable object to the concrete execution engine, which in this case is claripy.backends. concrete. • Accessthememoryandextractthestringfromthepointerreturnedbytheabovefunction. importangr importclaripy defsolve(): #Loadthebinarybycreatingangrproject. project =angr.Project('uncrackable.arm64') #Passtheaddressofthefunctiontothecallable func =project.factory.callable(0x1000080d4) #Getthereturnvalueofthefunction ptr_secret_string =claripy.backends.concrete.convert(func()).value print(\"Addressofthepointertothesecretstring:\" +hex(ptr_secret_string)) #Extractthevaluefromthepointertothesecretstring secret_string =func.result_state.mem[ptr_secret_string].string.concrete print(f\"SecretString: {secret_string}\") solve() Above, Angr executed an ARM64 code in an execution environment provided by one of its concrete execution engines. Theresultisaccessedfromthememoryasiftheprogramisexecutedonarealdevice. Thiscaseisagoodexamplewhere binaryanalysisframeworksenableustoperformacomprehensiveanalysisofabinary,evenintheabsenceofspecialized devicesneededtorunit. Exploring the App Package Platform: ios Onceyouhavecollectedthepackagenameoftheapplicationyouwanttotarget,you’llwanttostartgatheringinformation aboutit. First,retrievetheIPAasexplainedinBasicTestingOperations-ObtainingandExtractingApps. YoucanunziptheIPAusingthestandardunziporanyotherZIPutility. Insideyou’llfindaPayloadfoldercontainingthe so-called Application Bundle (.app). The following is an example in the following output, note that it was truncated for betterreadabilityandoverview: $ls -1Payload/iGoat-Swift.app rutger.html mansi.html splash.html about.html LICENSE.txt Sentinel.txt README.txt URLSchemeAttackExerciseVC.nib CutAndPasteExerciseVC.nib RandomKeyGenerationExerciseVC.nib KeychainExerciseVC.nib CoreData.momd archived-expanded-entitlements.xcent SVProgressHUD.bundle Base.lproj Assets.car PkgInfo _CodeSignature AppIcon60x60@3x.png Frameworks embedded.mobileprovision Credentials.plist 362\\nAssets.plist Info.plist iGoat-Swift Themostrelevantitemsare: • Info.plist contains configuration information for the application, such as its bundle ID, version number, and displayname. • _CodeSignature/containsaplistfilewithasignatureoverallfilesinthebundle.", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 128}}