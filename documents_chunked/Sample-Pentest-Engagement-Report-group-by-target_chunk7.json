{"text": "HTTP endpoints found in predefined locations. For example, applications hosted on cloud providers like 30\\nAWS, Digital Ocean, and Oracle Cloud can make unauthenticated requests to http://169.254.169.254/ to receive metadata. Other examples of services providing HTTP APIs on internal IPs are Elasticsearch, Prometheus, and Grafana. Additionally, the backend framework might support requests over other protocols, like file://, ftp://, gopher://, which may extend the attack surface. For example, the file:// protocol might be used to retrieve documents from the system. Recommendation We recommend rewriting the vulnerable code to allow requests only to specific URLs (whitelist approach). Blacklists are usually ineffective, as there is a myriad of ways to bypass them. Furthermore, disable support for any unwanted protocols, like ftp://, file://. Lastly, internal services should be protected by authentication and authorization mechanisms, thus applying a defense-in-depth approach. References https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/ https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Preven tion_Cheat_Sheet.html Classification Category ID / Value CWE CWE-918 OWASP Top 10 - 2021 A10 - Server-Side Request Forgery Verification ✔ This finding was validated so it is not a False Positive. 31\\n4.1.8 Insecure cookie setting: missing HttpOnly flag Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL Cookie Evidence Name https://pentest- PHPSESSI The server responded with Set-Cookie ground.com:428 D, security header(s) that does not specify the HttpOnly 0/ flag: Set-Cookie: PHPSESSID=0c91ce65c9d194f858f04aa98f3fe e35 Set-Cookie: security=low Request / Response Vulnerability description We found that a cookie has been set without the HttpOnly flag, which means it can be accessed by potentially malicious JavaScript code running inside the web page. The root cause for this usually revolves around misconfigurations in the code or server settings. Risk description The risk is that an attacker who injects malicious JavaScript code on the page (e.g. by using an XSS attack) can access the cookie and can send it to another site. In case of a session cookie, this could lead to session hijacking. Recommendation Ensure that the HttpOnly flag is set for all cookies. 32\\nReferences https://owasp.org/www-community/HttpOnly Classification Category ID / Value CWE CWE-1004 OWASP Top 10 - 2017 A6 - Security Misconfiguration OWASP Top 10 - 2021 A5 - Security Misconfiguration Verification ✔ This finding was validated so it is not a False Positive. 33\\n4.1.9 Insecure cookie setting: missing Secure flag Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL Cookie Evidence Name https://pentest- PHPSESSI Set-Cookie: ground.com:428 D, security PHPSESSID=0c91ce65c9d194f858f04aa98f3fe 0/ e35 Set-Cookie: security=low Request / Response Vulnerability description We found that a cookie has been set without the Secure flag, which means the browser will send it over an unencrypted channel (plain HTTP) if such a request is made. The root cause for this usually revolves around misconfigurations in the code or server settings. Risk description The risk exists that an attacker will intercept the clear-text communication between the browser and the server and he will steal the cookie of the user. If this is a session cookie, the attacker could gain unauthorized access to the victim's web session. Recommendation Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure", "metadata": {"doc_id": "Sample-Pentest-Engagement-Report-group-by-target", "chunk_id": 7}}