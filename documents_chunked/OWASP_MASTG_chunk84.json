{"text": "attacker to extractit. 200\\nADB Backup Support Android provides an attribute called allowBackup to back up all your application data. This attribute is set in the AndroidManifest.xmlfile. Ifthevalueofthisattributeistrue,thedeviceallowsuserstobackuptheapplicationwith AndroidDebugBridge(ADB)viathecommand$ adb backup. Topreventtheappdatabackup,settheandroid:allowBackupattributetofalse. Whenthisattributeisunavailable,the allowBackupsettingisenabledbydefault,andbackupmustbemanuallydeactivated. Note: Ifthedevicewasencrypted,thenthebackupfileswillbeencryptedaswell. Process Memory AllapplicationsonAndroidusememorytoperformnormalcomputationaloperationslikeanyregularmodern-daycom- puter. Itisofnosurprisethenthatattimessensitiveoperationswillbeperformedwithinprocessmemory. Forthisreason, itisimportantthatoncetherelevantsensitivedatahasbeenprocessed,itshouldbedisposedfromprocessmemoryas quicklyaspossible. Theinvestigationofanapplication’smemorycanbedonefrommemorydumps,andfromanalyzingthememoryinreal timeviaadebugger. For an overview of possible sources of data exposure, check the documentation and identify application components before you examine the source code. For example, sensitive data from a backend may be in the HTTP client, the XML parser,etc. Youwantallthesecopiestoberemovedfrommemoryassoonaspossible. Inaddition, understandingtheapplication’sarchitectureandthearchitecture’sroleinthesystemwillhelpyouidentify sensitive information that doesn’t have to be exposed in memory at all. For example, assume your app receives data from one server and transfers it to another without any processing. That data can be handled in an encrypted format, whichpreventsexposureinmemory. However,ifyouneedtoexposesensitivedatainmemory,youshouldmakesurethatyourappisdesignedtoexposeas fewdatacopiesaspossibleasbrieflyaspossible. Inotherwords,youwantthehandlingofsensitivedatatobecentralized (i.e.,withasfewcomponentsaspossible)andbasedonprimitive,mutabledatastructures. The latter requirement gives developers direct memory access. Make sure that they use this access to overwrite the sensitivedatawithdummydata(typicallyzeroes). Examplesofpreferabledatatypesincludebyte []andchar [],but notStringorBigInteger. WheneveryoutrytomodifyanimmutableobjectlikeString,youcreateandchangeacopy oftheobject. Using non-primitive mutable types like StringBuffer and StringBuilder may be acceptable, but it’s indicative and requires care. Types like StringBuffer are used to modify content (which is what you want to do). To access such a type’svalue,however,youwouldusethetoStringmethod,whichwouldcreateanimmutablecopyofthedata. There areseveralwaystousethesedatatypeswithoutcreatinganimmutablecopy,buttheyrequiremoreeffortthanusinga primitivearray. SafememorymanagementisonebenefitofusingtypeslikeStringBuffer,butthiscanbeatwo-edged sword. Ifyoutrytomodifythecontentofoneofthesetypesandthecopyexceedsthebuffercapacity, thebuffersize willautomaticallyincrease. Thebuffercontentmaybecopiedtoadifferentlocation, leavingtheoldcontentwithouta referenceusetooverwriteit. Unfortunately,fewlibrariesandframeworksaredesignedtoallowsensitivedatatobeoverwritten. Forexample,destroy- ingakey,asshownbelow,doesn’tremovethekeyfrommemory: ExampleinJava: SecretKeysecretKey =newSecretKeySpec(\"key\".getBytes(),\"AES\"); secretKey.destroy(); ExampleinKotlin: valsecretKey:SecretKey =SecretKeySpec(\"key\".toByteArray(),\"AES\") secretKey.destroy() 201\\nOverwritingthebackingbyte-arrayfromsecretKey.getEncodeddoesn’tremovethekeyeither;theSecretKeySpec-based key returns a copy of the backing byte-array. See the sections below for the proper way to remove a SecretKey from memory. The RSA key pair is based on the BigInteger type and therefore resides in memory after its first use outside the An- droidKeyStore. Someciphers(suchastheAESCipherinBouncyCastle)donotproperlycleanuptheirbyte-arrays. User-provideddata(credentials,socialsecuritynumbers,creditcardinformation,etc.) isanothertypeofdatathatmay beexposedinmemory. Regardlessofwhetheryouflagitasapasswordfield,EditTextdeliverscontenttotheappvia theEditableinterface. Ifyourappdoesn’tprovideEditable.Factory,user-provideddatawillprobablybeexposedin memory for longer than necessary. The default Editable implementation, the SpannableStringBuilder, causes the sameissuesasJava’sStringBuilderandStringBuffercause(discussedabove). Third-party Services Embedded in the App Thefeaturesprovidedbythird-partyservicescaninvolvetrackingservicestomonitortheuser’sbehaviorwhileusingthe app,sellingbanneradvertisements,orimprovingtheuserexperience. Thedownsideisthatdevelopersdon’tusuallyknowthedetailsofthecodeexecutedviathird-partylibraries. Consequently, nomoreinformationthanisnecessaryshouldbesenttoaservice,andnosensitiveinformationshouldbedisclosed. Mostthird-partyservicesareimplementedintwoways: • withastandalonelibrary • withafullSDK User Interface UI Components Atcertainpointsintime,theuserwillhavetoentersensitiveinformationintotheapplication. Thisdatamaybefinancial informationsuchascreditcarddataoruseraccountpasswords,ormaybehealthcaredata. Thedatamaybeexposedif theappdoesn’tproperlymaskitwhileitisbeingtyped. In order to prevent disclosure and mitigate risks such as shoulder surfing you should verify that no sensitive data is exposed via the user interface unless explicitly required (e.g. a password being entered). For the data required to be presentitshouldbeproperlymasked,typicallybyshowingasterisksordotsinsteadofcleartext. Screenshots Manufacturerswanttoprovidedeviceuserswithanaestheticallypleasingexperienceatapplicationstartupandexit,so they introduced the screenshot-saving feature for use when the application is backgrounded. This feature may pose a securityrisk. Sensitivedatamaybeexposediftheuserdeliberatelyscreenshotstheapplicationwhilesensitivedatais displayed. A malicious application that is running on the device and able to continuously capture the screen may also exposedata. Screenshotsarewrittentolocalstorage,fromwhichtheymayberecoveredbyarogueapplication(ifthe deviceisrooted)orsomeonewhohasstolenthedevice. For example, capturing a screenshot of a banking application may reveal information about the user’s account, credit, transactions,andsoon. App Notifications Itisimportanttounderstandthatnotificationsshouldneverbeconsideredprivate. Whenanotificationishandledbythe Androidsystemitisbroadcastedsystem-wideandanyapplicationrunningwithaNotificationListenerServicecanlisten forthesenotificationstoreceivetheminfullandmayhandlethemhoweveritwants. TherearemanyknownmalwaresamplessuchasJoker,andAlienwhichabusestheNotificationListenerServiceto listenfornotificationsonthedeviceandthensendthemtoattacker-controlledC2infrastructure. Commonlythisisdone 202\\ntolistenfortwo-factorauthentication(2FA)codesthatappearasnotificationsonthedevicewhicharethensenttothe attacker. Asaferalternativefortheuserwouldbetousea2FAapplicationthatdoesnotgeneratenotifications. FurthermorethereareanumberofappsontheGooglePlayStorethatprovidenotificationlogging,whichlogslocallyany notificationsontheAndroidsystem. ThishighlightsthatnotificationsareinnowayprivateonAndroidandaccessibleby anyotherapponthedevice. Forthisreasonallnotificationusageshouldbeinspectedforconfidentialorhighriskinformationthatcouldbeusedby maliciousapplications. Keyboard Cache Whenusersenterinformationininputfields,thesoftwareautomaticallysuggestsdata. Thisfeaturecanbeveryusefulfor messagingapps. However,thekeyboardcachemaydisclosesensitiveinformationwhentheuserselectsaninputfield thattakesthistypeofinformation. Determining Whether Sensitive Data Is Shared with Third Parties via Embedded Services Platform: android MASVSV1: MSTG-STORAGE-4 MASVSV2: MASVS-STORAGE-2 Overview Static Analysis To determine whether API calls and functions provided by the third-party library are used according to best practices, reviewtheirsourcecode,requestedpermissionsandcheckforanyknownvulnerabilities. Alldatathat’ssenttothird-partyservicesshouldbeanonymizedtopreventexposureofPII(PersonalIdentifiableInforma- tion)thatwouldallowthethirdpartytoidentifytheuseraccount. Nootherdata(suchasIDsthatcanbemappedtoa useraccountorsession)shouldbesenttoathirdparty. Dynamic Analysis Check all requests to external services for embedded sensitive information. To intercept traffic between the client and server,youcanperformdynamicanalysisbylaunchingaman-in-the-middle(MITM)attackwithBurpSuiteProfessionalor OWASPZAP.Onceyouroutethetrafficthroughtheinterceptionproxy,youcantrytosniffthetrafficthatpassesbetween theappandserver. Allapprequeststhataren’tsentdirectlytotheserveronwhichthemainfunctionishostedshould becheckedforsensitiveinformation,suchasPIIinatrackeroradservice.", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 84}}