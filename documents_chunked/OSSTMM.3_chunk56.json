{"text": "determination of the assessors to count what they can’t possibly really know. This problem does not exist in the rav. You get what you know from what is there for a particular vector and you make no assumptions surrounding what is not there. You count all that which is visible and interactive outside of the scope and allows for unauthenticated interaction between other targets in the scope. That becomes the porosity. This porosity value makes the first of 3 parts of the final rav value. The next part is to account for the controls in place per target. This means going target by target and determining where any of the 10 controls are in place such as Authentication, Subjugation, Non-repudiation, etc. Each control is valued as 10% of a pore since each provides 1/10th of the total controls needed to prevent all attack types. This is because having all 10 controls for each pore is functionally the same as closing the pore provided the controls have no limitations. The third part of the rav is accounting for the limitations found in the protection and the controls. These are also known as “vulnerabilities”. The value of these limitations comes from the porosity and established controls themselves. With all counts completed, the rav is basically subtracting porosity and limitations from the controls. This is most easily done with the rav spreadsheet calculator. Creative Commons 3.0 Attribution-Non-Commercial-NoDerivs 2010, ISECOM, www.isecom.org, www.osstmm.org 67\\nUnfortunately, an unskilled analyst can provide the wrong information which will translate into a bad rav. This is a possibility, just like it’s possible a carpenter doesn’t measure a board right or a mechanic fails to read the gauges right. The world is full of what-if scenarios. Therefore the rav is designed to be minimally influenced by bad auditing or cheating by eliminating the direct scope size from the metric calculation. However, no metric can be immune from fudging and the only way to assure the most accurate rav is to have multiple tests over time to make the counts and to be sure the auditor will take responsibility over the accuracy of the test. It is possible to take a short-cut in testing and still make a representative rav. If you don’t mind the error margin because you only want to make a quick comparison, you can just calculate the Porosity which means counting the visible and accessible targets. For example, those who run vulnerability scanners can count porosity and limitations relatively easily and assign default controls for discovered services. Analysts can also create a checklist which offers default controls for different common solutions found. These are all shortcuts to reduce the time to calculation but will affect the overall rav with an unknown, but perhaps acceptable, error margin. The end result is a calculation for Actual Security. It applies multiple controls of the same type to satisfy double-enforcement requirements like 2-factor Authentication. It also uses Log10 to reduce large numbers into human-manageable form. People generally like to work with smaller", "metadata": {"doc_id": "OSSTMM.3", "chunk_id": 56}}