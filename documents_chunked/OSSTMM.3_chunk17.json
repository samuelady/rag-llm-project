{"text": "an insurance company. 3. Resilience is a control over all interactions to maintain the protection of assets in the event of corruption or failure. 4. Subjugation is a control assuring that interactions occur only according to defined processes. The asset owner defines how the interaction occurs which removes the freedom of choice but also the liability of loss from the interacting party. 5. Continuity is a control over all interactions to maintain interactivity with assets in the event of corruption or failure. Process Controls The other half of operation controls are the Class B controls which are used to create defensive processes. These controls do not directly influence interactions rather they protect the assets once the threat is present. These are also known as Process Controls and include Non-repudiation, Confidentiality, Privacy, Integrity, and Alarm. 6. Non-repudiation is a control which prevents the interacting party from denying its role in any interactivity. 7. Confidentiality is a control for assuring an asset displayed or exchanged between interacting parties cannot be known outside of those parties. 8. Privacy is a control for assuring the means of how an asset is accessed, displayed, or exchanged between parties cannot be known outside of those parties. 9. Integrity is a control to assure that interacting parties know when assets and processes have changed. 10. Alarm is a control to notify that an interaction is occurring or has occurred. While controls are a positive influence in OpSec, minimizing the attack surface, they can themselves add to the attack surface if they themselves have limitations. Often times this effect is not noticed and if the protection mechanisms aren’t tested thoroughly as to how they work under all conditions, this may not become apparent. Therefore the use of controls must assure that they do not insinuate new attack vectors into the target. Therefore, sometimes no controls are better than bad controls. Creative Commons 3.0 Attribution-Non-Commercial-NoDerivs 2010, ISECOM, www.isecom.org, www.osstmm.org 25\\nThe Bad Lock Example Is a bad lock on a door better than no lock at all? An Analyst must use critical security thinking, a form of logic skills to overcome the innate sense of security we carry to understand why bad controls can increase the attack surface to greater than no control at all. Common thought is that adding controls with limitations are better than having none at all. Is it not better to have a poor lock than to have no lock at all? After all, as conventional wisdom suggests, a wisdom borne of emotion rather than verification, some “security” is better than none. This is why the analogy of the lock is such a good example and actually does better to answer the question then any other because it shows so well how we misunderstand controls that are so common around us. Ask anyone who has had to break open a locked door where they kick or hit the door to open it? That answer differs whether it is a key lock opened from the outside as", "metadata": {"doc_id": "OSSTMM.3", "chunk_id": 17}}