{"text": "endpointresponses,whichareusedfortestingAuthorization,Session,Management,etc. Interception Proxy for a Virtual Device Setting Up a Web Proxy on an Android Virtual Device (AVD) Thefollowingprocedure,whichworksontheAndroidemulatorthatshipswithAndroidStudio3.x,isforsettingupanHTTP proxyontheemulator: 1. Setupyourproxytolistenonlocalhostandforexampleport8080. 2. ConfiguretheHTTPproxyintheemulatorsettings: • Clickonthethreedotsintheemulatormenubar • OpentheSettingsMenu • ClickontheProxytab 129\\n• SelectManualproxyconfiguration • Enter“127.0.0.1”intheHostNamefieldandyourproxyportinthePortnumberfield(e.g.,“8080”) • TapApply HTTPandHTTPSrequestsshouldnowberoutedovertheproxyonthehostcomputer. Ifnot,trytogglingairplanemode offandon. AproxyforanAVDcanalsobeconfiguredonthecommandlinebyusingtheemulatorcommandwhenstartinganAVD. ThefollowingexamplestartstheAVDNexus_5X_API_23andsetsaproxyto127.0.0.1andport8080. emulator@Nexus_5X_API_23 -http-proxy 127.0.0.1:8080 Installing a CA Certificate on the Virtual Device AneasywaytoinstallaCAcertificateistopushthecertificatetothedeviceandaddittothecertificatestoreviaSecurity Settings. Forexample,youcaninstallthePortSwigger(Burp)CAcertificateasfollows: 1. StartBurpanduseawebbrowseronthehosttonavigatetoburp/,thendownloadcacert.derbyclickingthe“CA Certificate”button. 2. Changethefileextensionfrom.derto.cer. 3. Pushthefiletotheemulator: adbpush cacert.cer/sdcard/ 4. NavigatetoSettings->Security->InstallfromSDCard. 5. Scrolldownandtapcacert.cer. Youshouldthenbepromptedtoconfirminstallationofthecertificate(you’llalsobeaskedtosetadevicePINifyouhaven’t already). Thisinstallsthecertificateintheusercertificatestore(testedonGenymotionVM).Inordertoplacethecertificateinthe rootstoreyoucanperformthefollowingsteps: 1. Runadbasrootwithadb rootandadb shell. 2. Locatethenewlyinstalledcertificateat/data/misc/user/0/cacerts-added/. 3. Copythecertificatetothefollowingfolder/system/etc/security/cacerts/. 4. ReboottheAndroidVM. 130\\nFor Android 7.0 (API level 24) and above follow the same procedure described in the “Bypassing the Network Security Configuration”section. Interception Proxy for a Physical Device Theavailablenetworksetupoptionsmustbeevaluatedfirst. Themobiledeviceusedfortestingandthehostcomputer running the interception proxy must be connected to the same Wi-Fi network. Use either an (existing) access point or createanad-hocwirelessnetwork. Once you’ve configured the network and established a connection between the testing host computer and the mobile device,severalstepsremain. • Theproxymustbeconfiguredtopointtotheinterceptionproxy. • Theinterceptionproxy’sCAcertificatemustbeaddedtothetrustedcertificatesintheAndroiddevice’scertificate storage. ThelocationofthemenuusedtostoreCAcertificatesmaydependontheAndroidversionandAndroid OEMmodificationsofthesettingsmenu. • Someapplication(e.g.theChromebrowser)mayshowNET::ERR_CERT_VALIDITY_TOO_LONGerrors,iftheleafcer- tificate happens to have a validity extending a certain time (39 months in case of Chrome). This happens if the defaultBurpCAcertificateisused,sincetheBurpSuiteissuesleafcertificateswiththesamevalidityasitsCAcer- tificate. YoucancircumventthisbycreatingyourownCAcertificateandimportittotheBurpSuite,asexplained inthisblogpost. Aftercompletingthesestepsandstartingtheapp,therequestsshouldshowupintheinterceptionproxy. AvideoofsettingupOWASPZAPwithanAndroiddevicecanbefoundonsecure.force.com. Afewotherdifferences: fromAndroid8.0(APIlevel26)onward,thenetworkbehavioroftheappchangeswhenHTTPS trafficistunneledthroughanotherconnection. AndfromAndroid9(APIlevel28)onward,theSSLSocketandSSLEngine willbehavealittlebitdifferentintermsoferrorhandlingwhensomethinggoeswrongduringthehandshakes. As mentioned before, starting with Android 7.0 (API level 24), the Android OS will no longer trust user CA certificates bydefault, unlessspecifiedintheapplication. Inthefollowingsection, weexplaintwomethodstobypassthisAndroid securitycontrol. Bypassing the Network Security Configuration InthissectionwewillpresentseveralmethodstobypassAndroid’sNetworkSecurityConfiguration. Adding Custom User Certificates to the Network Security Configuration TherearedifferentconfigurationsavailablefortheNetworkSecurityConfigurationtoaddnon-systemCertificateAuthori- tiesviathesrcattribute: <certificates src=[\"system\" |\"user\"|\"raw resource\"] overridePins=[\"true\" |\"false\"]/> Eachcertificatecanbeoneofthefollowing: • \"raw resource\"isanIDpointingtoafilecontainingX.509certificates • \"system\"forthepre-installedsystemCAcertificates • \"user\"foruser-addedCAcertificates The CA certificates trusted by the app can be a system trusted CA as well as a user CA. Usually you will have added the certificate of your interception proxy already as additional CA in Android. Therefore we will focus on the “user” setting,whichallowsyoutoforcetheAndroidapptotrustthiscertificatewiththefollowingNetworkSecurityConfiguration below: 131\\n<network-security-config> <base-config> <trust-anchors> <certificates src=\"system\" /> <certificates src=\"user\" /> </trust-anchors> </base-config> </network-security-config> Toimplementthisnewsettingyoumustfollowthestepsbelow: • Decompiletheappusingadecompilationtoollikeapktool: apktoold <filename>.apk • MaketheapplicationtrustusercertificatesbycreatingaNetworkSecurityConfigurationthatincludes<certifi- cates src=\"user\" />asexplainedabove • Gointothedirectorycreatedbyapktoolwhendecompilingtheappandrebuildtheappusingapktool. Thenewapk willbeinthedistdirectory. apktoolb • Youneedtorepackagetheapp, asexplainedinthe“Repackaging”sectionofthe“ReverseEngineeringandTam- pering”chapter. FormoredetailsontherepackagingprocessyoucanalsoconsulttheAndroiddeveloperdocumen- tation,thatexplainstheprocessasawhole. Notethatevenifthismethodisquitesimpleitsmajordrawbackisthatyouhavetoapplythisoperationforeachapplication youwanttoevaluatewhichisadditionaloverheadfortesting. Bearinmindthatiftheappyouaretestinghasadditionalhardeningmeasures,likeverificationoftheappsignature youmightnotbeabletostarttheappanymore. Aspartoftherepackagingyouwillsigntheappwithyourownkey andthereforethesignaturechangeswillresultintriggeringsuchchecksthatmightleadtoimmediatetermination oftheapp. Youwouldneedtoidentifyanddisablesuchcheckseitherbypatchingthemduringrepackagingofthe appordynamicinstrumentationthroughFrida. ThereisapythonscriptavailablethatautomatesthestepsdescribedabovecalledAndroid-CertKiller. ThisPythonscript canextracttheAPKfromaninstalledAndroidapp,decompileit,makeitdebuggable,addanewNetworkSecurityConfig- urationthatallowsusercertificates,buildsandsignsthenewAPKandinstallsthenewAPKwiththeSSLBypass. pythonmain.py -w *************************************** AndroidCertKiller (v0.1) *************************************** CertKillerWizardMode --------------------------------- Listofdevicesattached 4200dc72f27bc44d device --------------------------------- EnterApplicationPackageName:nsc.android.mstg.owasp.org.android_nsc Package:/data/app/nsc.android.mstg.owasp.org.android_nsc-1/base.apk I.InitiatingAPKextractionfromdevice complete ------------------------------ I.Decompiling complete ------------------------------ I.ApplyingSSLbypass complete ------------------------------ I.BuildingNewAPK complete ------------------------------ I.SigningAPK complete ------------------------------ WouldyouliketoinstalltheAPKonyourdevice(y/N):y ------------------------------------ InstallingUnpinnedAPK ------------------------------ Finished 132\\nAdding the Proxy’s certificate among system trusted CAs using Magisk InordertoavoidtheobligationofconfiguringtheNetworkSecurityConfigurationforeachapplication,wemustforcethe devicetoaccepttheproxy’scertificateasoneofthesystemstrustedcertificates. ThereisaMagiskmodulethatwillautomaticallyaddalluser-installedCAcertificatestothelistofsystemtrustedCAs. DownloadthelatestversionofthemoduleattheGithubReleasepage,pushthedownloadedfileovertothedeviceand import it in the Magisk Manager’s “Module” view by clicking on the + button. Finally, a restart is required by Magisk Managertoletchangestakeeffect. Fromnowon,anyCAcertificatethatisinstalledbytheuservia“Settings”,“Security&location”,“Encryption&creden- tials”, “Install from storage” (location may differ) is automatically pushed into the system’s trust store by this Magisk module. RebootandverifythattheCAcertificateislistedin“Settings”,“Security&location”,“Encryption&credentials”, “Trustedcredentials”(locationmaydiffer). Manually adding the Proxy’s certificate among system trusted CAs Alternatively,youcanfollowthefollowingstepsmanuallyinordertoachievethesameresult: • Makethe/systempartitionwritable,whichisonlypossibleonarooteddevice. Runthe‘mount’commandtomake sure the /system is writable: mount -o rw,remount /system. If this command fails, try running the following commandmount -o rw,remount -t ext4 /system • Preparetheproxy’sCAcertificatestomatchsystemcertificatesformat. Exporttheproxy’scertificatesinderformat (thisisthedefaultformatinBurpSuite)thenrunthefollowingcommands: $openssl x509 -inform DER-incacert.der -out cacert.pem $openssl x509 -inform PEM-subject_hash_old -incacert.pem |head -1 mvcacert.pem <hash>.0 • Finally,copythe<hash>.0fileintothedirectory/system/etc/security/cacertsandthenrunthefollowingcommand: chmod 644<hash>.0 By following the steps described above you allow any application to trust the proxy’s", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 67}}