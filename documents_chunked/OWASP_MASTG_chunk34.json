{"text": "MAS Project High-impactContributions(time/dedicatedresources): • ContentPRs • TechnicalReviewsforPRs • ParticipationinGitHubDiscussions AspecialmentiongoesforthecontributiontotheMASVSRefactoring: • Significanttimeinvestmenttodrivethediscussionsandcreatetheproposalsalongwiththecommunity • TestabilityAnalysis • Feedbackoneachcategoryproposal • Statisticsfrominternalanalysis Inthepast, NowSecurehasalsocontributedtotheproject, hassponsoreditbecominga“GodModeSponsor”andhas donatedtheUnCrackableAppforAndroidLevel4: Radare2Pay. SpreadingtheWord: • Socialmediainvolvement: continuousTwitterandLinkedInactivity(seeexamples) • CaseStudy: NowSecureCommitstoSecurityStandards • BlogPosts: – Integratesecurityintothemobileappsoftwaredevelopmentlifecycle – OWASPMobileSecurityTestingChecklistAidsCompliance • Presentations: – “MobileWanderlust”! OurjourneytoVersion2.0! (OWASPAppSecEU,Jun102022) – InsidersGuidetoMobileAppSecwithLatestOWASPMASVS(OWASPTorontoChapter,Feb102022) – InsidersGuidetoMobileAppSecwithLatestOWASPMASVS(OWASPVirtualAppSec2021,Nov112021) – InsidersGuidetoMobileAppSecwithOWASPMASVS(OWASPNorthernVirginiaChapter,Oct82021) – andmore Donators WhileboththeMASVSandtheMASTGarecreatedandmaintainedbythecommunityonavoluntarybasis,sometimesa littlebitofoutsidehelpisrequired. Wethereforethankourdonatorsforprovidingthefundstobeabletohiretechnical editors. Note that their donation does not influence the content of the MASVS or MASTG in any way. The Donation PackagesaredescribedonourOWASPProjectpage. 23\\n24\\nIntroduction to the OWASP Mobile Application Security Project Newtechnologyalwaysintroducesnewsecurityrisks,andmobilecomputingisnoexception. Securityconcernsformobile apps differ from traditional desktop software in some important ways. Modern mobile operating systems are arguably moresecurethantraditionaldesktopoperatingsystems,butproblemscanstillappearwhenwedon’tcarefullyconsider security during mobile app development. Data storage, inter-app communication, proper usage of cryptographic APIs, andsecurenetworkcommunicationareonlysomeoftheseconsiderations. The OWASP Mobile Application Security Verification Standard (MASVS) defines a mobile app security model and lists genericsecurityrequirementsformobileapps. Itcanbeusedbyarchitects,developers,testers,securityprofessionals, andconsumerstodefineandunderstandthequalitiesofasecuremobileapp. TheOWASPMobileApplicationSecurity TestingGuide(MASTG)mapstothesamebasicsetofsecurityrequirementsofferedbytheMASVSanddependingonthe contexttheycanbeusedindividuallyorcombinedtoachievedifferentobjectives. Forexample,theMASVSrequirementscanbeusedinanapp’splanningandarchitecturedesignstageswhilethechecklist andtestingguidemayserveasabaselineformanualsecuritytestingorasatemplateforautomatedsecuritytestsduring orafterdevelopment. Inthe“MobileAppSecurityTesting”chapterwe’lldescribehowyoucanapplythechecklistand MASTGtoamobileapppenetrationtest. Key Areas in Mobile Application Security Many mobile app penetration testers have a background in network and web app penetration testing, a quality that is valuable for mobile app testing. Almost every mobile app talks to a backend service, and those services are prone to the same types of attacks we are familiar with in web apps on desktop machines. Mobile apps differ in that there is a smallerattacksurfaceandthereforemoresecurityagainstinjectionandsimilarattacks. Instead,wemustprioritizedata protectiononthedeviceandthenetworktoincreasemobilesecurity. Let’sdiscussthekeyareasinmobileappsecurity. 25\\nData Storage and Privacy (MASVS-STORAGE) Theprotectionofsensitivedata,suchasusercredentialsandprivateinformation,iscrucialtomobilesecurity. Ifanapp usesoperatingsystemAPIssuchaslocalstorageorinter-processcommunication(IPC)improperly,theappmightexpose sensitivedatatootherappsrunningonthesamedevice. Itmayalsounintentionallyleakdatatocloudstorage,backups, orthekeyboardcache. Additionally,mobiledevicescanbelostorstolenmoreeasilycomparedtoothertypesofdevices, soit’smorelikelyanindividualcangainphysicalaccesstothedevice,makingiteasiertoretrievethedata. Whendevelopingmobileapps,wemusttakeextracarewhenstoringuserdata. Forexample,wecanuseappropriatekey storageAPIsandtakeadvantageofhardware-backedsecurityfeatureswhenavailable. FragmentationisaproblemwedealwithespeciallyonAndroiddevices. NoteveryAndroiddeviceoffershardware-backed securestorage, andmanydevicesarerunningoutdatedversionsofAndroid. Foranapptobesupportedontheseout- of-date devices, it would have to be created using an older version of Android’s API which may lack important security features. Formaximumsecurity,thebestchoiceistocreateappswiththecurrentAPIversioneventhoughthatexcludes someusers. Cryptography (MASVS-CRYPTO) Cryptography is an essential ingredient when it comes to protecting data stored on a mobile device. It is also an area wherethingscangohorriblywrong,especiallywhenstandardconventionsarenotfollowed. Itisessentialtoensurethat theapplicationusescryptographyaccordingtoindustrybestpractices,includingtheuseofprovencryptographiclibraries, aproperchoiceandconfigurationofcryptographicprimitivesaswellasasuitablerandomnumbergeneratorwherever randomnessisrequired. Authentication and Authorization (MASVS-AUTH) Inmostcases,sendinguserstologintoaremoteserviceisanintegralpartoftheoverallmobileapparchitecture. Even thoughmostoftheauthenticationandauthorizationlogichappensattheendpoint,therearealsosomeimplementation challengesonthemobileappside. Unlikewebapps,mobileappsoftenstorelong-timesessiontokensthatareunlocked withuser-to-deviceauthenticationfeaturessuchasfingerprintscanning. Whilethisallowsforaquickerloginandbetter userexperience(nobodylikestoentercomplexpasswords),italsointroducesadditionalcomplexityandroomforerror. Mobileapparchitecturesalsoincreasinglyincorporateauthorizationframeworks(suchasOAuth2)thatdelegateauthen- ticationtoaseparateserviceoroutsourcetheauthenticationprocesstoanauthenticationprovider. UsingOAuth2allows theclient-sideauthenticationlogictobeoutsourcedtootherappsonthesamedevice(e.g.thesystembrowser). Security testersmustknowtheadvantagesanddisadvantagesofdifferentpossibleauthorizationframeworksandarchitectures. Network Communication (MASVS-NETWORK) Mobiledevicesregularlyconnecttoavarietyofnetworks,includingpublicWi-Finetworkssharedwithother(potentially malicious) clients. This creates opportunities for a wide variety of network-based attacks ranging from simple to com- plicatedandoldtonew. It’scrucialtomaintaintheconfidentialityandintegrityofinformationexchangedbetweenthe mobileappandremoteserviceendpoints. Asabasicrequirement,mobileappsmustsetupasecure,encryptedchannel fornetworkcommunicationusingtheTLSprotocolwithappropriatesettings. Interaction with the Mobile Platform (MASVS-PLATFORM) Mobile operating system architectures differ from classical desktop architectures in important ways. For example, all mobileoperatingsystemsimplementapppermissionsystemsthatregulateaccesstospecificAPIs. Theyalsooffermore (Android) or less rich (iOS) inter-process communication (IPC) facilities that enable apps to exchange signals and data. Theseplatform-specificfeaturescomewiththeirownsetofpitfalls. Forexample,ifIPCAPIsaremisused,sensitivedata orfunctionalitymightbeunintentionallyexposedtootherappsrunningonthedevice. 26\\nCode Quality and Exploit Mitigation (MASVS-CODE) Traditionalinjectionandmemorymanagementissuesaren’toftenseeninmobileappsduetothesmallerattacksurface. MobileappsmostlyinteractwiththetrustedbackendserviceandtheUI,soevenifmanybufferoverflowvulnerabilities exist in the app, those vulnerabilities usually don’t open up any useful attack vectors. The same applies to browser exploitssuchascross-sitescripting(XSSallowsattackerstoinjectscriptsintowebpages)thatareveryprevalentinweb apps. However,therearealwaysexceptions. XSSistheoreticallypossibleonmobileinsomecases,butit’sveryrareto seeXSSissuesthatanindividualcanexploit. This protection from injection and memory management issues doesn’t mean that app developers can get away with writingsloppycode. Followingsecuritybestpracticesresultsinhardened(secure)releasebuildsthatareresilientagainst tampering. FreesecurityfeaturesofferedbycompilersandmobileSDKshelpincreasesecurityandmitigateattacks. Anti-Tampering and Anti-Reversing (MASVS-RESILIENCE) Therearethreethingsyoushouldneverbringupinpoliteconversations: religion,politics,andcodeobfuscation. Many security experts dismiss client-side protections outright. However, software protection controls are widely used in the mobileappworld,sosecuritytestersneedwaystodealwiththeseprotections. Webelievethere’sabenefittoclient-side protectionsiftheyareemployedwithaclearpurposeandrealisticexpectationsinmindandaren’tusedtoreplacesecurity controls. Navigating the OWASP MASTG The MASTG contains descriptions of all requirements specified in the MASVS. The MASTG contains the following main sections: 1. The General Testing Guide contains a mobile app security testing methodology and general vulnerability analy- sis techniques as they apply to mobile app", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 34}}