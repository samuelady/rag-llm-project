{"text": "cookie theft - try to avoid using innerHTML or document.write() to insert untrusted content directly into your HTML, as these methods don't filter malicious scripts. Use methods that provide finer control, such as creating elements via document.createElement() and safely inserting values with Element.textContent. If you must use unsafe methods, pass their inputs to an HTML sanitization library first, such as DOMPurify. - regularly update and audit JavaScript libraries and frameworks for vulnerabilities. References https://owasp.org/www-community/attacks/DOM_Based_XSS https://cheatsheetseries.owasp.org/cheatsheets/DOM_based_XSS_Prevention_Cheat_ Sheet.html 23\\nClassification Category ID / Value CWE CWE-79 OWASP Top 10 - 2017 A7 - Cross-Site Scripting (XSS) OWASP Top 10 - 2021 A3 - Injection Verification âœ” This finding was validated so it is not a False Positive. 24\\n4.1.6 Cross-Site Scripting Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL https://pentest-ground.com:4280/vulnerabilities/xss_r/ Method GET Vulnerable name Parameter (Query Parameter) Evidence Injected the payload <sVg/onLOad=document.body.append(`0baf618c`.repeat (2))> in the name query parameter and the expected result 0baf618c0baf618c was found in the response. The script inside the payload tries to repeat a random string. If the string 0baf618c is doubled on the response page, we confirm that our script has been executed. This request was done using a Chrome browser. If available, the replay attack button uses a simpler alert() payload that may not work as expected. To validate the vulnerability, we attempted to extract some data exposed by the application in the browser. The application uses the following (non-HttpOnly) cookies: _ga:GA1.1.1244663522.1739354417_ga_Z3XCDXSJ3P:GS1.1.17 39354416.1.1.1739354516.20.0.0_gcl_au:1.1.613626497.1739354 416PHPSESSID:19d5a469db64624265da3f93925f7be3security:l ow Request / Response 25\\nURL https://pentest-ground.com:4280/vulnerabilities/xss_s/ Method POST Vulnerable mtxMessage Parameter (Body Parameter) Evidence Injected the payload <sVg/onLOad=document['body']['append'](`c96ad3e0`[ 'repeat'](2))> in the mtxMessage body parameter and the expected result c96ad3e0c96ad3e0 was found in the response. The script inside the payload tries to repeat a random string. If the string c96ad3e0 is doubled on the response page, we confirm that our script has been executed. This request was done using a Chrome browser. If available, the replay attack button uses a simpler alert() payload that may not work as expected. To validate the vulnerability, we attempted to extract some data exposed by the application in the browser. The application uses the following (non-HttpOnly) cookies: _ga:GA1.1.1244663522.1739354417_ga_Z3XCDXSJ3P:GS1.1.17 39354416.1.1.1739354516.20.0.0_gcl_au:1.1.613626497.1739354 416PHPSESSID:19d5a469db64624265da3f93925f7be3security:l ow Request / Response URL https://pentest-ground.com:4280/vulnerabilities/xss_s/ Method POST Vulnerable txtName Parameter (Body Parameter) Evidence Injected the payload <sVg/onLOad=document.body.append(`6fdca7ee`.repeat 26\\n(2))> in the txtName body parameter and the expected result 6fdca7ee6fdca7ee was found in the response. The script inside the payload tries to repeat a random string. If the string 6fdca7ee is doubled on the response page, we confirm that our script has been executed. This request was done using a Chrome browser. If available, the replay attack button uses a simpler alert() payload that may not work as expected. To validate the vulnerability, we attempted to extract some data exposed by the application in the browser. The application uses the following (non-HttpOnly) cookies: _ga:GA1.1.1244663522.1739354417_ga_Z3XCDXSJ3P:GS1.1.17 39354416.1.1.1739354516.20.0.0_gcl_au:1.1.613626497.1739354 416PHPSESSID:19d5a469db64624265da3f93925f7be3security:l ow Request / Response Vulnerability description We found that the target web application is vulnerable to Cross-Site Scripting (XSS) attacks. This vulnerability is caused by inadequate input validation, allowing a malicious actor to inject and execute", "metadata": {"doc_id": "Sample-Pentest-Engagement-Report-group-by-target", "chunk_id": 5}}