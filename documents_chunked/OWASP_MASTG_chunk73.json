{"text": "the package name “sg.vantagepoint.uncrackable1”, which matches the original package name. Using a matching package name is important if you want to attach the debugger to the running app later on because IntelliJ uses the package name to identifythecorrectprocess. Inthe nextdialog, pick any APInumber; you don’t actuallywant to compile the project, so the number doesn’t matter. Click“next”andchoose“AddnoActivity”,thenclick“finish”. Onceyouhavecreatedtheproject,expandthe“1: Project”viewontheleftandnavigatetothefolderapp/src/main/java. Right-clickanddeletethedefaultpackage“sg.vantagepoint.uncrackable1”createdbyIntelliJ. 157\\nNow,opentheUncrackable-Level1/srcdirectoryinafilebrowseranddragthesgdirectoryintothenowemptyJava folderintheIntelliJprojectview(holdthe“alt”keytocopythefolderinsteadofmovingit). You’llendupwithastructurethatresemblestheoriginalAndroidStudioprojectfromwhichtheappwasbuilt. 158\\nSeethesection“ReviewingDecompiledJavaCode”belowtolearnonhowtoproceedwheninspectingthedecompiled Javacode. Process Exploration Platform: android Whentestinganapp,processexplorationcanprovidethetesterwithdeepinsightsintotheappprocessmemory. Itcan beachievedviaruntimeinstrumentationandallowstoperformtaskssuchas: • Retrievingthememorymapandloadedlibraries. • Searchingforoccurrencesofcertaindata. • Afterdoingasearch,obtainingthelocationofacertainoffsetinthememorymap. • Performingamemorydumpandinspectorreverseengineerthebinarydataoffline. • Reverseengineeringanativelibrarywhileit’srunning. Asyoucansee,thesepassivetaskshelpuscollectinformation. ThisInformationisoftenusedforothertechniques,such asmethodhooking. Inthefollowingsectionsyouwillbeusingr2fridatoretrieveinformationstraightfromtheappruntime. Pleasereferto r2frida’s official installation instructions. First start by opening an r2frida session to the target app (e.g. HelloWorld JNI APK)thatshouldberunningonyourAndroidphone(connectedperUSB).Usethefollowingcommand: 159\\nr2frida://usb//sg.vantagepoint.helloworldjni Seealloptionswithr2 frida://?. Onceinther2fridasession,allcommandsstartwith:. Forexample,inradare2you’drunitodisplaythebinaryinforma- tion,butinr2fridayou’duse:i. Memory Maps and Inspection Youcanretrievetheapp’smemorymapsbyrunning\\dm. TheoutputinAndroidcangetverylong(e.g.between1500 and2000lines),tonarrowyoursearchandseeonlywhatdirectlybelongstotheappapplyagrep(~)bypackagename \\dm~<package_name>: [0x00000000]>\\dm~sg.vantagepoint.helloworldjni 0x000000009b2dc000 -0x000000009b361000rw-/dev/ashmem/dalvik-/data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.art (deleted) 0x000000009b361000 -0x000000009b36e000 ---/dev/ashmem/dalvik-/data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.art (deleted) 0x000000009b36e000 -0x000000009b371000rw-/dev/ashmem/dalvik-/data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.art (deleted) 0x0000007d103be000 -0x0000007d10686000r--/data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.vdex 0x0000007d10dd0000 -0x0000007d10dee000r--/data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.odex 0x0000007d10dee000 -0x0000007d10e2b000r-x/data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.odex 0x0000007d10e3a000 -0x0000007d10e3b000r--/data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.odex 0x0000007d10e3b000 -0x0000007d10e3c000rw-/data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.odex 0x0000007d1c499000 -0x0000007d1c49a000r-x/data/app/sg.vantagepoint.helloworldjni-1/lib/arm64/libnative-lib.so 0x0000007d1c4a9000 -0x0000007d1c4aa000r--/data/app/sg.vantagepoint.helloworldjni-1/lib/arm64/libnative-lib.so 0x0000007d1c4aa000 -0x0000007d1c4ab000rw-/data/app/sg.vantagepoint.helloworldjni-1/lib/arm64/libnative-lib.so 0x0000007d1c516000 -0x0000007d1c54d000r--/data/app/sg.vantagepoint.helloworldjni-1/base.apk 0x0000007dbd23c000 -0x0000007dbd247000r--/data/app/sg.vantagepoint.helloworldjni-1/base.apk 0x0000007dc05db000 -0x0000007dc05dc000r--/data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.art Whileyou’researchingorexploringtheappmemory,youcanalwaysverifywhereyou’relocatedateachmoment(where yourcurrentoffsetislocated)inthememorymap. Insteadofnotingandsearchingforthememoryaddressinthislist youcansimplyrun\\dm.. You’llfindanexampleinthefollowingsection“In-MemorySearch”. Ifyou’reonlyinterestedinthemodules(binariesandlibraries)thattheapphasloaded,youcanusethecommand\\il tolistthemall: [0x00000000]>\\il 0x000000558b1fd000app_process64 0x0000007dbc859000libandroid_runtime.so 0x0000007dbf5d7000libbinder.so 0x0000007dbff4d000libcutils.so 0x0000007dbfd13000libhwbinder.so 0x0000007dbea00000liblog.so 0x0000007dbcf17000libnativeloader.so 0x0000007dbf21c000libutils.so 0x0000007dbde4b000libc++.so 0x0000007dbe09b000libc.so ... 0x0000007d10dd0000base.odex 0x0000007d1c499000libnative-lib.so 0x0000007d2354e000frida-agent-64.so 0x0000007dc065d000linux-vdso.so.1 0x0000007dc065f000linker64 Asyoumightexpectyoucancorrelatetheaddressesofthelibrarieswiththememorymaps: e.g.thenativelibraryofthe appislocatedat0x0000007d1c499000andoptimizeddex(base.odex)at0x0000007d10dd0000. Youcanalsouseobjectiontodisplaythesameinformation. $objection --gadget sg.vantagepoint.helloworldjniexplore sg.vantagepoint.helloworldjnion (google:8.1.0)[usb] #memorylistmodules Savetheoutputbyadding `--jsonmodules.json`tothiscommand Name Base Size Path ----------------------------------------------- ------------ -------------------- -------------------------------------------------------------------- app_process64 0x558b1fd000 32768 (32.0KiB) /system/bin/app_process64 libandroid_runtime.so 0x7dbc859000 1982464 (1.9MiB) /system/lib64/libandroid_runtime.so libbinder.so 0x7dbf5d7000 557056 (544.0KiB) /system/lib64/libbinder.so libcutils.so 0x7dbff4d000 77824 (76.0KiB) /system/lib64/libcutils.so libhwbinder.so 0x7dbfd13000 163840 (160.0KiB) /system/lib64/libhwbinder.so base.odex 0x7d10dd0000 442368 (432.0KiB) /data/app/sg.vantagepoint.helloworldjni-1/oat/arm64/base.odex libnative-lib.so 0x7d1c499000 73728 (72.0KiB) /data/app/sg.vantagepoint.helloworldjni-1/lib/arm64/libnative-lib.so YoucanevendirectlyseethesizeandthepathtothatbinaryintheAndroidfilesystem. 160\\nIn-Memory Search In-memorysearchisaveryusefultechniquetotestforsensitivedatathatmightbepresentintheappmemory. See r2frida’s help on the search command (\\/?) to learn about the search command and get a list of options. The followingshowsonlyasubsetofthem: [0x00000000]>\\/? / search /j searchjson /w searchwide /wj searchwidejson /x searchhex /xj searchhexjson ... Youcanadjustyoursearchbyusingthesearchsettings\\e~search. Forexample,\\e search.quiet=true;willprintonly theresultsandhidesearchprogress: [0x00000000]>\\e~search esearch.in=perm:r-- esearch.quiet=false Fornow,we’llcontinuewiththedefaultsandconcentrateonstringsearch. Thisappisactuallyverysimple,itloadsthe string“HellofromC++”fromitsnativelibraryanddisplaysittous. Youcanstartbysearchingfor“Hello”andseewhat r2fridafinds: [0x00000000]>\\/Hello Searching5bytes:48656c6c6f ... hits:11 0x13125398hit0_0HelloWorldJNI 0x13126b90hit0_1HelloWorld! 0x1312e220hit0_2HellofromC++ 0x70654ec5hit0_3Hello 0x7d1c499560hit0_4HellofromC++ 0x7d1c4a9560hit0_5HellofromC++ 0x7d1c51cef9hit0_6HelloWorldJNI 0x7d30ba11bchit0_7HelloWorld! 0x7d39cd796bhit0_8Hello.java 0x7d39d2024dhit0_9Hello; 0x7d3aa4d274hit0_10Hello Nowyou’dliketoknowwheretheseaddressesactuallyare. Youmaydosobyrunningthe\\dm. commandforall@@hits matchingtheglobhit0_*: [0x00000000]>\\dm.@@hit0_* 0x0000000013100000 -0x0000000013140000rw-/dev/ashmem/dalvik-mainspace (regionspace)(deleted) 0x0000000013100000 -0x0000000013140000rw-/dev/ashmem/dalvik-mainspace (regionspace)(deleted) 0x0000000013100000 -0x0000000013140000rw-/dev/ashmem/dalvik-mainspace (regionspace)(deleted) 0x00000000703c2000 -0x00000000709b5000rw-/data/dalvik-cache/arm64/system@framework@boot-framework.art 0x0000007d1c499000 -0x0000007d1c49a000r-x/data/app/sg.vantagepoint.helloworldjni-1/lib/arm64/libnative-lib.so 0x0000007d1c4a9000 -0x0000007d1c4aa000r--/data/app/sg.vantagepoint.helloworldjni-1/lib/arm64/libnative-lib.so 0x0000007d1c516000 -0x0000007d1c54d000r--/data/app/sg.vantagepoint.helloworldjni-1/base.apk 0x0000007d30a00000 -0x0000007d30c00000rw- 0x0000007d396bc000 -0x0000007d3a998000r--/system/framework/arm64/boot-framework.vdex 0x0000007d396bc000 -0x0000007d3a998000r--/system/framework/arm64/boot-framework.vdex 0x0000007d3a998000 -0x0000007d3aa9c000r--/system/framework/arm64/boot-ext.vdex Additionally, you can search for occurrences of the wide version of the string (\\/w) and, again, check their memory regions: [0x00000000]>\\/wHello Searching10bytes:480065006c006c006f00 hits:6 0x13102acchit1_0480065006c006c006f00 0x13102b9chit1_1480065006c006c006f00 0x7d30a53aa0hit1_2480065006c006c006f00 0x7d30a872b0hit1_3480065006c006c006f00 0x7d30bb9568hit1_4480065006c006c006f00 0x7d30bb9a68hit1_5480065006c006c006f00 [0x00000000]>\\dm.@@hit1_* 0x0000000013100000 -0x0000000013140000rw-/dev/ashmem/dalvik-mainspace (regionspace)(deleted) 0x0000000013100000 -0x0000000013140000rw-/dev/ashmem/dalvik-mainspace (regionspace)(deleted) 0x0000007d30a00000 -0x0000007d30c00000rw- 0x0000007d30a00000 -0x0000007d30c00000rw- 0x0000007d30a00000 -0x0000007d30c00000rw- 0x0000007d30a00000 -0x0000007d30c00000rw- 161\\nTheyareinthesamerw-regionasoneofthepreviousstrings(0x0000007d30a00000). Notethatsearchingforthewide versionsofstringsissometimestheonlywaytofindthemasyou’llseeinthefollowingsection. In-memorysearchcan be very useful to quickly know ifcertain data is located in the main app binary, inside a shared libraryorinanotherregion. Youmayalsouseittotestthebehavioroftheappregardinghowthedataiskeptinmemory. Forinstance,youcouldanalyzeanappthatperformsaloginandsearchforoccurrencesoftheuserpassword. Also,you maycheckifyoustillcanfindthepasswordinmemoryaftertheloginiscompletedtoverifyifthissensitivedataiswiped frommemoryafteritsuse. Memory Dump Youcandumptheapp’sprocessmemorywithobjectionandFridump. Totakeadvantageofthesetoolsonanon-rooted device,theAndroidappmustberepackagedwithfrida-gadget.soandre-signed. Adetailedexplanationofthisprocess isinthesectionDynamicAnalysisonNon-RootedDevices. Tousethesetoolsonarootedphone,simplyhavefrida-server installedandrunning. Note: Whenusingthesetools,youmightgetseveralmemoryaccessviolationerrorswhichcannormallybeignored. ThesetoolsinjectaFridaagentandtrytodumpallthemappedmemoryoftheappregardlessoftheaccesspermis- sions(read/write/execute). Therefore,whentheinjectedFridaagenttriestoreadaregionthat’snotreadable,it’ll returnthecorrespondingmemoryaccessviolationerrors. Refertoprevioussection“MemoryMapsandInspection” formoredetails. Withobjectionitispossibletodumpallmemoryoftherunningprocessonthedevicebyusingthecommandmemorydump all. $objection --gadget sg.vantagepoint.helloworldjniexplore sg.vantagepoint.helloworldjnion (google:8.1.0)[usb] #memorydumpall/Users/foo/memory_Android/memory Willdump719rw-images,totalling1.6GiB Dumping1002.8MiBfrombase:0x14140000 [------------------------------------] 0% 00:11:03(sessiondetach message)process-terminated Dumping8.0MiBfrombase:0x7fc753e000 [####################################] 100% Memorydumpedtofile:/Users/foo/memory_Android/memory Inthiscasetherewasanerror,whichisprobablyduetomemoryaccessviolationsaswealreadyanticipated. This error can be safely ignored as long as we areable to see the extracted dump in the file system. If you have any problems,afirststepwouldbetoenablethedebugflag-dwhenrunningobjectionor,ifthatdoesn’thelp,filean issueinobjection’sGitHub. Next,weareabletofindthe“HellofromC++”stringswithradare2: $r2/Users/foo/memory_Android/memory [0x00000000]>izz~Hellofrom 11360x000652700x00065270 14 15 ()asciiHellofromC++ AlternativelyyoucanuseFridump. Thistime, wewillinputastringandseeifwecanfinditinthememorydump. For this, opentheMASTGHackingPlaygroundapp, navigateto“OMTG_DATAST_002_LOGGING”andenter“owasp-mstg”to thepasswordfield. Next,runFridump: python3fridump.py -Usg.vp.owasp_mobile.omtg_android -s CurrentDirectory:/Users/foo/git/fridump Outputdirectoryissetto:/Users/foo/git/fridump/dump StartingMemorydump... Oops,memoryaccessviolation!-------------------------------]0.28%Complete Progress: [##################################################]99.58%Complete Runningstringsonallfiles: Progress: [##################################################]100.0%Complete Finished! Tip: Enableverbositybyincludingtheflag-vifyouwanttoseemoredetails,e.g.theregionsprovokingmemory accessviolations. 162\\nIt will take a while until", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 73}}