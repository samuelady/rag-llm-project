{"text": "longer receive any updates from the vendor, which exacerbates this issue. More information about Bootstrap’s version 3 reaching EOL is available in reference [4]. Confidential 9\\n5.1.3 Risk Analysis Pentest Risk Category CVSS 3.1/Low AV:N/AC:H/PR:H/UI:R/S:U/C:L/I:N/A:L Explanation The risk associated with this issue was considered low, as no areas of the application were found to reflect user inputs without appropriate HTML encoding. Moreover, the application implemented a strict CSP. The issue is raised to encourage updating the affected libraries and is not believed to constitute an immediate threat to Report URI or its users. 5.1.4 Recommendation The immediate recommendation is to download and integrate the latest supported versions of each outdated dependency. Pentest understands that this would be a significant undertaking for radius, due to changes in the underlying APIs and updated versions of the dependencies. As such, to ensure that updated components do not affect the user experience, a full User Acceptance Testing (UAT) would need to be carried out. The advice above would triage the initial problem only and would not prevent the situation from recurring. The long-term solution is to modify the Software Development Life Cycle (SDLC) to ensure that dependencies are regularly updated. OWASP provides a free tool called “dependency-check” (see reference [2]) which can be integrated into most build processes. 5.1.5 References [1] OWASP Top 10: A06_2021 - Vulnerable and Outdated Components [2] OWASP: OWASP Dependency Check [3] TaringAmberini: Ready to use Java Dependencies Vulnerability Checker [4] GitHub – Bootstrap version 4 issue 5.1.6 Affected Item(s) • https://report-uri.com Confidential 10\\n5.2 No Anti-Automation Protection 5.2.1 Background Web applications are subjected to unwanted automated usage. Usually, these events occur due to an improper usage of an existing functionality rather than the exploitation of vulnerabilities. Also, excessive misuse is commonly mistakenly reported as application Denial-of-Service (DoS) like HTTP-flooding, when in fact the DoS is a side-effect instead of the primary intent. Insufficient anti-automation occurs when a web application permits an attacker to automate a process that was originally designed to be performed only in a manual fashion, i.e. by a human web user 5.2.2 Details The application did implement anti-automation measures to protect against excessive automated requests. However, as the CloudFlare Bot Management was disabled for the test, remote attackers were able to send many requests to access or generate data. Although the application used CSRF tokens and validated them properly, it was possible to reuse the CSRF token because a non-standard client (Burp Suite) was used during testing. This client enabled manual manipulation and replay of HTTP requests, bypassing the typical flow of the application and allowing automation. Below is one request issued by the application to create a team: POST /team/create_team/ HTTP/2 Host: report-uri.com Cookie: _nss=1; __cf_bm=lYfP1QOpjdweC0p5pHFLAAvVIv1d91kYWSuu5nMGg5M-1731935807-1.0.1.1- ne_YxFLihgBqNOL5ndq8LwzKFHp5eFI7JSLlzYTJQtjdfQT8KX1YfX8kyMGMlnqzAE8eAKd90S.lm2x0AJ0KlA; __Host-report_uri_csrf=ec6c3b4d5aa5e5f8ffb26bd9e5f33c83; __Host- report_uri_sess=c3k0adha2690t2qlqnspbbtr30 [...] Referer: https://report-uri.com/account/teams/ csrf_token=ec6c3b4d5aa5e5f8ffb26bd9e5f33c83&name=Test%22%3E%3Cscript%3Ealert%281%29%3C%2Fsc ript The following image shows the teams that were created by the consultant: Figure 1 – CSRF token reuse Confidential 11\\n5.2.3 Risk Analysis Pentest Risk Category CVSS 3.1/Low AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:L Explanation The risk rating has been set to \"Low\" since testing was conducted with", "metadata": {"doc_id": "Report URI - 2024 Penetration Test Report", "chunk_id": 3}}