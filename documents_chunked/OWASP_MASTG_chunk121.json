{"text": "and library memory addresses hard to predict, thereby preventing attacks such as the return-to-libc attack, whichinvolvesthememoryaddressesofbasiclibcfunctions. TheXNmechanismallowsiOStomarkselectedmemorysegmentsofaprocessasnon-executable. OniOS,theprocess stackandheapofuser-modeprocessesismarkednon-executable. Pagesthatarewritablecannotbemarkedexecutable atthesametime. Thispreventsattackerstoexecutemachinecodeinjectedintothestackorheap. 330\\nSoftware Development on iOS Like other platforms, Apple provides a Software Development Kit (SDK) that helps developers to develop, install, run, andtestnativeiOSApps. XcodeisanIntegratedDevelopmentEnvironment(IDE)forApplesoftwaredevelopment. iOS applicationsaredevelopedinObjective-CorSwift. Objective-C is an object-oriented programming language that adds Smalltalk-style messaging to the C programming language. ItisusedonmacOStodevelopdesktopapplicationsandoniOStodevelopmobileapplications. Swiftisthe successorofObjective-CandallowsinteroperabilitywithObjective-C. SwiftwasintroducedwithXcode6in2014. Onanon-jailbrokendevice,therearetwowaystoinstallanapplicationoutoftheAppStore: 1. viaEnterpriseMobileDeviceManagement. Thisrequiresacompany-widecertificatesignedbyApple. 2. viasideloading, i.e., bysigninganappwithadeveloper’scertificateandinstallingitonthedeviceviaXcode(or CydiaImpactor). Alimitednumberofdevicescanbeinstalledtowiththesamecertificate. Apps on iOS iOSappsaredistributedinIPA(iOSAppStorePackage)archives. TheIPAfileisaZIP-compressedarchivethatcontains allthecodeandresourcesrequiredtoexecutetheapp. IPAfileshaveabuilt-indirectorystructure. Theexamplebelowshowsthisstructureatahighlevel: • /Payload/foldercontainsalltheapplicationdata. Wewillcomebacktothecontentsofthisfolderinmoredetail. • /Payload/Application.app contains the application data itself (ARM-compiled code) and associated static re- sources. • /iTunesArtworkisa512x512pixelPNGimageusedastheapplication’sicon. • /iTunesMetadata.plistcontainsvariousbitsofinformation,includingthedeveloper’snameandID,thebundle identifier,copyrightinformation,genre,thenameoftheapp,releasedate,purchasedate,etc. • /WatchKitSupport/WKisanexampleofanextensionbundle. Thisspecificbundlecontainstheextensiondelegate andthecontrollersformanagingtheinterfacesandrespondingtouserinteractionsonanAppleWatch. IPA Payloads - A Closer Look Let’stakeacloserlookatthedifferentfilesintheIPAcontainer. Appleusesarelativelyflatstructurewithfewextraneous directoriestosavediskspaceandsimplifyfileaccess. Thetop-levelbundledirectorycontainstheapplication’sexecutable fileandalltheresourcestheapplicationuses(forexample,theapplicationicon,otherimages,andlocalizedcontent. • MyApp: Theexecutablefilecontainingthecompiled(unreadable)applicationsourcecode. • Application: Applicationicons. • Info.plist: Configurationinformation,suchasbundleID,versionnumber,andapplicationdisplayname. • Launchimages: Imagesshowingtheinitialapplicationinterfaceinaspecificorientation. Thesystemusesoneof theprovidedlaunchimagesasatemporarybackgrounduntiltheapplicationisfullyloaded. • MainWindow.nib: Default interface objects that are loaded when the application is launched. Other interface objectsaretheneitherloadedfromothernibfilesorcreatedprogrammaticallybytheapplication. • Settings.bundle: Application-specificpreferencestobedisplayedintheSettingsapp. • Customresourcefiles: Non-localizedresourcesareplacedinthetop-leveldirectoryandlocalizedresourcesare placed in language-specific subdirectories of the application bundle. Resources include nib files, images, sound files,configurationfiles,stringsfiles,andanyothercustomdatafilestheapplicationuses. Alanguage.lprojfolderexistsforeachlanguagethattheapplicationsupports. Itcontainsastoryboardandstringsfile. • AstoryboardisavisualrepresentationoftheiOSapplication’suserinterface. Itshowsscreensandtheconnections betweenthosescreens. • Thestringsfileformatconsistsofoneormorekey-valuepairsandoptionalcomments. 331\\nOn a jailbroken device, you can recover the IPA for an installed iOS app using different tools that allow decrypting the mainappbinaryandreconstructtheIPAfile. Similarly,onajailbrokendeviceyoucaninstalltheIPAfilewithIPAInstaller. During mobile security assessments, developers often give you the IPA directly. They can send you the actual file or provideaccesstothedevelopment-specificdistributionplatformtheyuse,e.g.TestFlightorVisualStudioAppCenter. App Permissions IncontrasttoAndroidapps(beforeAndroid6.0(APIlevel23)), iOSappsdon’thavepre-assignedpermissions. Instead, theuserisaskedtograntpermissionduringruntime,whentheappattemptstouseasensitiveAPIforthefirsttime. Apps thathavebeengrantedpermissionsarelistedintheSettings>Privacymenu,allowingtheusertomodifytheapp-specific setting. Applecallsthispermissionconceptprivacycontrols. iOSdeveloperscan’tsetrequestedpermissionsdirectly,thesewillberequestedindirectlywhenaccessingsensitiveAPIs. Forexample,whenaccessingauser’scontacts,anycalltoCNContactStoreblockstheappwhiletheuserisbeingasked tograntordenyaccess. StartingwithiOS10.0,appsmustincludeusagedescriptionkeysforthetypesofpermissions theyrequestanddatatheyneedtoaccess(e.g.,NSContactsUsageDescription). ThefollowingAPIsrequireuserpermission: • Contacts • Microphone • Calendars • Camera • Reminders • HomeKit • Photos • Health • Motionactivityandfitness • Speechrecognition • LocationServices • Bluetoothsharing • MediaLibrary • Socialmediaaccounts DeviceCheck The DeviceCheck framework, including its components DeviceCheck and App Attest, helps you prevent fraudulent use of your services. It consists of a framework that you use from your app and an Apple server which is accessible only toyourownserver. DeviceCheckallowsyoutopersistentlystoreinformationonthedeviceandonAppleservers. The storedinformationremainsintactacrossappreinstallation,devicetransfers,orresets,withtheoptiontoresetthisdata periodically. DeviceCheckistypicallyusedtomitigatefraudbyrestrictingaccesstosensitiveresources. Forexample,limitingpromo- tions to once per device, identify and flag fraudulent devices, etc. However, it definitely cannot prevent all fraud. For example,itisnotmeanttodetectcompromisedoperatingsystems(aka. jailbreakdetection). 332\\nFormoreinformation,refertotheDeviceCheckdocumentation. App Attest App Attest, available under the DeviceCheck framework, helps you verify instances of the app running on a device by enablingappstoattachahardware-backedassertiontorequests,ensuringtheyoriginatefromthelegitimateappona genuineAppledevice. Thisfeatureaidsinpreventingmodifiedappsfromcommunicatingwithyourserver. Theprocessinvolvesgeneratingandvalidatingcryptographickeys, alongwithasetofverificationsperformedbyyour server,ensuringtheauthenticityoftherequest. ItisimportanttonotethatwhileAppAttestenhancessecurity,itdoes notguaranteecompleteprotectionagainstallformsoffraudulentactivities. Formoredetailedinformation,refertotheWWDC2021session,alongwiththeAppAttestdocumentationandAppAttest implementationguide. 333\\niOS Security Testing Inthischapter,we’lldiveintosettingupasecuritytestingenvironmentandintroduceyoutosomepracticalprocesses andtechniquesfortestingthesecurityofiOSapps. ThesearethebuildingblocksfortheMASTGtestcases. iOS Testing Setup AlthoughyoucanuseaLinuxorWindowshostcomputerfortesting,you’llfindthatmanytasksaredifficultorimpossible ontheseplatforms. Inaddition,theXcodedevelopmentenvironmentandtheiOSSDKareonlyavailableformacOS.This means that you’ll definitely want to work on macOS for source code analysis and debugging (it also makes black box testingeasier). Host Device ThefollowingisthemostbasiciOSapptestingsetup: • IdeallymacOShostcomputerwithadminrights • XcodeandXcodeCommandLineToolsinstalled. • Wi-Finetworkthatpermitsclient-to-clienttraffic. • AtleastonejailbrokeniOSdevice(ofthedesirediOSversion). • BurpSuiteorotherinterceptionproxytool. Obtaining the UDID of an iOS device TheUDIDisa40-digituniquesequenceoflettersandnumberstoidentifyaniOSdevice. YoucanfindtheUDIDofyour iOSdeviceonmacOSCatalinaonwardsintheFinderapp,asiTunesisnotavailableanymoreinCatalina. OpenFinderand selecttheconnectediOSdeviceinthesidebar. Clickonthetextcontainingthemodel, storagecapacity, andbatteryinformation, anditwilldisplaytheserialnumber, UDID,andmodelinstead: 334\\nYoucancopytheUDIDbyrightclickingonit. ItisalsopossibletogettheUDIDviavariouscommandlinetoolsonmacOSwhilethedeviceisattachedviaUSB: • ByusingtheI/ORegistryExplorertoolioreg: $ioreg -pIOUSB -l|grep \"USBSerial\" | \"USBSerial Number\" =\"9e8ada44246cee813e2f8c1407520bf2f84849ec\" • Byusingideviceinstaller(alsoavailableonLinux): $brew installideviceinstaller $idevice_id -l 316f01bd160932d2bf2f95f1f142bc29b1c62dbc • Byusingthesystem_profiler: $system_profiler SPUSBDataType |sed-n-e'/iPad/,/Serial/p;/iPhone/,/Serial/p;/iPod/,/Serial/p' |grep \"SerialNumber:\" 2019-09-0810:18:03.920 system_profiler[13251:1050356]SPUSBDevice:IOCreatePlugInInterfaceForServicefailed0xe00002be SerialNumber: 64655621de6ef5e56a874d63f1e1bdd14f7103b1 • Byusinginstruments: instruments -sdevices Testing on a real device (Jailbroken) You should have a jailbroken iPhone or iPad for running tests. These devices allow root access and tool installation, makingthesecuritytestingprocessmorestraightforward. Ifyoudon’thaveaccesstoajailbrokendevice,youcanapply theworkaroundsdescribedlaterinthischapter,butbepreparedforamoredifficultexperience. Testing on the iOS Simulator UnliketheAndroidemulator,whichfullyemulatesthehardwareofanactualAndroiddevice,theiOSSDKsimulatoroffers a higher-level simulation of", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 121}}