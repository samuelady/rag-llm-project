{"text": "guarantees that the app cannot obtain the credentialsduringtheloginprocess(“credentialphishing”). • Almostnoauthenticationlogicmustbeaddedtotheappitself,preventingcodingerrors. Onthenegativeside,thereisnowaytocontrolthebehaviorofthebrowser(e.g.toactivatecertificatepinning). Embedded User Agent: Usinganembeddeduseragent isthemethodofchoiceforappsthatneedtooperatewithin a closed ecosystem, for example to interact with corporate accounts. For example, consider a banking app that uses OAuth2toretrieveanaccesstokenfromthebank’sauthenticationserver,whichisthenusedtoaccessanumberofmicro services. Inthatcase,credentialphishingisnotaviablescenario. Itislikelypreferabletokeeptheauthenticationprocess inthe(hopefully)carefullysecuredbankingapp,insteadofplacingtrustonexternalcomponents. Best Practices Foradditionalbestpracticesanddetailedinformationpleaserefertothefollowingsourcedocuments: • RFC6749-TheOAuth2.0AuthorizationFramework(October2012) • RFC8252-OAuth2.0forNativeApps(October2017) • RFC6819-OAuth2.0ThreatModelandSecurityConsiderations(January2013) Someofthebestpracticesincludebutarenotlimitedto: • Useragent: – Theusershouldhaveawaytovisuallyverifytrust(e.g.,TransportLayerSecurity(TLS)confirmation,website mechanisms). – Topreventman-in-the-middleattacks,theclientshouldvalidatetheserver’sfullyqualifieddomainnamewith thepublickeytheserverpresentedwhentheconnectionwasestablished. • Typeofgrant: – Onnativeapps,codegrantshouldbeusedinsteadofimplicitgrant. – Whenusingcodegrant,PKCE(ProofKeyforCodeExchange)shouldbeimplementedtoprotectthecodegrant. Makesurethattheserveralsoimplementsit. – Theauth“code”shouldbeshort-livedandusedimmediatelyafteritisreceived. Verifythatauthcodesonly resideontransientmemoryandaren’tstoredorlogged. • Clientsecrets: – Shared secrets should not be used to prove the client’s identity because the client could be impersonated (“client_id”alreadyservesasproof). Iftheydouseclientsecrets,besurethattheyarestoredinsecurelocal storage. • End-Usercredentials: – Securethetransmissionofend-usercredentialswithatransport-layermethod,suchasTLS. • Tokens: – Keepaccesstokensintransientmemory. – Accesstokensmustbetransmittedoveranencryptedconnection. – Reducethescopeanddurationofaccesstokenswhenend-to-endconfidentialitycan’tbeguaranteedorthe tokenprovidesaccesstosensitiveinformationortransactions. – Rememberthatanattackerwhohasstolentokenscanaccesstheirscopeandallresourcesassociatedwith themiftheappusesaccesstokensasbearertokenswithnootherwaytoidentifytheclient. – Storerefreshtokensinsecurelocalstorage;theyarelong-termcredentials. User Logout Failingtodestroytheserver-sidesessionisoneofthemostcommonlogoutfunctionalityimplementationerrors. Thiserror keepsthesessionortokenalive,evenaftertheuserlogsoutoftheapplication. Anattackerwhogetsvalidauthentication informationcancontinuetouseitandhijackauser’saccount. 55\\nManymobileappsdon’tautomaticallylogusersout. Therecanbevariousreasons,suchas: becauseitisinconvenient for customers, or because of decisions made when implementing stateless authentication. The application should still havealogoutfunction,anditshouldbeimplementedaccordingtobestpractices,destroyingalllocallystoredtokensor sessionidentifiers. Ifsessioninformationisstoredontheserver,itshouldbedestroyedbysendingalogoutrequesttothatserver. Incaseof ahigh-riskapplication,tokensshouldbeinvalidated. Notremovingtokensorsessionidentifierscanresultinunauthorized accesstotheapplicationincasethetokensareleaked. Notethatothersensitivetypesofinformationshouldberemoved aswell,asanyinformationthatisnotproperlyclearedmaybeleakedlater,forexampleduringadevicebackup. Herearedifferentexamplesofsessionterminationforproperserver-sidelogout: • Spring(Java) • RubyonRails • PHP Ifaccessandrefreshtokensareusedwithstatelessauthentication,theyshouldbedeletedfromthemobiledevice. The refreshtokenshouldbeinvalidatedontheserver. TheOWASPWebTestingGuide(WSTG-SESS-06)includesadetailedexplanationandmoretestcases. Supplementary Authentication Authenticationschemesaresometimessupplementedbypassivecontextualauthentication,whichcanincorporate: • Geolocation • IPaddress • Timeofday • Thedevicebeingused Ideally, in such a system the user’s context is compared to previously recorded data to identify anomalies that might indicateaccountabuseorpotentialfraud. Thisprocessistransparenttotheuser,butcanbecomeapowerfuldeterrent toattackers. Two-factor Authentication Two-factor authentication (2FA) is standard for apps that allow users to access sensitive functions and data. Common implementationsuseapasswordforthefirstfactorandanyofthefollowingasthesecondfactor: • One-timepasswordviaSMS(SMS-OTP) • One-timecodeviaphonecall • Hardwareorsoftwaretoken • PushnotificationsincombinationwithPKIandlocalauthentication Whateveroptionisused,italwaysmustbeenforcedandverifiedontheserver-sideandneveronclient-side. Otherwise the2FAcanbeeasilybypassedwithintheapp. The2FAcanbeperformedatloginorlaterintheuser’ssession. For example, after logging in to a banking app with a username and PIN, the user is authorized to perform non- sensitive tasks. Once the user attempts to execute a bank transfer, the second factor (“step-up authentication”) mustbepresented. BestPractices: • Don’trollyourown2FA:Therearevarioustwo-factorauthenticationmechanismsavailablewhichcanrangefrom third-partylibraries,usageofexternalappstoselfimplementedchecksbythedevelopers. • Useshort-livedOTPs: AOTPshouldbevalidforonlyacertainamountoftime(usually30seconds)andafterkeying intheOTPwronglyseveraltimes(usually3times)theprovidedOTPshouldbeinvalidatedandtheusershouldbe redirectedtothelandingpageorloggedout. • Storetokenssecurely: Topreventthesekindofattacks,theapplicationshouldalwaysverifysomekindofusertoken orotherdynamicinformationrelatedtotheuserthatwaspreviouslysecurelystored(e.g.intheKeychain/KeyStore). 56\\nSMS-OTP Althoughone-timepasswords(OTP)sentviaSMSareacommonsecondfactorfortwo-factorauthentication,thismethod has its shortcomings. In 2016, NIST suggested: “Dueto the risk that SMS messages may be intercepted or redirected, implementersofnewsystemsSHOULDcarefullyconsideralternativeauthenticators.”. Belowyouwillfindalistofsome relatedthreatsandsuggestionstoavoidsuccessfulattacksonSMS-OTP. Threats: • WirelessInterception: TheadversarycaninterceptSMSmessagesbyabusingfemtocellsandotherknownvulnera- bilitiesinthetelecommunicationsnetwork. • Trojans: InstalledmaliciousapplicationswithaccesstotextmessagesmayforwardtheOTPtoanothernumberor backend. • SIMSWAPAttack: Inthisattack,theadversarycallsthephonecompany,orworksforthem,andhasthevictim’s numbermovedtoaSIMcardownedbytheadversary. Ifsuccessful,theadversarycanseetheSMSmessageswhich aresenttothevictim’sphonenumber. Thisincludesthemessagesusedinthetwo-factorauthentication. • VerificationCodeForwardingAttack: Thissocialengineeringattackreliesonthetrusttheusershaveinthecompany providingtheOTP.Inthisattack,theuserreceivesacodeandislateraskedtorelaythatcodeusingthesamemeans inwhichitreceivedtheinformation. • Voicemail: Sometwo-factorauthenticationschemesallowtheOTPtobesentthroughaphonecallwhenSMSisno longerpreferredoravailable. Manyofthesecalls,ifnotanswered,sendtheinformationtovoicemail. Ifanattacker wasabletogainaccesstothevoicemail,theycouldalsousetheOTPtogainaccesstoauser’saccount. YoucanfindbelowseveralsuggestionstoreducethelikelihoodofexploitationwhenusingSMSforOTP: • Messaging: WhensendinganOTPviaSMS,besuretoincludeamessagethatletstheuserknow1)whattodoif theydidnotrequestthecode2)yourcompanywillnevercallortextthemrequestingthattheyrelaytheirpassword orcode. • Dedicated Channel: When using the OS push notification feature (APN on iOS and FCM on Android), OTPs can be sent securely to a registered application. This information is, compared to SMS, not accessible by other applications. AlternativelyofaOTPthepushnotificationcouldtriggerapop-uptoapprovetherequestedaccess. • Entropy: Use authenticators with high entropy to make OTPs harder to crack or guess and use at least 6 digits. Makesurethatdigitsareseparatesinsmallergroupsincasepeoplehavetorememberthemtocopythemtoyour app. • AvoidVoicemail: Ifauserpreferstoreceiveaphonecall,donotleavetheOTPinformationasavoicemail. SMS-OTPResearch: • [#dmitrienko]Dmitrienko,Alexandra,etal.“Onthe(in)securityofmobiletwo-factorauthentication.” International ConferenceonFinancialCryptographyandDataSecurity. Springer,Berlin,Heidelberg,2014. • [#grassi] Grassi, Paul A., et al. Digital identity guidelines: Authentication and lifecycle management (DRAFT). No.SpecialPublication(NISTSP)-800-63B.2016. • [#grassi2]Grassi,PaulA.,etal.Digitalidentityguidelines: Authenticationandlifecyclemanagement. No.Special Publication(NISTSP)-800-63B.2017. • [#konoth]Konoth,RadheshKrishnan,VictorvanderVeen,andHerbertBos. “Howanywherecomputingjustkilled yourphone-basedtwo-factorauthentication.” InternationalConferenceonFinancialCryptographyandDataSecu- rity. Springer,Berlin,Heidelberg,2016. • [#mulliner]Mulliner,Collin,etal.“SMS-basedone-timepasswords: attacksanddefense.” InternationalConference onDetectionofIntrusionsandMalware,andVulnerabilityAssessment. Springer,Berlin,Heidelberg,2013. • [#siadati]Siadati,Hossein,etal.“MindyourSMSes: Mitigatingsocialengineeringinsecondfactorauthentication.” Computers&Security65(2017): 14-28. • [#siadati2]Siadati,Hossein,ToanNguyen,andNasirMemon. “Verificationcodeforwardingattack(shortpaper).” InternationalConferenceonPasswords. Springer,Cham,2015. Transaction Signing with Push Notifications and PKI Anotheralternativeandstrongmechanismstoimplementasecondfactoristransactionsigning. Transactionsigningrequiresauthenticationoftheuser’sapprovalofcriticaltransactions. Asymmetriccryptographyisthe bestwaytoimplementtransactionsigning. Theappwillgenerateapublic/privatekeypairwhentheusersignsup,then 57\\nregistersthepublickeyonthebackend. TheprivatekeyissecurelystoredintheKeyStore(Android)orKeyChain(iOS). To authorize a transaction, the backend sends the mobile app a push notification containing the transaction data. The useristhenaskedtoconfirmordenythetransaction. Afterconfirmation,theuserispromptedtounlocktheKeychain(by enteringthePINorfingerprint),andthedataissignedwithuser’sprivatekey. Thesignedtransactionisthensenttothe server,whichverifiesthesignaturewiththeuser’spublickey. Login Activity and Device Blocking Itisabestpracticethatappsshouldinformtheuseraboutallloginactivitieswithintheappwiththepossibilityofblocking certaindevices. Thiscanbebrokendownintovariousscenarios: 1. Theapplicationprovidesapushnotificationthemomenttheiraccountisusedonanotherdevicetonotifytheuser ofdifferentactivities. Theusercanthenblockthisdeviceafteropeningtheappviathepush-notification. 2. The application provides an overview of the last session", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 45}}