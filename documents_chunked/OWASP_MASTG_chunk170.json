{"text": "CLI tool (frida) to work with Frida interactively. It hooks into a process and gives you a command line interfacetoFrida’sAPI. frida -Ucom.android.chrome Withthe-loption,youcanalsousetheFridaCLItoloadscripts,e.g.,toloadmyscript.js: 530\\nfrida -U-lmyscript.jscom.android.chrome FridaalsoprovidesaJavaAPI,whichisespeciallyhelpfulfordealingwithAndroidapps. ItletsyouworkwithJavaclasses andobjectsdirectly. HereisascripttooverwritetheonResumefunctionofanActivityclass: Java.perform(function (){ varActivity =Java.use(\"android.app.Activity\"); Activity.onResume.implementation =function (){ console.log(\"[*]onResume()gotcalled!\"); this.onResume(); }; }); TheabovescriptcallsJava.performtomakesurethatyourcodegetsexecutedinthecontextoftheJavaVM.Itinstantiates awrapperfortheandroid.app.ActivityclassviaJava.useandoverwritestheonResumefunction. ThenewonResume functionimplementationprintsanoticetotheconsoleandcallstheoriginalonResumemethodbyinvokingthis.onResume everytimeanactivityisresumedintheapp. The JADX decompiler (v1.3.3 and above) can generate Frida snippets through its graphical code browser. To use this feature,opentheAPKorDEXwithjadx-gui,browsetothetargetmethod,rightclickthemethodname,andselect“Copy asfridasnippet(f)”. ForexampleusingtheMASTGUnCrackableAppforAndroidLevel1: Theabovestepsplacethefollowingoutputinthepasteboard,whichyoucanthenpasteinaJavaScriptfileandfeedinto frida -U -l. leta=Java.use(\"sg.vantagepoint.a.a\"); a[\"a\"].implementation =function (bArr,bArr2){ console.log('aiscalled' +',' +'bArr:' +bArr +',' +'bArr2:' +bArr2); letret=this.a(bArr,bArr2); console.log('aretvalueis' +ret); return ret; }; The above code hooks the a method within the sg.vantagepoint.a.a class and logs its input parameters and return values. 531\\nFridaalsoletsyousearchforandworkwithinstantiatedobjectsthatareontheheap. Thefollowingscriptsearchesfor instancesofandroid.view.ViewobjectsandcallstheirtoStringmethod. Theresultisprintedtotheconsole: setImmediate(function(){ console.log(\"[*]Startingscript\"); Java.perform(function (){ Java.choose(\"android.view.View\",{ \"onMatch\":function(instance){ console.log(\"[*]Instancefound:\" +instance.toString()); }, \"onComplete\":function(){ console.log(\"[*]Finishedheapsearch\") } }); }); }); Theoutputwouldlooklikethis: [*]Startingscript [*]Instancefound:android.view.View{7ccea78G.ED...........ID0,0-0,0 #7f0c01fcapp:id/action_bar_black_background} [*]Instancefound:android.view.View{2809551V.ED.............0,1731-0,1731 #7f0c01ffapp:id/menu_anchor_stub} [*]Instancefound:android.view.View{be471b6G.ED...........I.0,0-0,0 #7f0c01f5app:id/location_bar_verbose_status_separator} [*]Instancefound:android.view.View{3ae0eb7V.ED.............0,0-1080,63 #102002fandroid:id/statusBarBackground} [*]Finishedheapsearch YoucanalsouseJava’sreflectioncapabilities. Tolistthepublicmethodsoftheandroid.view.Viewclass,youcouldcreate awrapperforthisclassinFridaandcallgetMethodsfromthewrapper’sclassproperty: Java.perform(function (){ varview =Java.use(\"android.view.View\"); varmethods =view.class.getMethods(); for(vari=0;i<methods.length;i++){ console.log(methods[i].toString()); } }); Thiswillprintaverylonglistofmethodstotheterminal: public boolean android.view.View.canResolveLayoutDirection() public boolean android.view.View.canResolveTextAlignment() public boolean android.view.View.canResolveTextDirection() public boolean android.view.View.canScrollHorizontally(int) public boolean android.view.View.canScrollVertically(int) public final void android.view.View.cancelDragAndDrop() public void android.view.View.cancelLongPress() public final void android.view.View.cancelPendingInputEvents() ... Apktool Platform: android Availableat: https://github.com/iBotPeaches/Apktool Apktool is used to unpack Android app packages (APKs). Simply unzipping APKs with the standardunzip utility leaves somefilesunreadable. AndroidManifest.xmlisencodedintobinaryXMLformatwhichisn’treadablewithatexteditor. Also,theappresourcesarestillpackagedintoasinglearchivefile. When run with default command line flags, apktool automatically decodes the Android Manifest file to text-based XML formatandextractsthefileresources(italsodisassemblesthe.DEXfilestosmalicode-afeaturethatwe’llrevisitlater inthisbook). Amongtheunpackedfilesyoucanusuallyfind(afterrunningapktool d base.apk): • AndroidManifest.xml: ThedecodedAndroidManifestfile,whichcanbeopenedandeditedinatexteditor. • apktool.yml: filecontaininginformationabouttheoutputofapktool • original: foldercontainingtheMANIFEST.MFfile,whichcontainsinformationaboutthefilescontainedintheJARfile • res: directorycontainingtheapp’sresources 532\\n• smali: directorycontainingthedisassembledDalvikbytecode. You can also use apktool to repackage decoded resources back to binary APK/JAR. See the section “Exploring the App Package”lateronthischapterandsection“Repackaging”inthechapterTamperingandReverseEngineeringonAndroid formoreinformationandpracticalexamples. Termux Platform: android TermuxisaterminalemulatorforAndroidthatprovidesaLinuxenvironmentthatworksdirectlywithorwithoutrooting andwithnosetuprequired. TheinstallationofadditionalpackagesisatrivialtaskthankstoitsownAPTpackagemanager (whichmakesadifferenceincomparisontootherterminalemulatorapps). Youcansearchforspecificpackagesbyusing thecommandpkgsearch<pkg_name>andinstallpackageswithpkginstall<pkg_name>. YoucaninstallTermuxstraight fromGooglePlay. adb Platform: android adb(AndroidDebugBridge),shippedwiththeAndroidSDK,bridgesthegapbetweenyourlocaldevelopmentenvironment andaconnectedAndroiddevice. You’llusuallyleverageittotestappsontheemulatororaconnecteddeviceviaUSBor Wi-Fi. Usetheadb devicescommandtolisttheconnecteddevicesandexecuteitwiththe-largumenttoretrievemore detailsonthem. $adbdevices -l Listofdevicesattached 090c285c0b97f748deviceusb:1-1product:razormodel:Nexus_7device:flo emulator-5554 deviceproduct:sdk_google_phone_x86model:Android_SDK_built_for_x86device:generic_x86transport_id:1 adb provides other useful commands such as adb shell to start an interactive shell on a target and adb forward to forwardtrafficonaspecifichostporttoadifferentportonaconnectdevice. adbforwardtcp:<hostport>tcp:<deviceport> $adb -semulator-5554shell root@generic_x86:/ #ls acct cache charger config ... You’llcomeacrossdifferentusecasesonhowyoucanuseadbcommandswhentestinglaterinthisbook. Notethatyou mustdefinetheserialnummerofthetargetdevicewiththe-sargument(asshownbythepreviouscodesnippet)incase youhavemultipledevicesconnected. SSLUnpinning Platform: android Availableat: https://github.com/ac-pm/SSLUnpinning_Xposed AnXposedModuletobypassSSLcertificatepinning-https://github.com/ac-pm/SSLUnpinning_Xposed apkx 533\\nPlatform: android Availableat: https://github.com/muellerberndt/apkx apkxisaPythonwrappertopopularfreeDEXconvertersandJavadecompilers. Itautomatestheextraction,conversion, anddecompilationofAPKs. Installitasfollows: gitclonehttps://github.com/muellerberndt/apkx cdapkx sudo ./install.sh Thisshouldcopyapkxto/usr/local/bin. Seesection“DecompilingJavaCode”ofthe“ReverseEngineeringandTam- pering”chapterformoreinformationaboutusage. RootCloak Plus Platform: android Availableat: https://github.com/devadvance/rootcloakplus ACydiaSubstrateModuleusedtocheckforcommonlyknownindicationsofroot-https://github.com/devadvance/rootcl oakplus Angr Platform: android AngrisaPythonframeworkforanalyzingbinaries. Itisusefulforbothstaticanddynamicsymbolic(“concolic”)analysis. Inotherwords: givenabinaryandarequestedstate,Angrwilltrytogettothatstate,usingformalmethods(atechnique used for static code analysis) to find a path, as well as brute forcing. Using angr to get to the requestedstate is often muchfasterthantakingmanualstepsfordebuggingandsearchingthepathtowardstherequiredstate. Angroperates ontheVEXintermediatelanguageandcomeswithaloaderforELF/ARMbinaries,soitisperfectfordealingwithnative code,suchasnativeAndroidbinaries. Angrallowsfordisassembly,programinstrumentation,symbolicexecution,control-flowanalysis,data-dependencyanal- ysis,decompilationandmore,givenalargesetofplugins. Since version 8, Angr is based on Python 3, and can be installed with pip on *nix operating systems, macOS and Win- dows: pipinstallangr Someofangr’sdependenciescontainforkedversionsofthePythonmodulesZ3andPyVEX,whichwouldoverwrite theoriginalversions. Ifyou’reusingthosemodulesforanythingelse,youshouldcreateadedicatedvirtualenviron- mentwithVirtualenv. Alternatively,youcanalwaysusetheprovideddockercontainer. Seetheinstallationguide formoredetails. Comprehensive documentation, including an installation guide, tutorials, and usage examples are available on Angr’s Gitbookspage. AcompleteAPIreferenceisalsoavailable. YoucanuseangrfromaPythonREPL-suchasiPython-orscriptyourapproaches. Althoughangrhasabitofasteep learningcurve,wedorecommendusingitwhenyouwanttobruteforceyourwaytoagivenstateofanexecutable. Please seethe “SymbolicExecution” sectionof the “ReverseEngineering and Tampering”chapter as a greatexampleon how thiscanwork. Magisk 534\\nPlatform: android Magisk (“Magic Mask”) is one way to root your Android device. It’s specialty lies in the way the modifications on the systemareperformed. Whileotherrootingtoolsaltertheactualdataonthesystempartition,Magiskdoesnot(whichis called“systemless”). Thisenablesa waytohidethemodificationsfromroot-sensitiveapplications (e.g.forbankingor games)andallowsusingtheofficialAndroidOTAupgradeswithouttheneedtounrootthedevicebeforehand. YoucangetfamiliarwithMagiskreadingtheofficialdocumentationonGitHub. Ifyoudon’thaveMagiskinstalled,youcan findinstallationinstructionsinthedocumentation. IfyouuseanofficialAndroidversionandplantoupgradeit,Magisk providesatutorialonGitHub. LearnmoreaboutrootingyourdevicewithMagisk. FlowDroid Platform: android Availableat: https://github.com/secure-software-engineering/FlowDroid FlowDroid is an open-source tool based", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 170}}