{"text": "Hookortracethefollowing: • generalPasteboardforthesystem-widegeneralpasteboard. • pasteboardWithName:create: andpasteboardWithUniqueNameforcustompasteboards. Detect Persistent Pasteboard Usage HookortracethedeprecatedsetPersistent: methodandverifyifit’sbeingcalled. Monitoring and Inspecting Pasteboard Items Whenmonitoringthepasteboards,thereisseveraldetailsthatmaybedynamicallyretrieved: • ObtainpasteboardnamebyhookingpasteboardWithName:create: andinspectingitsinputparametersorpaste- boardWithUniqueNameandinspectingitsreturnvalue. • Getthefirstavailablepasteboarditem: e.g.forstringsusestringmethod. Oruseanyoftheothermethodsfor thestandarddatatypes. • GetthenumberofitemswithnumberOfItems. • Checkforexistenceofstandarddatatypeswiththeconveniencemethods,e.g.hasImages,hasStrings,hasURLs (startinginiOS10). • Check for other data types (typically UTIs) with containsPasteboardTypes: inItemSet:. You may inspect for moreconcretedatatypeslike,forexampleanpictureaspublic.pngandpublic.tiff(UTIs)orforcustomdatasuch ascom.mycompany.myapp.mytype. Rememberthat,inthiscase,onlythoseappsthatdeclareknowledgeofthe typeareabletounderstandthedatawrittentothepasteboard. Thisisthesameaswehaveseeninthe“UIActivity Sharing”section. RetrievethemusingitemSetWithPasteboardTypes: andsettingthecorrespondingUTIs. • CheckforexcludedorexpiringitemsbyhookingsetItems:options: andinspectingitsoptionsforUIPasteboar- dOptionLocalOnlyorUIPasteboardOptionExpirationDate. Ifonlylookingforstringsyoumaywanttouseobjection’scommandios pasteboard monitor: Hooks into the iOS UIPasteboard class and polls the generalPasteboard every 5 seconds for data. If new data is found,differentfromthepreviouspoll,thatdatawillbedumpedtoscreen. 479\\nYoumayalsobuildyourownpasteboardmonitorthatmonitorsspecificinformationasseenabove. Forexample,thisscript(inspiredfromthescriptbehindobjection’spasteboardmonitor)readsthepasteboarditemsevery 5seconds,ifthere’ssomethingnewitwillprintit: const UIPasteboard =ObjC.classes.UIPasteboard; const Pasteboard =UIPasteboard.generalPasteboard(); varitems =\"\"; varcount =Pasteboard.changeCount().toString(); setInterval(function (){ const currentCount =Pasteboard.changeCount().toString(); const currentItems =Pasteboard.items().toString(); if(currentCount ===count){ return;} items =currentItems; count =currentCount; console.log('[*Pasteboardchanged]count:' +count + 'hasStrings:' +Pasteboard.hasStrings().toString()+ 'hasURLs:' +Pasteboard.hasURLs().toString()+ 'hasImages:' +Pasteboard.hasImages().toString()); console.log(items); },1000 *5); Intheoutputwecanseethefollowing: [*Pasteboardchanged]count:64hasStrings:truehasURLs:falsehasImages:false ( { \"public.utf8-plain-text\" =hola; } ) [*Pasteboardchanged]count:65hasStrings:truehasURLs:truehasImages:false ( { \"public.url\" =\"https://codeshare.frida.re/\"; \"public.utf8-plain-text\" =\"https://codeshare.frida.re/\"; } ) [*Pasteboardchanged]count:66hasStrings:falsehasURLs:falsehasImages:true ( { \"com.apple.uikit.image\" =\"<UIImage:0x1c42b23c0>size{571,264}orientation0scale1.000000\"; \"public.jpeg\" =\"<UIImage:0x1c44a1260>size{571,264}orientation0scale1.000000\"; \"public.png\" =\"<UIImage:0x1c04aaaa0>size{571,264}orientation0scale1.000000\"; } ) Youseethatfirstatextwascopiedincludingthestring“hola”,afterthataURLwascopiedandfinallyapicturewascopied. SomeofthemareavailableviadifferentUTIs. OtherappswillconsidertheseUTIstoallowpastingofthisdataornot. Testing for Sensitive Functionality Exposure Through IPC Platform: ios MASVSV1: MSTG-PLATFORM-4 MASVSV2: MASVS-PLATFORM-1 Testing Auto-Generated Screenshots for Sensitive Information Platform: ios MASVSV1: MSTG-STORAGE-9 MASVSV2: MASVS-PLATFORM-3 480\\nOverview Static Analysis Ifyouhavethesourcecode,searchfortheapplicationDidEnterBackgroundmethodtodeterminewhethertheapplica- tionsanitizesthescreenbeforebeingbackgrounded. Thefollowingisasampleimplementationusingadefaultbackgroundimage(overlayImage.png)whenevertheapplica- tionisbackgrounded,overridingthecurrentview: Swift: private varbackgroundImage:UIImageView? func applicationDidEnterBackground(_application:UIApplication){ letmyBanner =UIImageView(image:#imageLiteral(resourceName:\"overlayImage\")) myBanner.frame =UIScreen.main.bounds backgroundImage =myBanner window?.addSubview(myBanner) } func applicationWillEnterForeground(_application:UIApplication){ backgroundImage?.removeFromSuperview() } Objective-C: @property (UIImageView *)backgroundImage; -(void)applicationDidEnterBackground:(UIApplication *)application { UIImageView *myBanner =[[UIImageViewalloc]initWithImage:@\"overlayImage.png\"]; self.backgroundImage =myBanner; self.backgroundImage.bounds =UIScreen.mainScreen.bounds; [self.windowaddSubview:myBanner]; } -(void)applicationWillEnterForeground:(UIApplication *)application { [self.backgroundImageremoveFromSuperview]; } ThissetsthebackgroundimagetooverlayImage.pngwhenevertheapplicationisbackgrounded. Itpreventssensitive dataleaksbecauseoverlayImage.pngwillalwaysoverridethecurrentview. Dynamic Analysis YoucanuseavisualapproachtoquicklyvalidatethistestcaseusinganyiOSdevice(jailbrokenornot): 1. Navigate to an application screen that displays sensitive information, such as a username, an email address, or accountdetails. 2. BackgroundtheapplicationbyhittingtheHomebuttononyouriOSdevice. 3. Verifythatadefaultimageisshownasthetopviewelementinsteadoftheviewcontainingthesensitiveinformation. If required, you may also collect evidence by performing steps 1 to 3 on a jailbroken device or a non-jailbroken device afterrepackagingtheappwiththeFridaGadget. Afterthat, connecttotheiOSdeviceperSSHorbyothermeansand navigatetotheSnapshotsdirectory. ThelocationmaydifferoneachiOSversionbutit’susuallyinsidetheapp’sLibrary directory. Forinstance,oniOS14.5theSnapshotsdirectoryislocatedat: /var/mobile/Containers/Data/Application/$APP_ID/Library/SplashBoard/Snapshots/sceneID:$APP_NAME-default/ Thescreenshotsinsidethatfoldershouldnotcontainanysensitiveinformation. Testing UIActivity Sharing 481\\nPlatform: ios MASVSV1: MSTG-PLATFORM-4 MASVSV2: MASVS-PLATFORM-1 Overview Static Analysis Sending Items WhentestingUIActivitySharingyoushouldpayspecialattentionto: • thedata(items)beingshared, • thecustomactivities, • theexcludedactivitytypes. Data sharing via UIActivity works by creating a UIActivityViewController and passing it the desired items (URLs, text,apicture)oninit(activityItems: applicationActivities:). Aswementionedbefore,itispossibletoexcludesomeofthesharingmechanismsviathecontroller’sexcludedActiv- ityTypesproperty. ItishighlyrecommendedtodothetestsusingthelatestversionsofiOSasthenumberofactivity typesthatcanbeexcludedcanincrease. Thedevelopershavetobeawareofthisandexplicitlyexcludetheonesthat arenotappropriatefortheappdata. Someactivitytypesmightnotbeevendocumentedlike“CreateWatchFace”. Ifhavingthesourcecode,youshouldtakealookattheUIActivityViewController: • Inspecttheactivitiespassedtotheinit(activityItems:applicationActivities:) method. • Checkifitdefinescustomactivities(alsobeingpassedtothepreviousmethod). • VerifytheexcludedActivityTypes,ifany. Ifyouonlyhavethecompiled/installedapp,trysearchingforthepreviousmethodandproperty,forexample: $rabin2 -zqTelegram\\X.app/Telegram\\X |grep -iactivityItems 0x1000df0344544initWithActivityItems:applicationActivities: Receiving Items Whenreceivingitems,youshouldcheck: • iftheappdeclarescustomdocumenttypesbylookingintoExported/ImportedUTIs(“Info”taboftheXcodeproject). ThelistofallsystemdeclaredUTIs(UniformTypeIdentifiers)canbefoundinthearchivedAppleDeveloperDocu- mentation. • iftheappspecifiesanydocumenttypesthatitcanopenbylookingintoDocumentTypes(“Info”taboftheXcode project). Ifpresent,theyconsistofnameandoneormoreUTIsthatrepresentthedatatype(e.g.“public.png”for PNGfiles). iOSusesthistodetermineiftheappiseligibletoopenagivendocument(specifyingExported/Imported UTIsisnotenough). • iftheappproperlyverifiesthereceiveddatabylookingintotheimplementationofapplication:openURL:options: (oritsdeprecatedversionUIApplicationDelegate application:openURL:sourceApplication:annotation:) in theappdelegate. IfnothavingthesourcecodeyoucanstilltakealookintotheInfo.plistfileandsearchfor: • UTExportedTypeDeclarations/UTImportedTypeDeclarationsiftheappdeclaresexported/importedcustomdoc- umenttypes. • CFBundleDocumentTypestoseeiftheappspecifiesanydocumenttypesthatitcanopen. AverycompleteexplanationabouttheuseofthesekeyscanbefoundonStackoverflow. Let’sseeareal-worldexample. WewilltakeaFileManagerappandtakealookatthesekeys. Weusedobjectionhereto readtheInfo.plistfile. 482\\nobjection --gadget SomeFileManagerruniosplistcatInfo.plist NotethatthisisthesameasifwewouldretrievetheIPAfromthephoneoraccessedviae.g.SSHandnavigated tothecorrespondingfolderintheIPA/appsandbox. However,withobjectionwearejustonecommandawayfrom ourgoalandthiscanbestillconsideredstaticanalysis. Thefirstthingwenoticedisthatappdoesnotdeclareanyimportedcustomdocumenttypesbutwecouldfindacouple ofexportedones: UTExportedTypeDeclarations= ( { UTTypeConformsTo= ( \"public.data\" ); UTTypeDescription=\"SomeFileManagerFiles\"; UTTypeIdentifier=\"com.some.filemanager.custom\"; UTTypeTagSpecification= { \"public.filename-extension\"= ( ipa, deb, zip, rar, tar, gz, ... key, pem, p12, cer ); }; } ); TheappalsodeclaresthedocumenttypesitopensaswecanfindthekeyCFBundleDocumentTypes: CFBundleDocumentTypes= ( { ... CFBundleTypeName=\"SomeFileManagerFiles\"; LSItemContentTypes= ( \"public.content\", \"public.data\", \"public.archive\", \"public.item\", \"public.database\", \"public.calendar-event\", ... ); } ); We can see that this File Manager will try to open anything that conforms to any of the UTIs listed in LSItemContent- Typesandit’sreadytoopenfileswiththeextensionslistedinUTTypeTagSpecification/\"public.filename-extension\". Pleasetakeanoteofthisbecauseitwillbeusefulifyouwanttosearchforvulnerabilitieswhendealingwiththedifferent typesoffileswhenperformingdynamicanalysis. Dynamic Analysis Sending Items Therearethreemainthingsyoucaneasilyinspectbyperformingdynamicinstrumentation: • TheactivityItems: anarrayoftheitemsbeingshared. Theymightbeofdifferenttypes,e.g.onestringandone picturetobesharedviaamessagingapp. • TheapplicationActivities: anarrayofUIActivityobjectsrepresentingtheapp’scustomservices. • TheexcludedActivityTypes: anarrayoftheActivityTypesthatarenotsupported,e.g.postToFacebook. Toachievethisyoucandotwothings: 483\\n• Hookthemethodwehaveseeninthestaticanalysis(init(activityItems: applicationActivities:)) toget theactivityItemsandapplicationActivities. • FindouttheexcludedactivitiesbyhookingexcludedActivityTypesproperty. Let’sseeanexampleusingTelegramtoshareapictureandatextfile. Firstpreparethehooks,wewillusetheFridaREPL andwriteascriptforthis: Interceptor.attach( ObjC.classes. UIActivityViewController['-initWithActivityItems:applicationActivities:'].implementation,{ onEnter:function (args){ printHeader(args) this.initWithActivityItems =ObjC.Object(args[2]); this.applicationActivities =ObjC.Object(args[3]); console.log(\"initWithActivityItems:\" +this.initWithActivityItems); console.log(\"applicationActivities:\" +this.applicationActivities); }, onLeave:function (retval){ printRet(retval); } });", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 158}}