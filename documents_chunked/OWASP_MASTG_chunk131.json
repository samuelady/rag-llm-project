{"text": "-W-d-v-m Xcode ItisalsopossibletousetheXcodeIDEtoinstalliOSappsbydoingthefollowingsteps: 1. StartXcode 2. SelectWindow/DevicesandSimulators 3. SelecttheconnectediOSdeviceandclickonthe+signinInstalledApps. Allow Application Installation on a Non-iPad Device SometimesanapplicationcanrequiretobeusedonaniPaddevice. IfyouonlyhaveiPhoneoriPodtouchdevicesthen youcanforcetheapplicationtoaccepttobeinstalledandusedonthesekindsofdevices. Youcandothisbychanging thevalueofthepropertyUIDeviceFamilytothevalue1intheInfo.plistfile. <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE plist PUBLIC\"-//Apple//DTDPLIST1.0//EN\"\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"> <plist version=\"1.0\"> <dict> <key>UIDeviceFamily</key> <array> <integer>1</integer> </array> </dict> </plist> 372\\nItisimportanttonotethatchangingthisvaluewillbreaktheoriginalsignatureoftheIPAfilesoyouneedtore-signthe IPA,aftertheupdate,inordertoinstallitonadeviceonwhichthesignaturevalidationhasnotbeendisabled. ThisbypassmightnotworkiftheapplicationrequirescapabilitiesthatarespecifictomoderniPadswhileyouriPhoneor iPodisabitolder. PossiblevaluesforthepropertyUIDeviceFamilycanbefoundintheAppleDeveloperdocumentation. Onefundamentalstepwhenanalyzingappsisinformationgathering. Thiscanbedonebyinspectingtheapppackage on your host computer or remotely by accessing the app data on the device. You’ll find more advance techniques in thesubsequentchaptersbut,fornow,wewillfocusonthebasics: gettingalistofallinstalledapps,exploringtheapp packageandaccessingtheappdatadirectoriesonthedeviceitself. Thisshouldgiveyouabitofcontextaboutwhatthe app is all about without even having to reverse engineer it or perform more advanced analysis. We will be answering questionssuchas: • Whichfilesareincludedinthepackage? • WhichFrameworksdoestheappuse? • Whichcapabilitiesdoestheapprequire? • Whichpermissionsdoestheapprequesttotheuserandforwhatreason? • Doestheappallowanyunsecuredconnections? • Doestheappcreateanynewfileswhenbeinginstalled? Get Open Connections Platform: ios lsofcommandwheninvokedwithoption-i,itgivesthelistofopennetworkportsforallactiveprocessesonthedevice. Togetalistofopennetworkportsforaspecificprocess,thelsof-i-a-p<pid>commandcanbeused,where-a(AND) optionisusedforfiltering. BelowafilteredoutputforPID1isshown. iPhone:~root#lsof -i-a-p1 COMMANDPIDUSER FD TYPE DEVICESIZE/OFFNODENAME launchd 1root 27u IPv60x69c2ce210efdc023 0t0 TCP *:ssh (LISTEN) launchd 1root 28u IPv60x69c2ce210efdc023 0t0 TCP *:ssh (LISTEN) launchd 1root 29u IPv40x69c2ce210eeaef53 0t0 TCP *:ssh (LISTEN) launchd 1root 30u IPv40x69c2ce210eeaef53 0t0 TCP *:ssh (LISTEN) launchd 1root 31u IPv40x69c2ce211253b90b 0t0 TCP192.168.1.12:ssh->192.168.1.8:62684 (ESTABLISHED) launchd 1root 42u IPv40x69c2ce211253b90b 0t0 TCP192.168.1.12:ssh->192.168.1.8:62684 (ESTABLISHED) Dumping KeyChain Data Platform: ios DumpingtheKeyChaindatacanbedonewithmultipletools,butnotallofthemwillworkonanyiOSversion. Asismore oftenthecase,trythedifferenttoolsorlookuptheirdocumentationforinformationonthelatestsupportedversions. Objection (Jailbroken / non-Jailbroken) The KeyChain data can easily be viewed using Objection. First, connect objection to the app as described in “Recom- mendedTools-Objection”. Then,usetheios keychain dumpcommandtogetanoverviewofthekeychain: $objection --gadget=\"iGoat-Swift\" explore ...[usb]#ioskeychaindump ... Note:YoumaybeaskedtoauthenticateusingthedevicespasscodeorTouchID Savetheoutputbyadding `--jsonkeychain.json`tothiscommand DumpingtheiOSkeychain... Created Accessible ACL Type Account Service Data ------------------------- ------------------------------ ----- -------- ------------------- -------------------------- ↪ ---------------------------------------------------------------------- 2019-06-0610:53:09+0000 WhenUnlocked None Password keychainValue com.highaltitudehacks.dvia mypassword123 2019-06-0610:53:30+0000 WhenUnlockedThisDeviceOnly None Password SCAPILazyVector com.toyopagroup.picaboo (failedtodecode) 2019-06-0610:53:30+0000 AfterFirstUnlockThisDeviceOnly None Password fideliusDeviceGraph com.toyopagroup.picaboo (failedtodecode) 373\\n2019-06-0610:53:30+0000 AfterFirstUnlockThisDeviceOnly None Password SCDeviceTokenKey2 com.toyopagroup.picaboo ↪ 00001:FKsDMgVISiavdm70v9Fhv5z+pZfBTTN7xkwSwNvVr2IhVBqLsC7QBhsEjKMxrEjh 2019-06-0610:53:30+0000 AfterFirstUnlockThisDeviceOnly None Password SCDeviceTokenValue2 com.toyopagroup.picaboo ↪ CJ8Y8K2oE3rhOFUhnxJxDS1Zp8Z25XzgY2EtFyMbW3U= OWASP.iGoat-Swifton (iPhone:12.0)[usb] #quit Notethatcurrently,thelatestversionsoffrida-serverandobjectiondonotcorrectlydecodeallkeychaindata. Different combinationscanbetriedtoincreasecompatibility. Forexample,thepreviousprintoutwascreatedwithfrida-tools==1. 3.0,frida==12.4.8andobjection==1.5.0. Finally, sincethekeychaindumperisexecutedfromwithintheapplicationcontext, itwillonlyprintoutkeychainitems thatcanbeaccessedbytheapplicationandnottheentirekeychainoftheiOSdevice. Grapefruit (Jailbroken / non-Jailbroken) WithGrapefruitit’spossibletoaccessthekeychaindataoftheappyouhaveselected. InsidetheStoragesection,click onKeychainandyoucanseealistingofthestoredKeychaininformation. Keychain-dumper (Jailbroken) YoucanuseKeychain-dumperdumpthejailbrokendevice’sKeyChaincontents. Onceyouhaveitrunningonyourdevice: iPhone:~root#/tmp/keychain_dumper (...) GenericPassword ---------------- Service:myApp Account:key3 EntitlementGroup:RUD9L355Y.sg.vantagepoint.example Label: (null) GenericField: (null) KeychainData:SmJSWxEs GenericPassword ---------------- 374\\nService:myApp Account:key7 EntitlementGroup:RUD9L355Y.sg.vantagepoint.example Label: (null) GenericField: (null) KeychainData:WOg1DfuH In newer versions of iOS (iOS 11 and up), additional steps are necessary. See the README.md for more details. Note thatthisbinaryissignedwithaself-signedcertificatethathasa“wildcard”entitlement. Theentitlementgrantsaccess toallitemsintheKeychain. Ifyouareparanoidorhaveverysensitiveprivatedataonyourtestdevice,youmaywantto buildthetoolfromsourceandmanuallysigntheappropriateentitlementsintoyourbuild;instructionsfordoingthisare availableintheGitHubrepository. Disassembling Native Code Platform: ios BecauseObjective-CandSwiftarefundamentallydifferent,theprogramminglanguageinwhichtheappiswrittenaffects thepossibilitiesforreverseengineeringit. Forexample,Objective-Callowsmethodinvocationstobechangedatruntime. Thismakeshookingintootherappfunctions(atechniqueheavilyusedbyCycriptandotherreverseengineeringtools) easy. This“methodswizzling”isnotimplementedthesamewayinSwift,andthedifferencemakesthetechniqueharder toexecutewithSwiftthanwithObjective-C. On iOS, all the application code (both Swiftand Objective-C) is compiled to machine code (e.g. ARM). Thus, to analyze iOSapplicationsadisassemblerisneeded. IfyouwanttodisassembleanapplicationfromtheAppStore,removetheFairplayDRMfirst. Section“AcquiringtheApp Binary”inthechapter“iOSBasicSecurityTesting”explainshow. In this section the term “app binary” refers to the Macho-O file in the application bundle which contains the compiled code,andshouldnotbeconfusedwiththeapplicationbundle-theIPAfile. Seesection“ExploringtheAppPackage”in chapter“BasiciOSSecurityTesting”formoredetailsonthecompositionofIPAfiles. Disassembling With IDA Pro IfyouhavealicenseforIDAPro,youcananalyzetheappbinaryusingIDAProaswell. ThefreeversionofIDAunfortunatelydoesnotsupporttheARMprocessortype. Togetstarted,simplyopentheappbinaryinIDAPro. 375\\nUpon opening the file, IDA Pro will perform auto-analysis, which can take a while depending on the size of the binary. Oncetheauto-analysisiscompletedyoucanbrowsethedisassemblyintheIDAView(Disassembly)windowandexplore functionsintheFunctionswindow,bothshowninthescreenshotbelow. A regular IDA Pro license does not include a decompiler by default and requires an additional license for the Hex-Rays decompiler, which is expensive. In contrast, Ghidra comes with a very capable free builtin decompiler, making it a compellingalternativetouseforreverseengineering. IfyouhavearegularIDAProlicenseanddonotwanttobuytheHex-Raysdecompiler,youcanuseGhidra’sdecompiler byinstallingtheGhIDApluginforIDAPro. ThemajorityofthischapterappliestoapplicationswritteninObjective-Corhavingbridgedtypes,whicharetypescom- patible with both Swift and Objective-C. The Swift compatibility of most tools that work well with Objective-C is being improved. 376\\nReviewing Decompiled Objective-C and Swift Code Platform: ios TODO:Don’thavethisyet Reviewing Disassembled Objective-C and Swift Code Platform: ios In this section we will", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 131}}