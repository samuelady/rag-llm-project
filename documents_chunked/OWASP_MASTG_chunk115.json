{"text": "gdbserver:unabletoopen/procfile '/proc/20267/status' Cannotattachtolwp20267:Nosuchfileordirectory (2) Exiting Tobypassthis,wemustmodifytheapp’sbehaviorslightly(theeasiestwaystodosoarepatchingthecallto_exitwith NOPsandhookingthefunction_exitinlibc.so). Atthispoint,wehaveenteredtheproverbial“armsrace”: implement- ingmoreintricateformsofthisdefenseaswellasbypassingitarealwayspossible. File Integrity Checks Therearetwotopicsrelatedtofileintegrity: 1. Codeintegritychecks: Inthe“TamperingandReverseEngineeringonAndroid”chapter,wediscussedAndroid’sAPK codesignaturecheck. Wealsosawthatdeterminedreverseengineerscaneasilybypassthischeckbyre-packaging andre-signinganapp. Tomakethisbypassingprocessmoreinvolved,aprotectionschemecanbeaugmentedwith CRCchecksontheappbytecode,nativelibraries,andimportantdatafiles. Thesecheckscanbeimplementedon boththeJavaandthenativelayer. Theideaistohaveadditionalcontrolsinplacesothattheapponlyrunscorrectly initsunmodifiedstate,evenifthecodesignatureisvalid. 2. Thefilestorageintegritychecks: TheintegrityoffilesthattheapplicationstoresontheSDcardorpublicstorage andtheintegrityofkey-valuepairsthatarestoredinSharedPreferencesshouldbeprotected. Sample Implementation - Application Source Code Integritychecksoftencalculateachecksumorhashoverselectedfiles. Commonlyprotectedfilesinclude • AndroidManifest.xml, • classfiles*.dex, • nativelibraries(*.so). 309\\nThefollowingsampleimplementationfromtheAndroidCrackingblogcalculatesaCRCoverclasses.dexandcompares ittotheexpectedvalue. private void crcTest()throws IOException { boolean modified =false; //requireddexcrcvaluestoredasatextstring. //itcouldbeanyinvisiblelayoutelement long dexCrc =Long.parseLong(Main.MyContext.getString(R.string.dex_crc)); ZipFilezf =newZipFile(Main.MyContext.getPackageCodePath()); ZipEntryze =zf.getEntry(\"classes.dex\"); if(ze.getCrc()!=dexCrc ){ //dexhasbeenmodified modified =true; } else { //dexnottamperedwith modified =false; } } Sample Implementation - Storage When providing integrity on the storage itself, you can either create an HMAC over a given key-value pair (as for the AndroidSharedPreferences)orcreateanHMACoveracompletefilethat’sprovidedbythefilesystem. WhenusinganHMAC,youcanuseabouncycastleimplementationortheAndroidKeyStoretoHMACthegivencontent. CompletethefollowingprocedurewhengeneratinganHMACwithBouncyCastle: 1. MakesureBouncyCastleorSpongyCastleisregisteredasasecurityprovider. 2. InitializetheHMACwithakey(whichcanbestoredinakeystore). 3. GetthebytearrayofthecontentthatneedsanHMAC. 4. CalldoFinalontheHMACwiththebytecode. 5. AppendtheHMACtothebytearrayobtainedinstep3. 6. Storetheresultofstep5. CompletethefollowingprocedurewhenverifyingtheHMACwithBouncyCastle: 1. MakesurethatBouncyCastleorSpongyCastleisregisteredasasecurityprovider. 2. ExtractthemessageandtheHMAC-bytesasseparatearrays. 3. Repeatsteps1-4oftheprocedureforgeneratinganHMAC. 4. ComparetheextractedHMAC-bytestotheresultofstep3. WhengeneratingtheHMACbasedontheAndroidKeystore, thenitisbesttoonlydothisforAndroid6.0(APIlevel23) andhigher. ThefollowingisaconvenientHMACimplementationwithoutAndroidKeyStore: public enum HMACWrapper { HMAC_512(\"HMac-SHA512\"),//pleasenotethatthisisthespecfortheBCprovider HMAC_256(\"HMac-SHA256\"); private final Stringalgorithm; private HMACWrapper(final Stringalgorithm){ this.algorithm =algorithm; } public MaccreateHMAC(final SecretKeykey){ try{ Mace =Mac.getInstance(this.algorithm,\"BC\"); SecretKeySpecsecret =newSecretKeySpec(key.getKey().getEncoded(), this.algorithm); e.init(secret); return e; }catch (NoSuchProviderException |InvalidKeyException |NoSuchAlgorithmExceptione){ //handlethem } } public byte[]hmac(byte[]message,SecretKeykey){ Macmac =this.createHMAC(key); return mac.doFinal(message); } public boolean verify(byte[]messageWithHMAC,SecretKeykey){ 310\\nMacmac =this.createHMAC(key); byte[]checksum =extractChecksum(messageWithHMAC,mac.getMacLength()); byte[]message =extractMessage(messageWithHMAC,mac.getMacLength()); byte[]calculatedChecksum =this.hmac(message,key); intdiff =checksum.length ^calculatedChecksum.length; for(inti=0;i<checksum.length && i<calculatedChecksum.length;++i){ diff |=checksum[i]^calculatedChecksum[i]; } return diff ==0; } public byte[]extractMessage(byte[]messageWithHMAC){ Machmac =this.createHMAC(SecretKey.newKey()); return extractMessage(messageWithHMAC,hmac.getMacLength()); } private static byte[]extractMessage(byte[]body,intchecksumLength){ if(body.length >=checksumLength){ byte[]message =newbyte[body.length -checksumLength]; System.arraycopy(body,0,message,0,message.length); return message; }else { return newbyte[0]; } } private static byte[]extractChecksum(byte[]body,intchecksumLength){ if(body.length >=checksumLength){ byte[]checksum =newbyte[checksumLength]; System.arraycopy(body,body.length -checksumLength,checksum,0, checksumLength); return checksum; }else { return newbyte[0]; } } static { Security.addProvider(newBouncyCastleProvider()); } } Anotherwaytoprovideintegrityistosignthebytearrayyouobtainedandaddthesignaturetotheoriginalbytearray. Detection of Reverse Engineering Tools Thepresenceoftools, frameworksandappscommonlyusedbyreverseengineersmayindicateanattempttoreverse engineertheapp. Someofthesetoolscanonlyrunonarooteddevice,whileothersforcetheappintodebuggingmode ordependonstartingabackgroundserviceonthemobilephone. Therefore, therearedifferentwaysthatanappmay implementtodetectareverseengineeringattackandreacttoit,e.g.byterminatingitself. Youcandetectpopularreverseengineeringtoolsthathavebeeninstalledinanunmodifiedformbylookingforassociated applicationpackages,files,processes,orothertool-specificmodificationsandartifacts. Inthefollowingexamples,we’ll discussdifferentwaystodetecttheFridainstrumentationframework,whichisusedextensivelyinthisguide. Othertools, such as Substrate and Xposed, can be detected similarly. Note that DBI/injection/hooking tools can often be detected implicitly,throughruntimeintegritychecks,whicharediscussedbelow. Forinstance,initsdefaultconfigurationonarooteddevice,Fridarunsonthedeviceasfrida-server. Whenyouexplicitly attach to a target app (e.g. via frida-trace or the Frida REPL), Frida injects a frida-agent into the memory of the app. Therefore, youmayexpecttofinditthereafterattachingtotheapp(andnotbefore). Ifyoucheck/proc/<pid>/maps you’llfindthefrida-agentasfrida-agent-64.so: bullhead:/ #cat/proc/18370/maps|grep-ifrida 71b6bd6000-71b7d62000r-xp /data/local/tmp/re.frida.server/frida-agent-64.so 71b7d7f000-71b7e06000r--p /data/local/tmp/re.frida.server/frida-agent-64.so 71b7e06000-71b7e28000rw-p /data/local/tmp/re.frida.server/frida-agent-64.so Theothermethod(whichalsoworksfornon-rooteddevices)consistsofembeddingafrida-gadgetintotheAPKandforcing theapptoloaditasoneofitsnativelibraries. Ifyouinspecttheappmemorymapsafterstartingtheapp(noneedto attachexplicitlytoit)you’llfindtheembeddedfrida-gadgetaslibfrida-gadget.so. 311\\nbullhead:/ #cat/proc/18370/maps|grep-ifrida 71b865a000-71b97f1000r-xp /data/app/sg.vp.owasp_mobile.omtg_android-.../lib/arm64/libfrida-gadget.so 71b9802000-71b988a000r--p /data/app/sg.vp.owasp_mobile.omtg_android-.../lib/arm64/libfrida-gadget.so 71b988a000-71b98ac000rw-p /data/app/sg.vp.owasp_mobile.omtg_android-.../lib/arm64/libfrida-gadget.so LookingatthesetwotracesthatFridaleftsbehind,youmightalreadyimaginethatdetectingthosewouldbeatrivialtask. Andactually,sotrivialwillbebypassingthatdetection. Butthingscangetmuchmorecomplicated. Thefollowingtable shortlypresentsasetofsometypicalFridadetectionmethodsandashortdiscussionontheireffectiveness. Someofthefollowingdetectionmethodsarepresentedinthearticle“TheJiu-JitsuofDetectingFrida”byBerdhard Mueller(archived). Pleaserefertoitformoredetailsandforexamplecodesnippets. Method Description Discussion CheckingtheAppSignature Inordertoembedthefrida-gadget Thisisunfortunatelytootrivialto withintheAPK,itwouldneedtobe bypass,e.g.bypatchingtheAPKor repackagedandresigned. Youcould performingsystemcallhooking. checkthesignatureoftheAPKwhen theappisstarting (e.g.GET_SIGNING_CERTIFICATES sinceAPIlevel28)andcompareitto theoneyoupinnedinyourAPK. CheckTheEnvironmentFor Artifactscanbepackagefiles, SinceAndroid7.0(APIlevel24), RelatedArtifacts binaries,libraries,processes,and inspectingtherunning temporaryfiles. ForFrida,thiscould services/processeswon’tshowyou bethefrida-serverrunninginthe daemonslikethefrida-serverasitis target(rooted)system(thedaemon notbeingstartedbytheappitself. responsibleforexposingFridaover Evenifitwouldbepossible, TCP).Inspecttherunningservices bypassingthiswouldbeaseasyjust (getRunningServices)andprocesses renamingthecorrespondingFrida (ps)searchingforonewhosenameis artifact(frida-server/frida- “frida-server”. Youcouldalsowalk gadget/frida-agent). throughthelistofloadedlibrariesand checkforsuspiciousones(e.g.those including“frida”intheirnames). CheckingForOpenTCPPorts Thefrida-serverprocessbindstoTCP Thismethoddetectsfrida-serverinits port27042bydefault. Checkwhether defaultmode,butthelisteningport thisportisopenisanothermethodof canbechangedviaacommandline detectingthedaemon. argument,sobypassingthisisalittle tootrivial. CheckingForPortsResponding frida-serverusestheD-Bus Thisisafairlyrobustmethodof ToD-BusAuth protocoltocommunicate,soyoucan detectingfrida-server,butFrida expectittorespondtoD-BusAUTH. offersalternativemodesofoperation SendaD-BusAUTHmessagetoevery thatdon’trequirefrida-server. openportandcheckforananswer, hopingthatfrida-serverwillreveal itself. 312\\nMethod Description Discussion ScanningProcessMemoryfor Scanthememoryforartifactsfound Thismethodisabitmoreeffective, KnownArtifacts inFrida’slibraries,e.g.thestring anditisdifficulttobypasswithFrida “LIBFRIDA”presentinallversionsof only,especiallyifsomeobfuscation frida-gadgetandfrida-agent. For hasbeenaddedandifmultiple example,use artifactsarebeingscanned. However, Runtime.getRuntime().execand thechosenartifactsmightbepatched iteratethroughthememory intheFridabinaries. Findthesource mappingslistedin/proc/self/maps codeonBerdhardMueller’sGitHub. or/proc/<pid>/maps(dependingon theAndroidversion)searchingforthe string. Pleaserememberthatthistableisfarfromexhaustive. Wecouldstarttalkingaboutnamedpipes(usedbyfrida-server forexternalcommunication),detectingtrampolines(indirectjumpvectorsinsertedattheprologueoffunctions),which wouldhelpdetectingSubstrateorFrida’sInterceptorbut,forexample,won’tbeeffectiveagainstFrida’sStalker;andmany other,moreorless,effectivedetectionmethods. Eachofthemwilldependonwhetheryou’reusingarooteddevice,the specific version of the rooting method and/or the version of the tool itself. Further, the app can try to make it harder to detect the implemented protection mechanisms by using various obfuscation techniques. At the end, this is part of thecatandmousegameofprotectingdatabeingprocessedonanuntrustedenvironment(anapprunningintheuser device). Itisimportanttonotethatthesecontrolsareonlyincreasingthecomplexityofthereverseengineeringprocess. If used, the best approachis to combine the controlscleverly instead of using them individually. However, none of themcanassurea100%effectiveness,asthereverseengineerwillalwayshavefullaccesstothedeviceandwill thereforealwayswin! Youalsohavetoconsiderthatintegratingsomeofthecontrolsintoyourappmightincrease thecomplexityofyourappandevenhaveanimpactonitsperformance. Emulator Detection", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 115}}