{"text": "that if a user visits a web page (e.g. \"http://example.com/pricing/\") and clicks on a link from that page going to e.g. \"https://www.google.com\", the browser will send to Google the full originating URL in the Referer header, assuming the Referrer-Policy header is not set. The originating URL could be considered sensitive information and it could be used for user tracking. Recommendation The Referrer-Policy header should be configured on the server side to avoid user tracking and inadvertent information leakage. The value no-referrer of this header instructs the browser to omit the Referer header entirely. 53\\nReferences https://developer.mozilla.org/en- US/docs/Web/Security/Referer_header:_privacy_and_security_concerns Classification Category ID / Value CWE CWE-693 OWASP Top 10 - 2017 A6 - Security Misconfiguration OWASP Top 10 - 2021 A5 - Security Misconfiguration Verification ✔ This finding was validated so it is not a False Positive. 54\\n4.1.19 Unsafe security header: Content-Security-Policy Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL Evidence https://pentest- Response headers include the HTTP ground.com:4280/vulnerabilities/csp/ Content-Security-Policy security header with the following security issues: Request / Response Vulnerability description We noticed that the Content-Security-Policy (CSP) header configured for the web application includes unsafe directives. The CSP header activates a protection mechanism implemented in web browsers which prevents exploitation of Cross-Site Scripting vulnerabilities (XSS) by restricting the sources from which content can be loaded or executed. Risk description For example, if the unsafe-inline directive is present in the CSP header, the execution of inline scripts and event handlers is allowed. This can be exploited by an attacker to execute arbitrary JavaScript code in the context of the vulnerable application. Recommendation Remove the unsafe values from the directives, adopt nonces or hashes for safer inclusion of inline scripts if they are needed, and explicitly define the sources from which scripts, styles, images or other resources can be loaded. 55\\nReferences https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet. html https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy Classification Category ID / Value CWE CWE-693 OWASP Top 10 - 2017 A6 - Security Misconfiguration OWASP Top 10 - 2021 A5 - Security Misconfiguration Verification ✔ This finding was validated so it is not a False Positive. 56\\n4.1.20 Password Submitted in URL Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL https://pentest-ground.com:4280/vulnerabilities/brute/ Method GET Parameters Headers: User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Cookies: PHPSESSID=589f7516a2374b37367b6b2f248c71f5 security=low Evidence The following form sends inputs of type password plainly in the URL: Request / Response URL https://pentest-ground.com:4280/vulnerabilities/brute/ Method GET Parameters Query: Login=Login password=Secure123456$ 57\\nusername=1d3d2d231d2dd4 Headers: User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Cookies: PHPSESSID=589f7516a2374b37367b6b2f248c71f5 security=low Evidence The following form sends inputs of type password plainly in the URL: Request / Response URL https://pentest-ground.com:4280/vulnerabilities/brute/ Method GET Parameters Query: Login=Login password[$ptt]=Secure123456$ username[$ptt]=1d3d2d231d2dd4 Headers: User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Cookies: PHPSESSID=589f7516a2374b37367b6b2f248c71f5 security=low Evidence The following form sends inputs of type password plainly in the URL: Request / Response URL https://pentest-ground.com:4280/vulnerabilities/csrf/ 58\\nMethod GET Parameters Headers: User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Cookies: PHPSESSID=589f7516a2374b37367b6b2f248c71f5 security=low Evidence The following form sends inputs of type password plainly in the URL:", "metadata": {"doc_id": "Sample-Pentest-Engagement-Report-group-by-target", "chunk_id": 12}}