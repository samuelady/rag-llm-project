{"text": "toGDBcommands. Get Open Files Platform: ios lsofisapowerfulcommand,andprovidesaplethoraofinformationaboutarunningprocess. Itcanprovidealistofall openfiles, including a stream, a networkfile ora regularfile. Wheninvoking thelsof commandwithout anyoption it will list all open files belonging to all active processes on the system, while when invoking with the flags -c <process name>or-p <pid>,itreturnsthelistofopenfilesforthespecifiedprocess. Themanpageshowsvariousotheroptionsin detail. UsinglsofforaniOSapplicationrunningwithPID2828,listvariousopenfilesasshownbelow. iPhone:~root#lsof -p2828 COMMAND PID USER FD TYPEDEVICESIZE/OFF NODENAME iOweApp2828mobile cwd DIR 1,2 864 2/ iOweApp2828mobile txt REG 1,3 206144189774/private/var/containers/Bundle/Application/F390A491-3524-40EA-B3F8-6C1FA105A23A/iOweApp.app/iOweApp iOweApp2828mobile txt REG 1,3 5492213230/private/var/mobile/Containers/Data/Application/5AB3E437-9E2D-4F04-BD2B- ↪ 972F6055699E/tmp/com.apple.dyld/iOweApp-6346DC276FE6865055F1194368EC73CC72E4C5224537F7F23DF19314CF6FD8AA.closure iOweApp2828mobile txt REG 1,3 30628212198/private/var/preferences/Logging/.plist-cache.vqXhr1EE iOweApp2828mobile txt REG 1,2 50080234433/usr/lib/libobjc-trampolines.dylib iOweApp2828mobile txt REG 1,2 344204 74185/System/Library/Fonts/AppFonts/ChalkboardSE.ttc iOweApp2828mobile txt REG 1,2 664848234595/usr/lib/dyld ... 388\\nSetting up an Interception Proxy Platform: ios BurpSuiteisanintegratedplatformforsecuritytestingmobileandwebapplications. Itstoolsworktogetherseamlesslyto supporttheentiretestingprocess,frominitialmappingandanalysisofattacksurfacestofindingandexploitingsecurity vulnerabilities. Burp Proxy operates as a web proxy server for Burp Suite, which is positioned as a man-in-the-middle betweenthebrowserandwebserver(s). BurpSuiteallowsyoutointercept,inspect,andmodifyincomingandoutgoing rawHTTPtraffic. SettingupBurptoproxyyourtrafficisprettystraightforward. WeassumethatbothyouriOSdeviceandhostcomputer areconnectedtoaWi-Finetworkthatpermitsclient-to-clienttraffic. Ifclient-to-clienttrafficisnotpermitted,youcanuse usbmuxdtoconnecttoBurpviaUSB. PortSwiggerprovidesagoodtutorialonsettingupaniOSdevicetoworkwithBurpandatutorialoninstallingBurp’sCA certificatetoaniOSdevice. Using Burp via USB on a Jailbroken Device InthesectionAccessingtheDeviceShellwe’vealreadylearnedhowwecanuseiproxytouseSSHviaUSB.Whendoing dynamicanalysis,it’sinterestingtousetheSSHconnectiontorouteourtraffictoBurpthatisrunningonourcomputer. Let’sgetstarted: FirstweneedtouseiproxytomakeSSHfromiOSavailableonlocalhost. $iproxy222222 waitingforconnection Thenextstepistomakearemoteportforwardingofport8080ontheiOSdevicetothelocalhostinterfaceonourcomputer toport8080. ssh-R8080:localhost:8080root@localhost -p2222 YoushouldnowbeabletoreachBurponyouriOSdevice. OpenSafarioniOSandgoto127.0.0.1:8080andyoushould seetheBurpSuitePage. ThiswouldalsobeagoodtimetoinstalltheCAcertificateofBurponyouriOSdevice. ThelaststepwouldbetosettheproxygloballyonyouriOSdevice: 1. GotoSettings->Wi-Fi 2. ConnecttoanyWi-Fi(youcanliterallyconnecttoanyWi-Fiasthetrafficforport80and443willberoutedthrough USB,aswearejustusingtheProxySettingfortheWi-FisowecansetaglobalProxy) 3. OnceconnectedclickonthesmallblueiconontherightsideoftheconnectWi-Fi 4. ConfigureyourProxybyselectingManual 5. Typein127.0.0.1asServer 6. Typein8080asPort OpenSafariandgotoanywebpage,youshouldseenowthetrafficinBurp. Thanks@hweisheimerfortheinitialidea! Static Analysis on iOS Platform: ios ThepreferredmethodofstaticallyanalyzingiOSappsinvolvesusingtheoriginalXcodeprojectfiles. Ideally,youwillbe abletocompileanddebugtheapptoquicklyidentifyanypotentialissueswiththesourcecode. BlackboxanalysisofiOSappswithoutaccesstotheoriginalsourcecoderequiresreverseengineering. Forexample,no decompilersareavailableforiOSapps(althoughmostcommercialandopen-sourcedisassemblerscanprovideapseudo- sourcecodeviewofthebinary),soadeepinspectionrequiresyoutoreadassemblycode. 389\\nReverse Engineering iOS Apps Platform: ios iOSreverseengineeringisamixedbag. Ononehand,appsprogrammedinObjective-CandSwiftcanbedisassembled nicely. InObjective-C,objectmethodsarecalledviadynamicfunctionpointerscalled“selectors”,whichareresolvedby name during runtime. The advantage of runtime name resolution is that these names need to stay intact in the final binary,makingthedisassemblymorereadable. Unfortunately,thisalsomeansthatnodirectcross-referencesbetween methodsareavailableinthedisassemblerandconstructingaflowgraphischallenging. References • [#miller] - Charlie Miller, Dino Dai Zovi. The iOS Hacker’s Handbook. Wiley, 2012 - https://www.wiley.com/en- us/iOS+Hacker%27s+Handbook-p-9781118204122 • [#levin]JonathanLevin. MacOSXandiOSInternals: TotheApple’sCore. Wiley,2013-http://newosxbook.com/M OXiI.pdf Host-Device Data Transfer Platform: ios TheremightbevariousscenarioswhereyoumightneedtotransferdatafromtheiOSdeviceorappdatasandboxtoyour hostcomputerorviceversa. Thefollowingsectionwillshowyoudifferentwaysonhowtoachievethat. Copying App Data Files via SSH and SCP Asweknownow,filesfromourapparestoredintheDatadirectory. YoucannowsimplyarchivetheDatadirectorywith tarandpullitfromthedevicewithscp: iPhone:~root#tarczvf/tmp/data.tgz/private/var/mobile/Containers/Data/Application/8C8E7EB0-BC9B-435B-8EF8-8F5560EB0693 iPhone:~root#exit $scp -P2222root@localhost:/tmp/data.tgz. Grapefruit AfterstartingGrapefruityoucanselecttheappthatisinscopefortesting. Therearevariousfunctionsavailable,ofwhich oneiscalled“Finder”. Whenselectingit,youwillgetalistingofthedirectoriesoftheappsandbox. 390\\nWhen navigating through the directories and selecting a file, a pop-up will show up and display the data either as hex- adecimalortext. Whenclosingthispop-upyouhavevariousoptionsavailableforthefile,including: • Databaseviewer • Plistviewer • Download Objection WhenyouarestartingobjectionyouwillfindthepromptwithintheBundledirectory. 391\\norg.owasp.MSTGon (iPhone:10.3.3)[usb] #pwdprint Currentdirectory:/var/containers/Bundle/Application/DABF849D-493E-464C-B66B-B8B6C53A4E76/org.owasp.MSTG.app UsetheenvcommandtogetthedirectoriesoftheappandnavigatetotheDocumentsdirectory. org.owasp.MSTGon (iPhone:10.3.3)[usb] #cd/var/mobile/Containers/Data/Application/72C7AAFB-1D75-4FBA-9D83-D8B4A2D44133/Documents /var/mobile/Containers/Data/Application/72C7AAFB-1D75-4FBA-9D83-D8B4A2D44133/Documents Withthecommandfile download <filename>youcandownloadafilefromtheiOSdevicetoyourhostcomputerand cananalyzeitafterwards. org.owasp.MSTGon (iPhone:10.3.3)[usb] #filedownload.com.apple.mobile_container_manager.metadata.plist Downloading/var/mobile/Containers/Data/Application/72C7AAFB-1D75-4FBA-9D83-D8B4A2D44133/.com.apple.mobile_container_manager.metadata.plistto ↪ .com.apple.mobile_container_manager.metadata.plist Streamingfilefromdevice... Writingbytestodestination... Successfullydownloaded/var/mobile/Containers/Data/Application/72C7AAFB-1D75-4FBA-9D83-D8B4A2D44133/.com.apple.mobile_container_manager.metadata.plistto ↪ .com.apple.mobile_container_manager.metadata.plist YoucanalsouploadfilestotheiOSdevicewithfile upload <local_file_path>. Dynamic Analysis on iOS Platform: ios Lifeiseasywithajailbrokendevice: notonlydoyougaineasyprivilegedaccesstothedevice,thelackofcodesigning allowsyoutousemorepowerfuldynamicanalysistechniques. OniOS,mostdynamicanalysistoolsarebasedonCydia Substrate,aframeworkfordevelopingruntimepatches,orFrida,adynamicintrospectiontool. ForbasicAPImonitoring, you can get away with not knowing all the details of how Substrate or Frida work - you can simply use existing API monitoringtools. On iOS, collecting basic information about a running process or an application can be slightly more challenging than compared to Android. On Android (or any Linux-based OS), process information is exposed as readable text files via procfs. Thus,anyinformationaboutatargetprocesscanbeobtainedonarooteddevicebyparsingthesetextfiles. In contrast,oniOSthereisnoprocfsequivalentpresent. Also,oniOSmanystandardUNIXcommandlinetoolsforexploring processinformation,forinstancelsofandvmmap,areremovedtoreducethefirmwaresize. Inthissection,wewilllearnhowtocollectprocessinformationoniOSusingcommandlinetoolslikelsof. Sincemanyof thesetoolsarenotpresentoniOSbydefault,weneedtoinstallthemviaalternativemethods. Forinstance,lsofcanbe installedusingCydia(theexecutableisnotthelatestversionavailable,butneverthelessaddressesourpurpose). Obtaining and Extracting Apps Platform: ios Getting the IPA File from an OTA Distribution Link Duringdevelopment,appsaresometimesprovidedtotestersviaover-the-air(OTA)distribution. Inthatsituation,you’ll receiveanitms-serviceslink,suchasthefollowing: itms-services://?action=download-manifest&url=https://s3-ap-southeast-1.amazonaws.com/test-uat/manifest.plist YoucanusetheITMSservicesassetdownloadertooltodownloadtheIPAfromanOTAdistributionURL.Installitvianpm: npminstall -gitms-services SavetheIPAfilelocallywiththefollowingcommand: 392\\n##itms-services-u\"itms-services://?action=download-manifest&url=https://s3-ap-southeast-1.amazonaws.com/test-uat/manifest.plist\"-o->out.ipa Extracting the App Binary If you have an IPA with a decrypted app binary, unzip it and you are ready to go. The app binary is located in the mainbundledirectory(.app),e.g.Payload/Telegram X.app/Telegram X.Seethefollowingsubsectionfordetailsonthe extractionofthepropertylists. OnmacOS’sFinder,.appdirectoriesareopenedbyright-clickingthemandselecting“ShowPackageContent”. On theterminalyoucanjustcdintothem. Decrypting the App Binary IMPORTANT NOTE:IntheUnitedStates,theDigitalMillenniumCopyrightAct17U.S.C.1201,orDMCA,makesit illegalandactionabletocircumventcertaintypesofDRM.However,theDMCAalsoprovidesexemptions,suchas forcertainkindsofsecurityresearch. Aqualifiedattorneycanhelpyoudetermineifyourresearchqualifiesunder theDMCAexemptions. (Source: Corellium) If you don’t have the original IPA, then you need a jailbroken device where you will install the", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 134}}