{"text": "iPhone:~root#/tmp/keychain_dumper ForusageinstructionspleaserefertotheKeychain-dumperGitHubpage. Grapefruit Platform: ios Availableat: https://github.com/ChiChou/grapefruit GrapefruitisaniOSappassessmenttoolthatisusingtheFridaserverontheiOSdeviceandisabstractingmanypene- trationtestingtasksintoaWebUI.Itcanbeinstalledvianpm. $npminstall -gigf $grapefruit listeningonhttp://localhost:31337 Whenyouexecutethecommandgrapefruitalocalserverwillbestartedonport31337. Connectyourjailbrokendevice withtheFridaserverrunning,oranon-jailbrokendevicewitharepackagedappincludingFridatoyourmachineviaUSB. Onceyouclickonthe“iPhone”iconyouwillgetanoverviewofallinstalledapps. With Grapfruit it’s possible to explore different kinds of information concerning an iOS app. Once you selected the iOS appyoucanperformmanytaskssuchas: • Getinformationaboutthebinary • Viewfoldersandfilesusedbytheapplicationanddownloadthem • InspecttheInfo.plist • GetaUIDumpoftheappscreenshownontheiOSdevice • Listthemodulesthatareloadedbytheapp • Dumpclassnames • Dumpkeychainitems Cycript Platform: ios Availableat: https://www.cycript.org/ CydiaSubstrate(formerlycalledMobileSubstrate)isthestandardframeworkfordevelopingCydiaruntimepatches(the so-called“CydiaSubstrateExtensions”)oniOS.ItcomeswithCynject,atoolthatprovidescodeinjectionsupportforC. Cycript is a scripting language developed by Jay Freeman (aka Saurik). It injects a JavaScriptCore VM into a running process. Via the Cycript interactive console, users can then manipulate the process with a hybrid Objective-C++ and JavaScriptsyntax. AccessingandinstantiatingObjective-Cclassesinsidearunningprocessisalsopossible. InordertoinstallCycript,firstdownload,unpack,andinstalltheSDK. 555\\n##oniphone $wgethttps://cydia.saurik.com/api/latest/3 -Ocycript.zip && unzip cycript.zip $sudocp -aCycript.lib/*.dylib/usr/lib $sudocp -aCycript.lib/cycript-apl/usr/bin/cycript TospawntheinteractiveCycriptshell,run“./cycript”or“cycript”ifCycriptisonyourpath. $cycript cy# Toinjectintoarunningprocess,wefirstneedtofindtheprocessID(PID).Runtheapplicationandmakesuretheappisin theforeground. Runningcycript -p <PID>injectsCycriptintotheprocess. Toillustrate,wewillinjectintoSpringBoard (whichisalwaysrunning). $ps -ef|grep SpringBoard 50178100:00.00 ??0:10.57/System/Library/CoreServices/SpringBoard.app/SpringBoard $./cycript -p78 cy# Oneofthefirstthingsyoucantryoutistogettheapplicationinstance(UIApplication),youcanuseObjective-Csyn- tax: cy#[UIApplicationsharedApplication] cy#vara=[UIApplicationsharedApplication] Usethatvariablenowtogettheapplication’sdelegateclass: cy#a.delegate Let’strytotriggeranalertmessageonSpringBoardwithCycript. cy#alertView=[[UIAlertViewalloc]initWithTitle:@\"OWASPMASTG\" message:@\"MobileApplicationSecurityTestingGuide\" delegate:nilcancelButtonitle:@\"OK\" ↪ otherButtonTitles:nil] ##\"<UIAlertView:0x1645c550;frame=(00;00);layer=<CALayer:0x164df160>>\" cy#[alertViewshow] cy#[alertViewrelease] 556\\nFindtheapp’sdocumentdirectorywithCycript: cy#[[NSFileManagerdefaultManager]URLsForDirectory:NSDocumentDirectoryinDomains:NSUserDomainMask][0] ##\"file:///var/mobile/Containers/Data/Application/A8AE15EE-DC8B-4F1C-91A5-1FED35212DF/Documents/\" Thecommand[[UIAppkeyWindow]recursiveDescription].toString()returnstheviewhierarchyofkeyWindow. The description of every subview and sub-subview ofkeyWindow is shown. The indentation space reflects the relationships betweenviews. Forexample,UILabel,UITextField,andUIButtonaresubviewsofUIView. cy#[[UIAppkeyWindow]recursiveDescription].toString() `<UIWindow: 0x16e82190;frame =(00;320568); gestureRecognizers =<NSArray: 0x16e80ac0>; layer =<UIWindowLayer: 0x16e63ce0>> |<UIView: 0x16e935f0; frame =(00;320568); autoresize =W+H; layer =<CALayer: 0x16e93680>> | |<UILabel:0x16e8f840;frame=(040;8220.5);text='iamgroot!';hidden=YES;opaque=NO;autoresize=RM+BM;userInteractionEnabled=NO;layer= ↪ <_UILabelLayer: 0x16e8f920>> | |<UILabel: 0x16e8e030; frame =(0110.5; 32020.5); text ='ASecretIsFoundInThe...';opaque =NO;autoresize =RM+BM; userInteractionEnabled =NO; ↪ layer =<_UILabelLayer: 0x16e8e290>> | |<UITextField: 0x16e8fbd0; frame =(8141; 30430); text ='';clipsToBounds =YES; opaque =NO;autoresize =RM+BM; gestureRecognizers =<NSArray: ↪ 0x16e94550>; layer =<CALayer: 0x16e8fea0>> | | |<_UITextFieldRoundedRectBackgroundViewNeue: 0x16e92770; frame = (00;30430); opaque =NO;autoresize =W+H; userInteractionEnabled =NO;layer = ↪ <CALayer: 0x16e92990>> | |<UIButton: 0x16d901e0; frame =(8191; 30430); opaque =NO;autoresize =RM+BM; layer =<CALayer: 0x16d90490>> | | |<UIButtonLabel:0x16e72b70;frame=(1336;3818);text='Verify';opaque=NO;userInteractionEnabled=NO;layer=<_UILabelLayer:0x16e974b0>> | |<_UILayoutGuide: 0x16d92a00; frame =(00;020); hidden =YES; layer =<CALayer: 0x16e936b0>> | |<_UILayoutGuide: 0x16d92c10; frame =(0568; 00);hidden =YES; layer =<CALayer: 0x16d92cb0>>` YoucanalsouseCycript’sbuilt-infunctionssuchaschoosewhichsearchestheheapforinstancesofthegivenObjective-C class: 557\\ncy#choose(SBIconModel) [#\"<SBIconModel:0x1590c8430>\"] LearnmoreintheCycriptManual. xcrun Platform: ios Availableat: http://www.manpagez.com/man/1/xcrun/ xcruncanbeusedinvokeXcodedevelopertoolsfromthecommand-line,withouthavingtheminthepath. Forexample youmaywanttouseittolocateandrunswift-demangleorsimctl. optool Platform: ios Availableat: https://github.com/alexzielenski/optool optool is a tool which interfaces with MachO binaries in order to insert/remove load commands, strip code signatures, resign,andremoveaslr. Toinstallit: gitclonehttps://github.com/alexzielenski/optool.git cdoptool/ gitsubmoduleupdate --init --recursive xcodebuild ln-s<your-path-to-optool>/build/Release/optool/usr/local/bin/optool Thelastlinecreatesasymboliclinkandmakestheexecutableavailablesystem-wide. Reloadyourshelltomakethenew commandsavailable: zsh: #.~/.zshrc bash: #.~/.bashrc dsdump Platform: ios Availableat: https://github.com/DerekSelander/dsdump dsdumpisatooltodumpObjective-CclassesandSwifttypedescriptors(classes,structs,enums). ItonlysupportsSwift version5orhigheranddoesnotsupportARM32-bitbinaries. ThefollowingexampleshowshowyoucandumpObjective-CclassesandSwifttypedescriptorsofaniOSapplication. Firstverifyiftheapp’smainbinaryisaFATbinarycontainingARM64: $otool -hv[APP_MAIN_BINARY_FILE] Machheader magiccputypecpusubtype caps filetypencmdssizeofcmds flags MH_MAGIC ARM V7 0x00 EXECUTE 39 5016 NOUNDEFSDYLDLINKTWOLEVELPIE Machheader magiccputypecpusubtype caps filetypencmdssizeofcmds flags MH_MAGIC_64 ARM64 ALL 0x00 EXECUTE 38 5728 NOUNDEFSDYLDLINKTWOLEVELPIE Ifyes,thenwespecifythe“–arch”parameterto“arm64”,otherwiseitisnotneededifthebinaryonlycontainsanARM64 binary. 558\\n##DumptheObjective-Cclassestoatemporaryfile $dsdump --objc --color --verbose=5--arch arm64 --defined [APP_MAIN_BINARY_FILE]>/tmp/OBJC.txt ##DumptheSwifttypedescriptorstoatemporaryfileiftheappisimplementedinSwift $dsdump --swift --color --verbose=5--arch arm64 --defined [APP_MAIN_BINARY_FILE]>/tmp/SWIFT.txt YoucanfindmoreinformationabouttheinnerworkingsofdsdumpandhowtoprogrammaticallyinspectaMach-Obinary todisplaythecompiledSwifttypesandObjective-Cclassesinthisarticle. bettercap Platform: network Availableat: https://github.com/bettercap/bettercap Apowerfulframeworkwhichaimstooffertosecurityresearchersandreverseengineersaneasytouse,all-in-onesolution for Wi-Fi, Bluetooth Low Energy, wireless HID hijacking and Ethernet networks reconnaissance. It can be used during network penetration tests in order to simulate a man-in-the-middle (MITM) attack. This is achieved by executing ARP poisoningorspoofingtothetargetcomputers. Whensuchanattackissuccessful, allpacketsbetweentwocomputers areredirectedtoathirdcomputerthatactsastheman-in-the-middleandisabletointerceptthetrafficforanalysis. bettercapisapowerfultooltoexecuteMITMattacksandshouldbepreferrednowadays,insteadofettercap. See alsoWhyanotherMITMtool? onthebettercapsite. bettercap is available for all major Linux and Unix operating systems and should be part of their respective package installation mechanisms. You need to install it on your host computer that will act as the MITM. On macOS it can be installedbyusingbrew. brewinstallbettercap ForKaliLinuxyoucaninstallbettercapwithapt-get: apt-getupdate apt-getinstallbettercap ThereareinstallationinstructionsaswellforUbuntuLinux18.04onLinuxHint. Burp Suite Platform: network Availableat: https://portswigger.net/burp/communitydownload BurpSuiteisanintegratedplatformforperformingsecuritytestingmobileandwebapplications. Its tools work together seamlessly to support the entire testing process, from initial mapping and analysis", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 175}}