{"text": "– 8.0 Poses a significant risk and can be exploited. Address these as soon as possible after any critical risks have been remediated. 4.1 – 6.0 Poses an important risk but may be difficult to exploit. Pentest recommends remedial work within 3 months of discovery. 2.1 – 4.0 Poses a minor risk or may be exceedingly difficult to exploit. Address these over the long-term during testing cycles. 0.0 – 2.0 Loss of sensitive information, or a discussion point. These are not directly exploitable but may aid an attacker. Remediate these to create a true defence-in-depth security posture. CVSS is not applicable to all risks. For example, it is incapable of capturing the risk of a “flat network design”. Experience has told us that this is a “high” risk in most cases. For this reason, the reader may find vulnerabilities which have no CVSS rating in our reports. We endeavour to provide the reason for omitting the risk score when that is the case, and to provide CVSS by default in all applicable cases. Confidential 6 3756 – Web App Test\\nConfidential 7 3756 - App Test <CustomerNameLong> 3.4 Visual Summary 3 2 Info Low Medium High 1 Critical 0 Info Low Medium High Critical Count 0 2 0 0 0 Confidential 7 3756 – Web App Test\\nConfidential 8 3756 - App Test <CustomerNameLong> 4 Recommended Actions ID Vuln Title Recommended Action Pentest Risk Category CVSS 1 Vulnerabilities in Outdated Upgrade the affected libraries to the latest 3.1/Low Dependencies Detected supported version. 2 No Anti-Automation Protection Consider fine tuning CloudFlare Bot protections on 3.1/Low vulnerable functions. Confidential 8\\n5 Technical Findings 5.1 Vulnerabilities in Outdated Dependencies Detected 5.1.1 Background Most software products are developed using APIs or libraries provided by third parties. Doing so reduces development time and cost and feeds into the “why re-invent the wheel?” philosophy. Once a component has been integrated into an application it must be upgraded regularly to guard against bugs and remove publicly known vulnerabilities. Failure to do so can mean that the application itself is at risk of exploitation due to weaknesses that exist in the supporting dependencies. This risk has been captured by the OWASP top 10 2021 project as category A06 labelled “Vulnerable and Outdated Components” defined at reference [1]. 5.1.2 Details During the assessment a few supporting JavaScript libraries were identified which contained publicly disclosed vulnerabilities such as Cross-Site Scripting. The table below identifies the location within the application and the related CVE associated with directly related vulnerabilities. Component version Location implemented Vulnerability CVE Bootstrap 3.4.1 https://cdn.report- Cross-Site Scripting CVE-2024-6484 uri.com/libs/twitter- bootstrap/3.4.1/js/bootstra p.min.js Select 4.2 https://cdn.report- Cross-Site Scripting CVE-2016-10744 uri.com/libs/select2/3.5.2/ select2.min.js Additionally, Bootstrap version 3.4.1 currently reached EOL (end of life) and no longer receive any updates from the vendor, which exacerbates this issue. More information about Bootstrap’s version 3 reaching EOL is available in reference [4]. Confidential 9\\n5.1.3 Risk Analysis Pentest Risk Category CVSS 3.1/Low AV:N/AC:H/PR:H/UI:R/S:U/C:L/I:N/A:L Explanation The risk associated with this issue was considered low, as no areas of the application", "metadata": {"doc_id": "Report URI - 2024 Penetration Test Report", "chunk_id": 2}}