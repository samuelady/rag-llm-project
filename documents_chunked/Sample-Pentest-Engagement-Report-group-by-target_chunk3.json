{"text": "Command Injection Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL https://pentest-ground.com:4280/vulnerabilities/exec/ Method POST Vulnerable Parameter ip (Body Parameter) Evidence Injected the echo ttp1739356543.6927|rev|sed -e 's/^/ptt/' -e 's/\\./dot/'|tr a-z A-Z command in the ip body parameter and found the expected command output (PTT7296DOT3456539371PTT) in the response To validate the vulnerability, we extracted the kernel version and the hostname of the Unix machine. The kernel version is 5.10.0-32-amd64, and the hostname is ba766be4f6cb. Request / Response Vulnerability description We found that the target web application can be manipulated into running operating system commands on its host machine. This vulnerability arises from the application improperly handling or sanitizing user input which reaches OS functions. 17\\nRisk description The risk is that an attacker can use the application to run OS commands with the privileges of the vulnerable application. This could lead (but not limited) to Remote Code Execution, Denial of Service, Sensitive Information Disclosure, Sensitive Information Deletion. Recommendation There are multiple ways to mitigate this attack: - avoid calling OS commands directly (use built-in library functions) - escape values added to OS commands specific to each OS - implement parametrization in conjunction with Input Validation (segregate data by command; implement Positive or whitelist input validation; White list Regular Expression) In order to provide Defense in Depth, we also recommend to allocate the lowest privileges to web applications. References https://owasp.org/www-community/attacks/Command_Injection https://cheatsheetseries.owasp.org/cheatsheets/OS_Command_Injection_Defense_Che at_Sheet.html Classification Category ID / Value CWE CWE-78 OWASP Top 10 - 2017 A1 - Injection OWASP Top 10 - 2021 A3 - Injection Verification âœ” This finding was validated so it is not a False Positive. 18\\n4.1.4 Local File Inclusion Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL https://pentest-ground.com:4280/vulnerabilities/fi/ Method GET Vulnerable Parameter page (Query Parameter) Evidence We found a Local File Inclusion vulnerability in the page query parameter.We managed to read the contents of two files. First, we tested for the vulnerability by injecting the payload: /proc/cpuinfo. We extracted the data:Additionally, we validated the vulnerability by injecting the payload: processor : 0 vendor_id : AuthenticAMD cpu family : 25 model : 1 model name : AMD EPYC 7713 64-Core Processor stepping : 1 microcode : 0xa0011d1 processor : 1 vendor_id : AuthenticAMD cpu family : 25. The extracted data was: Request / Response 19\\nVulnerability description We have discovered that the target application is affected by Local File Inclusion (also known as LFI), usually caused by improper validation of input used in file handling functions. This vulnerability allows including files that are already locally present on the server, by exploiting the vulnerable inclusion procedures implemented in the application. Risk description The risk exists that an attacker can manipulate the affected parameter in order to load and sometimes execute any locally stored file. This could lead to reading arbitrary files, code execution, Cross-Site Scripting, denial of service, sensitive information disclosure. Recommendation The most effective solution to eliminating file inclusion vulnerabilities is to avoid passing raw user-submitted input to any filesystem API. If this is not possible, the application can maintain a white list of files that", "metadata": {"doc_id": "Sample-Pentest-Engagement-Report-group-by-target", "chunk_id": 3}}