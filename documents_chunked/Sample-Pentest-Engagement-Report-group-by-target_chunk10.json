{"text": "Query: redirect=info.php?id=2;echo ttp1739356088.1073|rev|sed - e 's/^/ptt/' -e 's/\\./dot/'|tr a-z A-Z #';echo ttp1739356088.1073|rev|sed -e 's/^/ptt/' -e 's/\\./dot/'|tr a-z A- Z #\";echo ttp1739356088.1073|rev|sed -e 's/^/ptt/' -e &... Evidence Response has an internal server error status code: 500 Request / Response Vulnerability description We noticed that the target application's website does not properly handle or incorrectly manages exceptional conditions like Internal Server Errors. These errors can reveal sensitive information through their error messages. For instance, an error message could inadvertently disclose system paths or private application details. Risk description The risk exists that attackers could utilize information revealed in Internal Server Error messages to mount more targeted and effective attacks. Detailed error messages 44\\ncould, for example, expose a path traversal weakness (CWE-22) or other exploitable system vulnerabilities. Recommendation Ensure that error messages only contain minimal details that are useful to the intended audience, and nobody else. The messages need to strike the balance between being too cryptic and not being cryptic enough. They should not necessarily reveal the methods that were used to determine the error. Such detailed information can be used to refine the original attack to increase the chances of success. If errors must be tracked in some detail, capture them in log messages - but consider what could occur if the log messages can be viewed by attackers. Avoid recording highly sensitive information such as passwords in any form. Avoid inconsistent messaging that might accidentally tip off an attacker about internal state, such as whether a username is valid or not. Classification Category ID / Value CWE CWE-209 OWASP Top 10 - 2017 A6 - Security Misconfiguration OWASP Top 10 - 2021 A5 - Security Misconfiguration 45\\nScreenshots Figure 1. Internal Error Verification âœ” This finding was validated so it is not a False Positive. 46\\n4.1.15 Missing security header: Strict-Transport-Security Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL Evidence https://pentest-ground.com:4280/ Response headers do not include the HTTP Strict-Transport-Security header Request / Response Vulnerability description We noticed that the target application lacks the HTTP Strict-Transport-Security header in its responses. This security header is crucial as it instructs browsers to only establish secure (HTTPS) connections with the web server and reject any HTTP connections. Risk description The risk is that lack of this header permits an attacker to force a victim user to initiate a clear-text HTTP connection to the server, thus opening the possibility to eavesdrop on the network traffic and extract sensitive information (e.g. session cookies). Recommendation The Strict-Transport-Security HTTP header should be sent with each HTTPS response. The syntax is as follows: Strict-Transport-Security: max-age=<seconds>[; includeSubDomains] The parameter max-age gives the time frame for requirement of HTTPS in seconds and should be chosen quite high, e.g. several months. A value below 7776000 is considered as too low by this scanner check. 47\\nThe flag includeSubDomains defines that the policy applies also for sub domains of the sender of the response. Classification Category ID / Value CWE CWE-693 OWASP Top 10 - 2017 A6 - Security Misconfiguration OWASP Top 10 - 2021 A5 -", "metadata": {"doc_id": "Sample-Pentest-Engagement-Report-group-by-target", "chunk_id": 10}}