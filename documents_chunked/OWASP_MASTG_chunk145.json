{"text": "Apple, as well as by their subordinate CA issuers. The list may also include other constraints at Apple’sdiscretion. ThisinformationisconsultedwheneveranetworkAPIfunctionisusedtomakeasecureconnection. If there are too many revoked certificates from a CA to list individually, a trust evaluation may instead require that an onlinecertificatestatusresponse(OCSP)isneeded,andiftheresponseisn’tavailable,thetrustevaluationwillfail.” When does ATS not apply? • Whenusinglower-levelAPIs: ATSonlyappliestotheURLLoadingSystemincludingURLSessionandAPIslayered ontopofthem. Itdoesnotapplytoappsthatuselower-levelAPIs(likeBSDSockets),includingthosethatimplement TLSontopofthoselower-levelAPIs(seesection“UsingATSinAppleFrameworks”fromtheArchivedAppleDeveloper Documentation). 427\\n• When connecting to IP addresses, unqualified domain names or local hosts: ATSappliesonlytoconnec- tions made to public host names (see section “Availability of ATS for Remote and Local Connections” from the ArchivedAppleDeveloperDocumentation). ThesystemdoesnotprovideATSprotectiontoconnectionsmadeto: – Internetprotocol(IP)addresses – Unqualifiedhostnames – Localhostsemployingthe.localtop-leveldomain(TLD) • When including ATS Exceptions: If the app uses the ATS compatible APIs, it can still disable ATS for specific scenariosusingATSExceptions. Learnmore: • “ATSandiOSenterpriseappswithprivatenetworks” • “ATSandlocalIPaddresses” • “ATSimpactonappsuse3rdpartylibraries” • “ATSandSSLpinning/ownCA” ATS Exceptions ATS restrictions can be disabled by configuring exceptions in the Info.plist file under the NSAppTransportSecurity key. Theseexceptionscanbeappliedto: • allowinsecureconnections(HTTP), • lowertheminimumTLSversion, • disablePerfectForwardSecrecy(PFS)or • allowconnectionstolocaldomains. ATS exceptions can be applied globally or per domain basis. The application can globally disable ATS, but opt in for individualdomains. ThefollowinglistingfromAppleDeveloperdocumentationshowsthestructureoftheNSAppTrans- portSecuritydictionary. NSAppTransportSecurity :Dictionary { NSAllowsArbitraryLoads :Boolean NSAllowsArbitraryLoadsForMedia :Boolean NSAllowsArbitraryLoadsInWebContent :Boolean NSAllowsLocalNetworking :Boolean NSExceptionDomains :Dictionary { <domain-name-string>:Dictionary { NSIncludesSubdomains :Boolean NSExceptionAllowsInsecureHTTPLoads :Boolean NSExceptionMinimumTLSVersion :String NSExceptionRequiresForwardSecrecy :Boolean //DefaultvalueisYES NSRequiresCertificateTransparency :Boolean } } } Source: AppleDeveloperDocumentation. ThefollowingtablesummarizestheglobalATSexceptions. Formoreinformationabouttheseexceptions,pleasereferto table2intheofficialAppledeveloperdocumentation. Key Description NSAllowsArbitraryLoads DisableATSrestrictionsgloballyexceptsforindividual domainsspecifiedunderNSExceptionDomains NSAllowsArbitraryLoadsInWebContent DisableATSrestrictionsforalltheconnectionsmade fromwebviews NSAllowsLocalNetworking Allowconnectiontounqualifieddomainnamesand .localdomains NSAllowsArbitraryLoadsForMedia DisableallATSrestrictionsformedialoadedthrough theAVFoundationsframework 428\\nThe following table summarizes the per-domain ATS exceptions. For more information about these exceptions, please refertotable3intheofficialAppledeveloperdocumentation. Key Description NSIncludesSubdomains IndicateswhetherATSexceptionsshouldapplyto subdomainsofthenameddomain NSExceptionAllowsInsecureHTTPLoads AllowsHTTPconnectionstothenameddomain,but doesnotaffectTLSrequirements NSExceptionMinimumTLSVersion AllowsconnectionstoserverswithTLSversionsless than1.2 NSExceptionRequiresForwardSecrecy Disableperfectforwardsecrecy(PFS) JustifyingExceptions: Starting from January 1 2017, Apple App Store review requires justification if one of the following ATS exceptions are defined. • NSAllowsArbitraryLoads • NSAllowsArbitraryLoadsForMedia • NSAllowsArbitraryLoadsInWebContent • NSExceptionAllowsInsecureHTTPLoads • NSExceptionMinimumTLSVersion Thismustbecarefullyrevisedtodetermineifit’sindeedpartoftheappintendedpurpose. Applewarnsaboutexceptions reducing the security of the apps and advises to configure exceptions only when needed and prefer to server fixeswhenfacedwithanATSfailure. Example: Inthefollowingexample,ATSisgloballyenabled(there’snoglobalNSAllowsArbitraryLoadsdefined)butanexceptionis explicitlysetfortheexample.comdomain(anditssubdomains). Consideringthatthedomainisownedbytheapplication developersandthere’saproperjustificationthisexceptionwouldbeacceptable,sinceitmaintainsallthebenefitsofATS forallotherdomains. However,itwouldbealwayspreferabletofixtheserverasindicatedabove. <key>NSAppTransportSecurity</key> <dict> <key>NSExceptionDomains</key> <dict> <key>example.com</key> <dict> <key>NSIncludesSubdomains</key> <true/> <key>NSExceptionMinimumTLSVersion</key> <string>TLSv1.2</string> <key>NSExceptionAllowsInsecureHTTPLoads</key> <true/> <key>NSExceptionRequiresForwardSecrecy</key> <true/> </dict> </dict> </dict> FormoreinformationonATSexceptionspleaseconsultsection“ConfigureExceptionsOnlyWhenNeeded;PreferServer Fixes”fromthearticle“PreventingInsecureNetworkConnections”intheAppleDeveloperDocumentationandtheblog postonATS. Server Trust Evaluation ATSimposesextendedsecuritychecksthatsupplementthedefaultservertrustevaluationprescribedbytheTransport LayerSecurity(TLS)protocol. LooseningATSrestrictionsreducesthesecurityoftheapp. Appsshouldpreferalternative waystoimproveserversecuritybeforeaddingATSexceptions. TheAppleDeveloperDocumentationexplainsthatanappcanuseURLSessiontoautomaticallyhandleservertrusteval- uation. However,appsarealsoabletocustomizethatprocess,forexampletheycan: 429\\n• bypassorcustomizecertificateexpiry. • loosen/extendtrust: acceptservercredentialsthatwouldotherwiseberejectedbythesystem,e.g.tomakesecure connectionstoadevelopmentserverusingself-signedcertificatesembeddedintheapp. • tightentrust: rejectcredentialsthatwouldotherwisebeacceptedbythesystem. • etc. References: • PreventingInsecureNetworkConnections • PerformingManualServerTrustAuthentication • Certificate,Key,andTrustServices iOS Network APIs Since iOS 12.0 the Network framework and the URLSession class provide methods to load network and URL requests asynchronouslyandsynchronously. OlderiOSversionscanutilizetheSocketsAPI. Network Framework The Network framework was introduced at The Apple Worldwide Developers Conference (WWDC) in 2018 and is a re- placementtotheSocketsAPI.Thislow-levelnetworkingframeworkprovidesclassestosendandreceivedatawithbuilt indynamicnetworking,securityandperformancesupport. TLS1.3isenabledbydefaultintheNetworkframework,iftheargumentusing: .tlsisused. Itisthepreferredoption overthelegacySecureTransportframework. URLSession URLSessionwasbuiltupontheNetworkframeworkandutilizesthesametransportservices. TheclassalsousesTLS1.3 bydefault,iftheendpointisHTTPS. URLSession should be used for HTTP and HTTPS connections, instead of utilizing the Network framework directly. TheURLSessionclassnativelysupportsbothURLschemesandisoptimizedforsuchconnections. Itrequiresless boilerplatecode,reducingthepossibilityforerrorsandensuringsecureconnectionsbydefault. TheNetworkframework shouldonlybeusedwhentherearelow-leveland/oradvancednetworkingrequirements. TheofficialAppledocumentationincludesexamplesofusingtheNetworkframeworktoimplementnetcatandURLSession tofetchwebsitedataintomemory. Testing the TLS Settings Platform: ios MASVSV1: MSTG-NETWORK-2 MASVSV2: MASVS-NETWORK-1 430\\nOverview Remembertoinspectthecorrespondingjustificationstodiscardthatitmightbepartoftheappintendedpurpose. ItispossibletoverifywhichATSsettingscanbeusedwhencommunicatingtoacertainendpoint. OnmacOSthecommand line utility nscurl can be used. A permutation of different settings will be executed and verified against the specified endpoint. If the default ATS secure connection test is passing, ATS can be used in its default secure configuration. If thereareanyfailsinthenscurloutput,pleasechangetheserversideconfigurationofTLStomaketheserversidemore secure,ratherthanweakeningtheconfigurationinATSontheclient. Seethearticle“IdentifyingtheSourceofBlocked Connections”intheAppleDeveloperDocumentationformoredetails. Refertosection“VerifyingtheTLSSettings”inchapterTestingNetworkCommunicationfordetails. Testing Custom Certificate Stores and Certificate Pinning Platform:", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 145}}