{"text": "mechanisms. You need to install it on your host computer that will act as the MITM. On macOS it can be installedbyusingbrew. brewinstallbettercap ForKaliLinuxyoucaninstallbettercapwithapt-get: apt-getupdate apt-getinstallbettercap ThereareinstallationinstructionsaswellforUbuntuLinux18.04onLinuxHint. Burp Suite Platform: network Availableat: https://portswigger.net/burp/communitydownload BurpSuiteisanintegratedplatformforperformingsecuritytestingmobileandwebapplications. Its tools work together seamlessly to support the entire testing process, from initial mapping and analysis of attack surfaces to finding and exploiting security vulnerabilities. Burp Proxy operates as a web proxy server for Burp Suite, which is positioned as a man-in-the-middle between the browser and web servers. Burp Suite allows you to intercept, inspect,andmodifyincomingandoutgoingrawHTTPtraffic. SettingupBurptoproxyyourtrafficisprettystraightforward. Weassumethatbothyourdeviceandhostcomputerare connectedtoaWi-Finetworkthatpermitsclient-to-clienttraffic. PortSwiggerprovidesgoodtutorialsonsettingupbothAndroidasiOSdevicestoworkwithBurp: • ConfiguringanAndroidDevicetoWorkWithBurp. • InstallingBurp’sCAcertificatetoanAndroiddevice. • ConfiguringaniOSDevicetoWorkWithBurp. • InstallingBurp’sCAcertificatetoaniOSdevice. Pleaserefertothesection“SettingupanInterceptionProxy”intheAndroidandiOS“BasicSecurityTesting”chaptersfor moreinformation. 559\\nWireshark Platform: network Availableat: https://github.com/wireshark/wireshark Anopen-sourcepacketanalyzer-https://www.wireshark.org/download.html OWASP ZAP Platform: network Availableat: https://github.com/zaproxy/zaproxy OWASP ZAP (Zed Attack Proxy) is a free security tool which helps to automatically find security vulnerabilities in web applicationsandwebservices. tcpdump Platform: network Acommandlinepacketcaptureutility-https://www.tcpdump.org/ MITM Relay Platform: network Availableat: https://github.com/jrmdev/mitm_relay Ascripttointerceptandmodifynon-HTTPprotocolsthroughBurpandotherswithsupportforSSLandSTARTTLSintercep- tion-https://github.com/jrmdev/mitm_relay Android tcpdump Platform: network Availableat: https://www.androidtcpdump.com AcommandlinepacketcaptureutilityforAndroid. r2frida Platform: generic Availableat: https://github.com/nowsecure/r2frida r2fridaisaprojectthatallowsradare2toconnecttoFrida,effectivelymergingthepowerfulreverseengineeringcapabilities ofradare2withthedynamicinstrumentationtoolkitofFrida. r2fridacanbeusedinbothonAndroidandiOS,allowingyou to: • Attachradare2toanylocalprocessorremotefrida-serverviaUSBorTCP. • Read/Writememoryfromthetargetprocess. • LoadFridainformationsuchasmaps,symbols,imports,classesandmethodsintoradare2. • Callr2commandsfromFridaasitexposesther2pipeinterfaceintotheFridaJavascriptAPI. 560\\nPleaserefertor2frida’sofficialinstallationinstructions. Withfrida-serverrunning,youshouldnowbeabletoattachtoitusingthepid,spawnpath,hostandport,ordevice-id. Forexample,toattachtoPID1234: r2frida://1234 Formoreexamplesonhowtoconnecttofrida-server,seetheusagesectioninther2frida’sREADMEpage. ThefollowingexampleswereexecutedusinganAndroidappbutalsoapplytoiOSapps. Onceinther2fridasession,allcommandsstartwith: or=!. Forexample,inradare2you’drunitodisplaythebinary information,butinr2fridayou’duse:i. Seealloptionswithr2 frida://?. [0x00000000]>:i arch x86 bits 64 os linux pid 2218 uid 1000 objc false runtime V8 java false cylang false pageSize 4096 pointerSize 8 codeSigningPolicy optional isDebuggerAttached false Tosearchinmemoryforaspecifickeyword,youmayusethesearchcommand\\/: [0x00000000]>\\/unacceptable Searching12bytes:756e61636365707461626c65 Searching12bytesin [0x0000561f05ebf000-0x0000561f05eca000] ... Searching12bytesin [0xffffffffff600000-0xffffffffff601000] hits:23 0x561f072d89eehit12_0unacceptablepolicyunsupportedmdalgorithmvarbadvaluec 0x561f0732a91ahit12_1unacceptableSearching12bytes:756e61636365707461 To output the search results in JSON format, we simply addj to our previous search command (just as we do in the r2 shell). Thiscanbeusedinmostofthecommands: [0x00000000]>\\/junacceptable Searching12bytes:756e61636365707461626c65 Searching12bytesin [0x0000561f05ebf000-0x0000561f05eca000] ... Searching12bytesin [0xffffffffff600000-0xffffffffff601000] hits:23 {\"address\":\"0x561f072c4223\",\"size\":12,\"flag\":\"hit14_1\",\"content\":\"unacceptable \\ policyunsupportedmdalgorithmvarbadvaluec0\"},{\"address\":\"0x561f072c4275\", \\ \"size\":12,\"flag\":\"hit14_2\",\"content\":\"unacceptableSearching12bytes:756e61 \\ 636365707461\"},{\"address\":\"0x561f072c42c8\",\"size\":12,\"flag\":\"hit14_3\",\\ \"content\":\"unacceptableSearching12bytes:756e61636365707461\"}, ... To list the loaded libraries use the command :il and filter the results using the internal grep from radare2 with the command~. Forexample,thefollowingcommandwilllisttheloadedlibrariesmatchingthekeywordskeystore,ssland crypto: [0x00000000]>:il~keystore,ssl,crypto 0x00007f3357b8e000libssl.so.1.1 0x00007f3357716000libcrypto.so.1.1 Similarly,tolisttheexportsandfiltertheresultsbyaspecifickeyword: 561\\n[0x00000000]>:iElibssl.so.1.1~CIPHER 0x7f3357bb7ef0fSSL_CIPHER_get_bits 0x7f3357bb8260fSSL_CIPHER_find 0x7f3357bb82c0fSSL_CIPHER_get_digest_nid 0x7f3357bb8380fSSL_CIPHER_is_aead 0x7f3357bb8270fSSL_CIPHER_get_cipher_nid 0x7f3357bb7ed0fSSL_CIPHER_get_name 0x7f3357bb8340fSSL_CIPHER_get_auth_nid 0x7f3357bb7930fSSL_CIPHER_description 0x7f3357bb8300fSSL_CIPHER_get_kx_nid 0x7f3357bb7ea0fSSL_CIPHER_get_version 0x7f3357bb7f10fSSL_CIPHER_get_id Tolistorsetabreakpointusethecommanddb. Thisisusefulwhenanalyzing/modifyingmemory: [0x00000000]>:db Finally,rememberthatyoucanalsorunFridaJavaScriptcodewith\\. plusthenameofthescript: [0x00000000]>\\.agent.js Youcanfindmoreexamplesonhowtouser2fridaontheirWikiproject. Frida Platform: generic Availableat: https://github.com/frida/frida FridaisafreeandopensourcedynamiccodeinstrumentationtoolkitwrittenbyOleAndréVadlaRavnåsthatworksby injectingtheQuickJSJavaScriptengine(previouslyDuktapeandV8)intotheinstrumentedprocess. Fridaletsyouexecute snippetsofJavaScriptintonativeappsonAndroidandiOS(aswellasonotherplatforms). ToinstallFridalocally,simplyrun: pipinstallfrida-tools Orrefertotheinstallationpageformoredetails. Codecanbeinjectedinseveralways. Forexample,XposedpermanentlymodifiestheAndroidapploader,providinghooks forrunningyourowncodeeverytimeanewprocessisstarted. Incontrast,Fridaimplementscodeinjectionbywriting codedirectlyintotheprocessmemory. Whenattachedtoarunningapp: • Fridausesptracetohijackathreadofarunningprocess. Thisthreadisusedtoallocateachunkofmemoryand populateitwithamini-bootstrapper. • Thebootstrapperstartsafreshthread, connectstotheFridadebuggingserverthat’srunningonthedevice, and loadsasharedlibrarythatcontainstheFridaagent(frida-agent.so). • Theagentestablishesabi-directionalcommunicationchannelbacktothetool(e.g.theFridaREPLoryourcustom Pythonscript). • Thehijackedthreadresumesafterbeingrestoredtoitsoriginalstate,andprocessexecutioncontinuesasusual. 562\\n• FridaArchitecture,source: https://www.frida.re/docs/hacking/ Fridaoffersthreemodesofoperation: 1. Injected: thisisthemostcommonscenariowhenfrida-serverisrunningasadaemonintheiOSorAndroiddevice. frida-core is exposed over TCP, listening on localhost:27042 by default. Running in this mode is not possible on devicesthatarenotrootedorjailbroken. 2. Embedded: thisisthecasewhenyourdeviceisnotrootednorjailbroken(youcannotuseptraceasanunprivileged user),you’reresponsiblefortheinjectionofthefrida-gadgetlibrarybyembeddingitintoyourapp,manuallyorvia third-partytoolssuchasObjection. 3. Preloaded: similar to LD_PRELOAD or DYLD_INSERT_LIBRARIES. You can configure the frida-gadget to run autonomouslyandloadascriptfromthefilesystem(e.g.pathrelativetowheretheGadgetbinaryresides). Independently of the chosen mode, you can make use of the Frida JavaScript APIs to interact with the running process anditsmemory. SomeofthefundamentalAPIsare: • Interceptor: WhenusingtheInterceptorAPI,Fridainjectsatrampoline(akain-linehooking)atthefunctionprologue whichprovokesaredirectiontoourcustomcode,executesourcode,andreturnstotheoriginalfunction. Notethat whileveryeffectiveforourpurpose,thisintroducesaconsiderableoverhead(duetothetrampolinerelatedjumping andcontextswitching)andcannotbeconsideredtransparentasitoverwritestheoriginalcodeandactssimilarto a debugger (putting breakpoints) and therefore can be detected in a similar manner, e.g. by applications that periodicallychecksumtheirowncode. • Stalker: If your tracing requirements include transparency, performance and high granularity, Stalker should be yourAPIofchoice. WhentracingcodewiththeStalkerAPI,Fridaleveragesjust-in-timedynamicrecompilation(by usingCapstone): whenathreadisabouttoexecuteitsnextinstructions,Stalkerallocatessomememory,copies the original code over, and interlaces the copy with your custom code for instrumentation. Finally, it executes thecopy(leavingtheoriginalcodeuntouched,andthereforeavoidinganyanti-debuggingchecks). Thisapproach 563\\nincreases instrumentation performance considerably and allows for very high granularity when tracing (e.g. by tracingexclusivelyCALLorRETinstructions). Youcanlearnmorein-depthdetailsintheblogpost“Anatomyofa codetracer”byFrida’screatorOle[#vadla]. SomeexamplesofuseforStalkerare,forexamplewho-does-it-callor diff-calls. • Java: WhenworkingonAndroidyoucanusethisAPItoenumerateloadedclasses,enumerateclassloaders,create andusespecificclassinstances,enumerateliveinstancesofclassesbyscanningtheheap,etc. • ObjC:WhenworkingoniOSyoucanusethisAPItogetamappingofallregisteredclasses,registerorusespecific classorprotocolinstances,enumerateliveinstancesofclassesbyscanningtheheap,etc. Frida", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 176}}