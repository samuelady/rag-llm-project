{"text": "Evidence The following form sends inputs of type password plainly in the URL: Request / Response URL https://pentest-ground.com:4280/vulnerabilities/csrf/ 58\\nMethod GET Parameters Headers: User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Cookies: PHPSESSID=589f7516a2374b37367b6b2f248c71f5 security=low Evidence The following form sends inputs of type password plainly in the URL: Request / Response URL https://pentest-ground.com:4280/vulnerabilities/csrf/ Method GET Parameters Query: Change=Change password_conf=Secure123456$ password_new=Secure123456$ Headers: User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36 Cookies: PHPSESSID=589f7516a2374b37367b6b2f248c71f5 security=low Evidence The following form sends inputs of type password plainly in the URL: Request / Response 59\\nVulnerability description We found a form which is submitted using a GET method and has inputs of the type password. The end result is that passwords are submitted in URLs. Risk description Passwords submitted in URLs have a higher chance of being leaked. The main reason is that URLs can be leaked in browser cross-site requests via the Referer header. Additionally, URLs are usually stored in all kinds of logs. If any access or error logs of the server were publicly accessible, an attacker could also harvest password from it. Recommendation You should submit passwords using POST rather than GET. This way sensitive data won't be shared to other locations via URLs. References https://developer.mozilla.org/en- US/docs/Web/Security/Referer_header:_privacy_and_security_concerns Classification Category ID / Value OWASP Top 10 - 2021 A4 - Insecure Design Verification ✔ This finding was validated so it is not a False Positive. 60\\n4.1.21 Server software and technology found Affected target https://pentest-ground.com:4280/ Status: Open Evidence Software / Version Category Nginx 1.27.4 Web servers, Reverse proxies PHP 8.4.3 Programming languages Vulnerability description We noticed that server software and technology details are exposed, potentially aiding attackers in tailoring specific exploits against identified systems and versions. Risk description The risk is that an attacker could use this information to mount specific attacks against the identified software type and version. Recommendation We recommend you to eliminate the information which permits the identification of software platform, technology, server and operating system: HTTP server headers, HTML meta information, etc. References https://owasp.org/www-project-web-security-testing-guide/stable/4- Web_Application_Security_Testing/01-Information_Gathering/02- Fingerprint_Web_Server.html 61\\nClassification Category ID / Value OWASP Top 10 - 2017 A6 - Security Misconfiguration OWASP Top 10 - 2021 A5 - Security Misconfiguration Screenshots Figure 1. Website Screenshot Verification ✘ 62\\n4.1.22 Robots.txt file found Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL https://pentest-ground.com:4280/robots.txt Vulnerability description We found the robots.txt on the target server. This file instructs web crawlers what URLs and endpoints of the web application they can visit and crawl. Website administrators often misuse this file while attempting to hide some web pages from the users. Risk description There is no particular security risk in having a robots.txt file. However, it's important to note that adding endpoints in it should not be considered a security measure, as this file can be directly accessed and read by anyone. Recommendation We recommend you to manually review the entries from robots.txt and remove the ones which lead to sensitive locations in the website (ex. administration panels, configuration files, etc). References https://www.theregister.co.uk/2015/05/19/robotstxt/ Classification Category", "metadata": {"doc_id": "Sample-Pentest-Engagement-Report-group-by-target", "chunk_id": 13}}