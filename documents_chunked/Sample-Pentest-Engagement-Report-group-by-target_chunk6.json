{"text": "application in the browser. The application uses the following (non-HttpOnly) cookies: _ga:GA1.1.1244663522.1739354417_ga_Z3XCDXSJ3P:GS1.1.17 39354416.1.1.1739354516.20.0.0_gcl_au:1.1.613626497.1739354 416PHPSESSID:19d5a469db64624265da3f93925f7be3security:l ow Request / Response Vulnerability description We found that the target web application is vulnerable to Cross-Site Scripting (XSS) attacks. This vulnerability is caused by inadequate input validation, allowing a malicious actor to inject and execute JavaScript code in the context of another user's session. Risk description The risk is that the code injected by an attacker could potentially lead to effects such as stealing session cookies, calling application features on behalf of another user, exploiting browser vulnerabilities. Successful exploitation of Cross-Site Scripting attacks requires human interaction (e.g. determine the user to access a special link by social engineering). Recommendation There are several ways to mitigate XSS attacks. We recommend to: - never trust user input - always encode and escape user input (using a Security Encoding Library) - use the HTTPOnly cookie flag to protect from cookie theft - implement Content Security Policy - use the X-XSS-Protection Response Header. 27\\nReferences https://owasp.org/www-community/attacks/xss https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Che at_Sheet.html Classification Category ID / Value CWE CWE-79 OWASP Top 10 - 2017 A7 - Cross-Site Scripting (XSS) OWASP Top 10 - 2021 A3 - Injection Verification âœ” This finding was validated so it is not a False Positive. 28\\n4.1.7 Server Side Request Forgery Affected target https://pentest-ground.com:4280/ Status: Open Evidence URL https://pentest-ground.com:4280/vulnerabilities/fi/ Method GET Vulnerable page Parameter (Query Parameter) Evidence Injecting the payload http://25979911277719046700.taaIqJBO4h.bgGkxqa paY.ptt-logger.net in the page query parameter triggered a DNS lookup to one of our DNS loggers: taaIqJBO4h.bgGkxqapaY.ptt-logger.net. The DNS lookup was for a record of A type coming from 109.74.192.20. Request / Response URL https://pentest-ground.com:4280/vulnerabilities/fi/ Method GET Vulnerable page Parameter (Query Parameter) Evidence Injecting the payload 29\\nhttp://25979911277719046700.taaIqJBO4h.bgGkxqa paY.ptt-logger.net in the page query parameter triggered a DNS lookup to one of our DNS loggers: taaIqJBO4h.bgGkxqapaY.ptt-logger.net. The DNS lookup was for a record of AAAA type coming from 109.74.192.20. Request / Response URL https://pentest-ground.com:4280/vulnerabilities/fi/ Method GET Vulnerable page Parameter (Query Parameter) Evidence Injecting the payload https://ptt- logger.net/l/taaIqJBO4h/?id=8617179204880889 2490 in the page query parameter triggered an HTTP request to one of our HTTP loggers: https://ptt- logger.net/l/taaIqJBO4h/. The request came from the IP 178.79.134.182.We received the following HTTP headers: Request / Response - Host: ptt-logger.net - X-Forwarded-For: 178.79.134.182 - Connection: close Vulnerability description We found that the target application is affected by a Server Side Request Forgery (SSRF) vulnerability. SSRF is a vulnerability that allows a user to force the backend server to initiate HTTP requests to arbitrary URLs specified in the input parameters. We have detected this vulnerability by supplying URLs to our HTTP handlers to the server and confirming that we have received the expected request. Risk description The risk exists that a remote attacker could read or submit data to HTTP endpoints found in predefined locations. For example, applications hosted on cloud providers like 30\\nAWS, Digital Ocean, and Oracle Cloud can make unauthenticated requests to http://169.254.169.254/ to receive metadata. Other examples of services providing HTTP APIs on internal IPs are Elasticsearch, Prometheus, and Grafana. Additionally, the backend framework might support", "metadata": {"doc_id": "Sample-Pentest-Engagement-Report-group-by-target", "chunk_id": 6}}