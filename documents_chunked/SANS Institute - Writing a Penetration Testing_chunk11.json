{"text": "firewall. ! o Allow only authorized IPs to connect to other services or best disable ! ! unneeded services. ! • It was obvious that GPEN.KM patch management policy and procedure is either ! ! not existing or not implemented correctly. One of these servers was running ! windows 2000 server without any patches. This opened a very high security risk ! on the organization. ! ! • Services installed were running with default configuration such as FTP. ! Web application hosted in 192.168.1.75 is running multiple security vulnerability ! ! such as SQL injection and XSS. An attacker can gain access to customer ! information and manipulate it. GPEN.KM has to implement input validation and ! \"#$re!%-&d'e(s#ig)*n )t&h'e+ !w,!e-b. a/p0p!l.ic-a1ti2o!n1 .c0o3m!0po0n4e5n!t.. 5B6e7st! 5p8ra9c5tic!.e4 i6s 7to!: h;a8v3e! -3-/ti;e0r !d3e8s3ig;n!. At least the application server and DB server should be hosted in deferent servers and segregated by a firewall. 1.6. Summary of Recommendation Adopt defense-in-depth approach where GPEN.KM utilizes variety of security tools/systems and processes to protect its assets and information. Among these: • Deploy Host Intrusion Prevention Systems –HIPS on servers and desktops, also enable personal firewall on desktop (such as Microsoft Windows firewall). • Perform security hardening on servers in the production environment especially those in the Internet and/or external DMZs. • Implement Patch management system(s) to provide centralized control over fixes, updates and patches to all systems, devices and equipments. This will minimize overhead on operations team and will elevate security resistance. )*+,%\"&(!.$*&/01(2$*&/0342*0.-5%2( ( ( @ 2021 SANS Institute Author Retains Full Rights\\n! ! (A&0#0+4(*(M:+:#&*#0%+(C:,#0+4(N:<%&# >O( ! ( ! • GPEN.KM has to implement input validation and re-design the web ! ! application component. Best practice is to have 3-tier design. At least the ! application server and DB server should be hosted in deferent servers and ! ! segregated by a firewall. ! • Conduct vulnerability assessment at least twice a year and penetration testing ! ! at least once a year or if there is a major change in the information assets. ! • Develop and implement a training path for the current IT staff. ! ! ! 2. Methodology ! ! ! ! ! ! ! ! ! ! ! \"#$!%&'(#)*)&'+!,!-./0!.-12!1.03!0045!.567!5895!.467!:;83!-/;0!383;! Figure 2 Penetration Testing Methodology 2.1. Planning During planning we gather information from public sources to learn about target: - People and culture - Technical infrastructure Then, we detect the live system its O.S and determined the running services and its versions. )*+,%\"&(!.$*&/01(2$*&/0342*0.-5%2( ( ( @ 2021 SANS Institute Author Retains Full Rights\\n! ! (A&0#0+4(*(M:+:#&*#0%+(C:,#0+4(N:<%&# >P( ! ( ! 2.2. Exploitation ! ! Utilizing the information gathered in Planning we start to find the vulnerability for each ! ! O.S and service that we discovered after that trying to exploit it. ! ! 2.3. Reporting ! ! Based on the results from the first two steps, we start analyzing the results. Our Risk ! ! rating is based on this calculation: ! ! ! Risk=Threat * Vulnerability * Impact ! ! ! Threat Low", "metadata": {"doc_id": "SANS Institute - Writing a Penetration Testing", "chunk_id": 11}}