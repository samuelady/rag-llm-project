{"text": "an App Debuggable Bydefault,anappavailableontheAppleAppStoreisnotdebuggable. InordertodebuganiOSapplication,itmusthave theget-task-allowentitlementenabled. Thisentitlementallowsotherprocesses(likeadebugger)toattachtotheapp. Xcodeisnotaddingtheget-task-allowentitlementinadistributionprovisioningprofile;itisonlywhitelistedandadded inadevelopmentprovisioningprofile. Thus,todebuganiOSapplicationobtainedfromtheAppStore,itneedstobere-signedwithadevelopmentprovisioning profilewiththeget-task-allowentitlement. Howtore-signanapplicationisdiscussedinthenextsection. Process Exploration Platform: ios Whentestinganapp,processexplorationcanprovidethetesterwithdeepinsightsintotheappprocessmemory. Itcan beachievedviaruntimeinstrumentationandallowstoperformtaskssuchas: • Retrievingthememorymapandloadedlibraries. • Searchingforoccurrencesofcertaindata. • Afterdoingasearch,obtainingthelocationofacertainoffsetinthememorymap. • Performingamemorydumpandinspectorreverseengineerthebinarydataoffline. • ReverseengineeringabinaryorFrameworkwhileit’srunning. As you can see, these tasks are rather supportive and/or passive, they’ll help us collect data and information that will supportothertechniques. Therefore,they’renormallyusedincombinationwithothertechniquessuchasmethodhook- ing. In the following sections you will be using r2frida to retrieve information straight from the app runtime. First start by openinganr2fridasessiontothetargetapp(e.g.iGoat-Swift)thatshouldberunningonyouriPhone(connectedperUSB). Usethefollowingcommand: r2frida://usb//iGoat-Swift Memory Maps and Inspection Youcanretrievetheapp’smemorymapsbyrunning:dm: 347\\n[0x00000000]>:dm 0x0000000100b7c000 -0x0000000100de0000r-x/private/var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/iGoat-Swift.app/iGoat-Swift 0x0000000100de0000 -0x0000000100e68000rw-/private/var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/iGoat-Swift.app/iGoat-Swift 0x0000000100e68000 -0x0000000100e97000r--/private/var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/iGoat-Swift.app/iGoat-Swift ... 0x0000000100ea8000 -0x0000000100eb0000rw- 0x0000000100eb0000 -0x0000000100eb4000r-- 0x0000000100eb4000 -0x0000000100eb8000r-x/usr/lib/TweakInject.dylib 0x0000000100eb8000 -0x0000000100ebc000rw-/usr/lib/TweakInject.dylib 0x0000000100ebc000 -0x0000000100ec0000r--/usr/lib/TweakInject.dylib 0x0000000100f60000 -0x00000001012dc000r-x ↪ /private/var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/iGoat-Swift.app/Frameworks/Realm.framework/Realm While you’re searching or exploring the app memory, you can always verify where your current offset is located in the memorymap. Insteadofnotingandsearchingforthememoryaddressinthislistyoucansimplyrun:dm.. You’llfindan exampleinthefollowingsection“In-MemorySearch”. Ifyou’reonlyinterestedintothemodules(binariesandlibraries)thattheapphasloaded,youcanusethecommand:il tolistthemall: [0x00000000]>:il 0x0000000100b7c000iGoat-Swift 0x0000000100eb4000TweakInject.dylib 0x00000001862c0000SystemConfiguration 0x00000001847c0000libc++.1.dylib 0x0000000185ed9000Foundation 0x000000018483c000libobjc.A.dylib 0x00000001847be000libSystem.B.dylib 0x0000000185b77000CFNetwork 0x0000000187d64000CoreData 0x00000001854b4000CoreFoundation 0x00000001861d3000Security 0x000000018ea1d000UIKit 0x0000000100f60000Realm Asyoumightexpectyoucancorrelatetheaddressesofthelibrarieswiththememorymaps: e.g.themainappbinary iGoat-Swiftislocatedat0x0000000100b7c000andtheRealmFrameworkat0x0000000100f60000. Youcanalsouseobjectiontodisplaythesameinformation. $objection --gadget OWASP.iGoat-Swiftexplore OWASP.iGoat-Swifton (iPhone:11.1.2)[usb] #memorylistmodules Savetheoutputbyadding `--jsonmodules.json`tothiscommand Name Base Size Path -------------------------------- ----------- -------------------- ------------------------------------------------------------------------------ iGoat-Swift 0x100b7c000 2506752 (2.4MiB) /var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/iGo... TweakInject.dylib 0x100eb4000 16384 (16.0KiB) /usr/lib/TweakInject.dylib SystemConfiguration 0x1862c0000 446464 (436.0KiB) /System/Library/Frameworks/SystemConfiguration.framework/SystemConfiguratio... libc++.1.dylib 0x1847c0000 368640 (360.0KiB) /usr/lib/libc++.1.dylib In-Memory Search In-memorysearchisaveryusefultechniquetotestforsensitivedatathatmightbepresentintheappmemory. See r2frida’s help on the search command (\\/?) to learn about the search command and get a list of options. The followingshowsonlyasubsetofthem: [0x00000000]>\\/? / search /j searchjson /w searchwide /wj searchwidejson /x searchhex /xj searchhexjson ... Youcanadjustyoursearchbyusingthesearchsettings\\e~search. Forexample,\\e search.quiet=true;willprintonly theresultsandhidesearchprogress: 348\\n[0x00000000]>\\e~search esearch.in=perm:r-- esearch.quiet=false Fornow,we’llcontinuewiththedefaultsandconcentrateonstringsearch. Inthisfirstexample,youcanstartbysearching forsomethingthatyouknowshouldbelocatedinthemainbinaryoftheapp: [0x00000000]>\\/iGoat Searching5bytes:69476f6174 Searching5bytesin [0x0000000100b7c000-0x0000000100de0000] ... hits:509 0x100d7d332hit2_0iGoat_Swift24StringAnalysisExerciseVCC 0x100d7d3b2hit2_1iGoat_Swift28BrokenCryptographyExerciseVCC 0x100d7d442hit2_2iGoat_Swift23BackgroundingExerciseVCC 0x100d7d4b2hit2_3iGoat_Swift9AboutCellC 0x100d7d522hit2_4iGoat_Swift12FadeAnimatorV Nowtakethefirsthit,seektoitandcheckyourcurrentlocationinthememorymap: [0x00000000]>s0x100d7d332 [0x100d7d332]>:dm. 0x0000000100b7c000 -0x0000000100de0000r-x/private/var/containers/Bundle/Application/3ADAF47D-A734-49FA-B274-FBCA66589E67/iGoat-Swift.app/iGoat-Swift Asexpected,youarelocatedintheregionofthemainiGoat-Swiftbinary(r-x,readandexecute). Intheprevioussection, yousawthatthemainbinaryislocatedbetween0x0000000100b7c000and0x0000000100e97000. Now,forthissecondexample,youcansearchforsomethingthat’snotintheappbinarynorinanyloadedlibrary,typically userinput. OpentheiGoat-SwiftappandnavigateinthemenutoAuthentication->RemoteAuthentication->Start. Thereyou’llfindapasswordfieldthatyoucanoverwrite. Writethestring“owasp-mstg”butdonotclickonLoginjust yet. Performthefollowingtwosteps. [0x00000000]>\\/owasp-mstg hits:1 0x1c06619c0hit3_0owasp-mstg Infact,thestringcouldbefoundataddress0x1c06619c0. Seekstothereandretrievethecurrentmemoryregionwith :dm.. [0x100d7d332]>s0x1c06619c0 [0x1c06619c0]>:dm. 0x00000001c0000000 -0x00000001c8000000rw- Nowyouknowthatthestringislocatedinarw-(readandwrite)regionofthememorymap. Additionally, you can search for occurrences of the wide version of the string (/w) and, again, check their memory re- gions: Thistimewerunthe\\dm. commandforall@@hitsmatchingtheglobhit5_*. [0x00000000]>/wowasp-mstg Searching20bytes:6f0077006100730070002d006d00730074 006700 Searching20bytesin [0x0000000100708000-0x000000010096c000] ... hits:2 0x1020d1280hit5_06f0077006100730070002d006d00730074006700 0x1030c9c85hit5_16f0077006100730070002d006d00730074006700 [0x00000000]>\\dm.@@hit5_* 0x0000000102000000 -0x0000000102100000rw- 0x0000000103084000 -0x00000001030cc000rw- Theyareinadifferentrw-region. Notethatsearchingforthewideversionsofstringsissometimestheonlywaytofind themasyou’llseeinthefollowingsection. In-memorysearchcan be very useful to quickly know ifcertain data is located in the main app binary, inside a shared libraryorinanotherregion. Youmayalsouseittotestthebehavioroftheappregardinghowthedataiskeptinmemory. Forinstance,youcouldcontinuethepreviousexample,thistimeclickingonLoginandsearchingagainforoccurrences ofthedata. Also,youmaycheckifyoustillcanfindthosestringsinmemoryaftertheloginiscompletedtoverifyifthis sensitivedataiswipedfrommemoryafteritsuse. 349\\nMemory Dump Youcandumptheapp’sprocessmemorywithobjectionandFridump. Totakeadvantageofthesetoolsonanon-jailbroken device,theAndroidappmustberepackagedwithfrida-gadget.soandre-signed. Adetailedexplanationofthisprocess is in the section “Dynamic Analysis on Non-Jailbroken Devices. To use these tools on a jailbroken phone, simply have frida-serverinstalledandrunning. Withobjectionitispossibletodumpallmemoryoftherunningprocessonthedevicebyusingthecommandmemorydump all. $objectionexplore iPhoneon (iPhone:10.3.1)[usb] #memorydumpall/Users/foo/memory_iOS/memory Dumping768.0KiBfrombase:0x1ad200000 [####################################] 100% Memorydumpedtofile:/Users/foo/memory_iOS/memory Alternatively you can use Fridump. First, you need the name of the app you want to dump, which you can get with frida-ps. $frida-ps -U PID Name ---- ------ 1026 Gadget Afterwards,specifytheappnameinFridump. $python3fridump.py -uGadget -s CurrentDirectory:/Users/foo/PentestTools/iOS/fridump Outputdirectoryissetto:/Users/foo/PentestTools/iOS/fridump/dump Creatingdirectory... StartingMemorydump... Progress: [##################################################]100.0%Complete Runningstringsonallfiles: Progress: [##################################################]100.0%Complete Finished!PressCtrl+C Whenyouaddthe-sflag,allstringsareextractedfromthedumpedrawmemoryfilesandaddedtothefilestrings.txt, whichisstoredinFridump’sdumpdirectory. Inbothcases,ifyouopenthefileinradare2youcanuseitssearchcommand(/). Notethatfirstwedoastandardstring searchwhichdoesn’tsucceedandnextwesearchforawidestring,whichsuccessfullyfindsourstring“owasp-mstg”. $r2memory_ios [0x00000000]>/owasp-mstg Searching10bytesin [0x0-0x628c000] hits:0 [0x00000000]>/wowasp-mstg Searching20bytesin [0x0-0x628c000] hits:1 0x0036f800hit4_06f0077006100730070002d006d00730074006700 Next,wecanseektoitsaddressusings0x0036f800orshit4_0andprintitusingpsw(whichstandsforprintstringwide) orusepxtoprintitsrawhexadecimalvalues: [0x0036f800]>psw owasp-mstg [0x0036f800]>px48 -offset - 01 23 45 67 89 AB CD EF 0123456789ABCDEF 0x0036f800 6f0077006100730070002d006d007300 o.w.a.s.p.-.m.s. 0x0036f810 74006700000000000000000000000000 t.g............. 0x0036f820 00000000000000000000000000000000 ................ Notethatinordertofindthisstringusingthestringscommandyou’llhavetospecifyanencodingusingthe-eflagand inthiscaselfor16-bitlittle-endiancharacter. 350\\n$strings -elmemory_ios |grep owasp-mstg owasp-mstg Waiting for the debugger Platform: ios TODO:Shouldbepossiblewithlldbaswell,currentlydon’thaveanything. Get Loaded Native Libraries Platform: ios Using Objection Youcanusethelist_frameworkscommandinobjectiontolistalltheapplication’sbundlesthatrepresentFrameworks. ...itudehacks.DVIAswiftv2.developon (iPhone:13.2.3)[usb] #iosbundleslist_frameworks Executable Bundle Version Path -------------- ----------------------------------------- --------- ------------------------------------------- Bolts org.cocoapods.Bolts 1.9.0 ...8/DVIA-v2.app/Frameworks/Bolts.framework RealmSwift org.cocoapods.RealmSwift 4.1.1 ...A-v2.app/Frameworks/RealmSwift.framework ...ystem/Library/Frameworks/IOKit.framework ... Using Frida", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 125}}