{"text": "triggers an analysis after loading the targetbinary. However,thisshouldbeusedsparinglyandwithsmallbinariesasitisverytimeandresourceconsuming. Youcanlearnmoreaboutthisinthechapter“TamperingandReverseEngineeringonAndroid”. Onceinther2shell,youcanalsoaccessfunctionsofferedbytheotherradare2utilities. Forexample,runningiwillprint theinformationofthebinary,exactlyasrabin2 -Idoes. Toprintallthestringsuserabin2 -Zorthecommandiz(orthelessverboseizq)fromther2shell. [0x000009c8]>izq 0xc503939/dev/com.koushikdutta.superuser.daemon/ 0xc792525/system/app/Superuser.apk ... 0xd2344445UJiFctbmgbDoLXmpL12mkno8HT4Lv8dlat8FxR2GOc= 0xd5132328d127684cbc37c17616d806cf50473cc 0xd7666 <init> 0xd831010AESerror: 0xd8f2020AES/ECB/PKCS7Padding 0xda51818Appisdebuggable! 0xdc099CodeCheck 0x11ac77Nope... 0x11bf1414Rootdetected! Mostofthetimeyoucanappendspecialoptionstoyourcommandssuchasqtomakethecommandlessverbose(quiet) orjtogivetheoutputinJSONformat(use~{}toprettifytheJSONstring). [0x000009c8]>izj~{} [ { \"vaddr\":3152, \"paddr\": 3152, \"ordinal\":1, \"size\":39, \"length\":39, \"section\":\"file\", \"type\":\"ascii\", \"string\":\"L2Rldi9jb20ua291c2hpa2R1dHRhLnN1cGVydXNlci5kYWVtb24v\" }, 538\\n{ \"vaddr\":3193, \"paddr\":3193, \"ordinal\":2, \"size\":25, \"length\":25, \"section\":\"file\", \"type\":\"ascii\", \"string\":\"L3N5c3RlbS9hcHAvU3VwZXJ1c2VyLmFwaw==\" }, Youcanprinttheclassnamesandtheirmethodswithther2commandic(informationclasses). [0x000009c8]>ic ... 0x0000073c[0x00000958 -0x00000abc] 356class5Lsg/vantagepoint/uncrackable1/MainActivity ::Landroid/app/Activity; 0x00000958method0pC Lsg/vantagepoint/uncrackable1/MainActivity.method.<init>()V 0x00000970method1P Lsg/vantagepoint/uncrackable1/MainActivity.method.a(Ljava/lang/String;)V 0x000009c8method2r Lsg/vantagepoint/uncrackable1/MainActivity.method.onCreate (Landroid/os/Bundle;)V 0x00000a38method3p Lsg/vantagepoint/uncrackable1/MainActivity.method.verify (Landroid/view/View;)V 0x0000075c[0x00000acc -0x00000bb2] 230class6Lsg/vantagepoint/uncrackable1/a::Ljava/lang/Object; 0x00000accmethod0sp Lsg/vantagepoint/uncrackable1/a.method.a(Ljava/lang/String;)Z 0x00000b5cmethod1sp Lsg/vantagepoint/uncrackable1/a.method.b(Ljava/lang/String;)[B Youcanprinttheimportedmethodswithther2commandii(informationimports). [0x000009c8]>ii [Imports] Num Vaddr Bind TypeName ... 290x000005cc NONE FUNCLjava/lang/StringBuilder.method.append(Ljava/lang/String;)Ljava/lang/StringBuilder; 300x000005d4 NONE FUNCLjava/lang/StringBuilder.method.toString()Ljava/lang/String; 310x000005dc NONE FUNCLjava/lang/System.method.exit(I)V 320x000005e4 NONE FUNCLjava/lang/System.method.getenv(Ljava/lang/String;)Ljava/lang/String; 330x000005ec NONE FUNCLjavax/crypto/Cipher.method.doFinal([B)[B 340x000005f4 NONE FUNCLjavax/crypto/Cipher.method.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; 350x000005fc NONE FUNCLjavax/crypto/Cipher.method.init(ILjava/security/Key;)V 360x00000604 NONE FUNCLjavax/crypto/spec/SecretKeySpec.method.<init>([BLjava/lang/String;)V Acommonapproachwheninspectingabinaryistosearchforsomething,navigatetoitandvisualizeitinordertointerpret thecode. Oneofthewaystofindsomethingusingradare2isbyfilteringtheoutputofspecificcommands, i.e.togrep themusing~plusakeyword(~+forcase-insensitive). Forexample,wemightknowthattheappisverifyingsomething, wecaninspectallradare2flagsandseewherewefindsomethingrelatedto“verify”. Whenloadingafile, radare2tagseverythingit’sabletofind. Thesetaggednamesorreferencesarecalledflags. Youcanaccessthemviathecommandf. Inthiscasewewillgreptheflagsusingthekeyword“verify”: [0x000009c8]>f~+verify 0x00000a38132sym.Lsg_vantagepoint_uncrackable1_MainActivity.method. \\ verify_Landroid_view_View__V 0x00000a38132method.public.Lsg_vantagepoint_uncrackable1_MainActivity. \\ Lsg_vantagepoint_uncrackable1 _MainActivity.method.verify_Landroid_view_View__V 0x000014006str.verify Itseemsthatwe’vefoundonemethodin0x00000a38(thatwastaggedtwotimes)andonestringin0x00001400. Let’s navigate(seek)tothatmethodbyusingitsflag: [0x000009c8]>ssym.Lsg_vantagepoint_uncrackable1_MainActivity.method. \\ verify_Landroid_view_View__V Andofcourseyoucanalsousethedisassemblercapabilitiesofr2andprintthedisassemblywiththecommandpd(or pdfifyouknowyou’realreadylocatedinafunction). [0x00000a38]>pd 539\\nr2commandsnormallyacceptoptions(seepd?),e.g.youcanlimittheopcodesdisplayedbyappendinganumber(“N”) tothecommandpd N. Insteadofjustprintingthedisassemblytotheconsoleyoumaywanttoentertheso-calledVisualModebytypingV. By default, you will see the hexadecimal view. By typing p you can switch to different views, such as the disassembly view: Radare2offersaGraphModethatisveryusefultofollowtheflowofthecode. YoucanaccessitfromtheVisualMode bytypingV: 540\\nThisisonlyaselectionofsomeradare2commandstostartgettingsomebasicinformationfromAndroidbinaries. Radare2 isverypowerfulandhasdozensofcommandsthatyoucanfindontheradare2commanddocumentation. Radare2will beusedthroughouttheguidefordifferentpurposessuchasreversingcode,debuggingorperformingbinaryanalysis. We willalsouseitincombinationwithotherframeworks,especiallyFrida(seether2fridasectionformoreinformation). Pleaserefertothechapter“TamperingandReverseEngineeringonAndroid”formoredetaileduseofradare2onAndroid, especiallywhenanalyzingnativelibraries. Youmayalsowanttoreadtheofficialradare2book. Android NDK Platform: android TheAndroidNDKcontainsprebuiltversionsofthenativecompilerandtoolchain. BoththeGCCandClangcompilershave traditionallybeensupported,butactivesupportforGCCendedwithNDKrevision14. Thedevicearchitectureandhost OSdeterminetheappropriateversion. TheprebuilttoolchainsareinthetoolchainsdirectoryoftheNDK,whichcontains onesubdirectoryforeacharchitecture. Architecture Toolchainname ARM-based arm-linux-androideabi-<gcc-version> x86-based x86-<gcc-version> MIPS-based mipsel-linux-android-<gcc-version> ARM64-based aarch64-linux-android-<gcc-version> X86-64-based x86_64-<gcc-version> MIPS64-based mips64el-linux-android-<gcc-version> Besidespickingtherightarchitecture,youneedtospecifythecorrectsysrootforthenativeAPIlevelyouwanttotarget. Thesysrootisadirectorythatcontainsthesystemheadersandlibrariesforyourtarget. NativeAPIsvarybyAndroidAPI 541\\nlevel. AvailablesysrootdirectoriesforeachAndroidAPIlevelcanbefoundin$NDK/platforms/. EachAPIleveldirectory containssubdirectoriesforthevariousCPUsandarchitectures. Onepossibilityforsettingupthebuildsystemisexportingthecompilerpathandnecessaryflagsasenvironmentvariables. To make things easier, however, the NDK allows you to create a so-called standalone toolchain, which is a temporary toolchainthatincorporatestherequiredsettings. Tosetupastandalonetoolchain,downloadthelateststableversionoftheNDK.ExtracttheZIPfile,changeintotheNDK rootdirectory,andrunthefollowingcommand: ./build/tools/make_standalone_toolchain.py --arch arm--api 24--install-dir /tmp/android-7-toolchain ThiscreatesastandalonetoolchainforAndroid7.0(APIlevel24)inthedirectory/tmp/android-7-toolchain. Forcon- venience, you can export an environment variable that points to your toolchain directory, (we’ll be using this in the examples). Runthefollowingcommandoraddittoyour.bash_profileorotherstartupscript: export TOOLCHAIN=/tmp/android-7-toolchain jadx Platform: android Availableat: https://github.com/skylot/jadx jadx(DextoJavaDecompiler)isacommandlineandGUItoolforproducingJavasourcecodefromAndroidDEXandAPK files-https://github.com/skylot/jadx nm - Android Platform: android nm is a tool that displays the name list (symbol table) of the given binary. You can find here more information for the Android(GNU)version. Android-SSL-TrustKiller Platform: android Availableat: https://github.com/iSECPartners/Android-SSL-TrustKiller Android-SSL-TrustKillerisaCydiaSubstrateModuleactingasablackboxtooltobypassSSLcertificatepinningformost applicationsrunningonadevice-https://github.com/iSECPartners/Android-SSL-TrustKiller House Platform: android Availableat: https://github.com/nccgroup/house HouseisaruntimemobileapplicationanalysistoolkitforAndroidapps,developedandmaintainedbytheNCCGroupand iswritteninPython. It’sleveragingarunningFridaserveronarooteddeviceortheFridagadgetinarepackagedAndroidapp. Theintention ofHouseistoallowaneasywayofprototypingFridascriptsviaitsconvenientwebGUI. Theinstallationinstructionsand“how-toguide”ofHousecanbefoundintheReadmeoftheGithubrepo. 542\\nAndroid SDK Platform: android Local Android SDK installations are managed via Android Studio. Create an empty project in Android Studio and select Tools->SDK ManagertoopentheSDKManagerGUI.TheSDK PlatformstabiswhereyouinstallSDKsformultiple APIlevels. RecentAPIlevelsare: • Android11.0(APIlevel30) • Android10.0(APIlevel29) • Android9.0(APIlevel28) • Android8.1(APIlevel27) • Android8.0(APIlevel26) AnoverviewofallAndroidcodenames,theirversionnumberandAPIlevelscanbefoundintheAndroidDeveloperDocu- mentation. InstalledSDKsareonthefollowingpaths: Windows: C:\\Users\\<username>\\AppData\\Local\\Android\\sdk MacOS: /Users/<username>/Library/Android/sdk Note: OnLinux,youneedtochooseanSDKdirectory. /opt,/srv,and/usr/localarecommonchoices. 543\\nsimctl Platform: ios simctlisanXcodetoolthatallowsyoutointeractwithiOSsimulatorsviathecommandlinetoe.g.managesimulators, launchapps,takescreenshotsorcollecttheirlogs. lldb Platform: ios Availableat: https://lldb.llvm.org/ AdebuggerbyApple’sXcodeusedfordebuggingiOSapplications-https://lldb.llvm.org/ Xcode Command Line Tools Platform: ios Availableat: https://developer.apple.com/download/more/ AfterinstallingXcode,inordertomakealldevelopmenttoolsavailablesystemwide,itisrecommendedtoinstalltheXcode CommandLineToolspackage. ThiswillbehandyduringtestingofiOSappsassomeofthetools(e.g.objection)arealso relyingontheavailabilityofthispackage. YoucandownloaditfromtheofficialApplewebsiteorinstallitstraightaway fromyourterminal: xcode-select --install class-dump-dyld Platform: ios Availableat: https://github.com/limneos/classdump-dyld class-dump-dyldbyEliasLimneosallowssymbolstobedumpedandretrieveddirectlyfromthesharedcache,eliminating thenecessityofextractingthefilesfirst. Itcangenerateheaderfilesfromappbinaries,libraries,frameworks,bundles, orthewholedyld_shared_cache. Directoriesortheentiretyofdyld_shared_cachecanberecursivelymass-dumped. Frida for iOS Platform: ios Availableat: https://github.com/frida/frida FridasupportsinteractionwiththeObjective-CruntimethroughtheObjCAPI.You’llbeabletohookandcallbothObjective- C and native functions inside the process and its native libraries. Your JavaScript snippets have full access to memory, e.g.toreadand/orwriteanystructureddata. HerearesometasksthatFridaAPIsoffersandarerelevantorexclusiveoniOS: • InstantiateObjective-Cobjectsandcallstaticandnon-staticclassmethods(ObjCAPI). • TraceObjective-Cmethodcallsand/orreplacetheirimplementations(InterceptorAPI). • Enumerateliveinstancesofspecificclassesbyscanningtheheap(ObjCAPI). • Scanprocessmemoryforoccurrencesofastring(MemoryAPI). • Interceptnativefunctioncallstorunyourowncodeatfunctionentryandexit(InterceptorAPI). 544\\nRememberthatoniOS,youcanalsobenefitfromthebuilt-intoolsprovidedwheninstallingFrida,whichincludetheFrida CLI(frida),frida-ps,frida-ls-devicesandfrida-trace,tonameafew. There’safrida-tracefeatureexclusiveoniOSworthhighlighting: tracingObjective-CAPIsusingthe-mflagandwild- cards. Forexample, tracingallmethodsincluding“HTTP”intheirnameandbelongingtoanyclasswhosenamestarts with“NSURL”isaseasyasrunning: frida-trace -UYourApp -m\"*[NSURL**HTTP*]\" ForaquickstartyoucangothroughtheiOSexamples. Installing Frida on iOS ToconnectFridatoaniOSapp,youneedawaytoinjecttheFridaruntimeintothatapp. Thisiseasytodoonajailbroken device: justinstallfrida-serverthroughCydia. Onceithasbeeninstalled,theFridaserverwillautomaticallyrunwith rootprivileges,allowingyoutoeasilyinjectcodeintoanyprocess. StartCydiaandaddFrida’srepositorybynavigatingtoManage->Sources->Edit->Addandenteringhttps://build.fr ida.re. YoushouldthenbeabletofindandinstalltheFridapackage. Using Frida on iOS ConnectyourdeviceviaUSBandmakesurethatFridaworksbyrunningthefrida-pscommandandtheflag‘-U’.This shouldreturnthelistofprocessesrunningonthedevice: $frida-ps -U PID Name --- ---------------- 963 Mail 952 Safari 416 BTServer 422 BlueTool 791 CalendarWidget 451 CloudKeychainPro 239 CommCenter 764 ContactsCoreSpot (...) Frida Bindings Inordertoextendthescriptingexperience,FridaoffersbindingstoprogramminglanguagessuchasPython,C,NodeJS, andSwift. TakingPythonasanexample,thefirstthingtonoteisthatnofurtherinstallationstepsarerequired.", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 172}}