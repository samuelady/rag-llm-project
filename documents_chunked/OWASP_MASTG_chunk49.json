{"text": "redirecttraffic fromyourinterceptionproxytotheoriginallocationandport. When redirecting traffic you should create narrow rules to the domains and IPs in scope, to minimize noise and out-of-scopetraffic. Theinterceptionproxyneedtolistentotheportspecifiedintheportforwardingruleabove,whichis8080. WhenaXamarinappisconfiguredtouseaproxy(e.g.byusingWebRequest.DefaultWebProxy)youneedtospecifywhere trafficshouldgonext,afterredirectingthetraffictoyourinterceptingproxy. Youneedtoredirectthetraffictotheoriginal location. ThefollowingprocedureissettinguparedirectioninBurptotheoriginallocation: 1. GotoProxytabandclickonOptions 2. Selectandedityourlistenerfromthelistofproxylisteners. 3. GotoRequesthandlingtabandset: • Redirecttohost: provideoriginaltrafficlocation. • Redirecttoport: provideoriginalportlocation. • Set‘ForceuseofSSL’(whenHTTPSisused)andset‘Supportinvisibleproxy’. 69\\nCA Certificates Ifnotalreadydone,installtheCAcertificatesinyourmobiledevicewhichwillallowustointerceptHTTPSrequests: • InstalltheCAcertificateofyourinterceptionproxyintoyourAndroidphone>NotethatstartingwithAndroid7.0 (API level 24) the OS no longer trusts a user supplied CA certificate unless specified in the app. Bypassing this securitymeasurewillbeaddressedinthe“BasicSecurityTesting”chapters. • InstalltheCAcertificateofyourinterceptionproxyintoyouriOSphone Intercepting Traffic Startusingtheappandtriggeritsfunctions. YoushouldseeHTTPmessagesshowingupinyourinterceptionproxy. Whenusingbettercapyouneedtoactivate“Supportinvisibleproxying”inProxyTab/Options/EditInterface 70\\nMobile App Cryptography Cryptographyplaysanespeciallyimportantroleinsecuringtheuser’sdata-evenmoresoinamobileenvironment,where attackershavingphysicalaccesstotheuser’sdeviceisalikelyscenario. Thischapterprovidesanoutlineofcryptographic conceptsandbestpracticesrelevanttomobileapps. Thesebestpracticesarevalidindependentofthemobileoperating system. Key Concepts The goal of cryptography is to provide constant confidentiality, data integrity, and authenticity, even in the face of an attack. Confidentiality involves ensuring data privacy through the use of encryption. Data integrity deals with data consistencyanddetectionoftamperingandmodificationofdatathroughtheuseofhashing. Authenticityensuresthat thedatacomesfromatrustedsource. Encryptionalgorithmsconvertsplaintextdataintociphertextthatconcealstheoriginalcontent. Plaintextdatacanbe restoredfromtheciphertextthroughdecryption. Encryptioncanbesymmetric(encryption/decryptionwithsamesecret- key)orasymmetric(encryption/decryptionusingapublicandprivatekeypair). Ingeneral,encryptionoperationsdonot protectintegrity,butsomesymmetricencryptionmodesalsofeaturethatprotection. Symmetric-keyencryptionalgorithmsusethesamekeyforbothencryptionanddecryption. Thistypeofencryption isfastandsuitableforbulkdataprocessing. Sinceeverybodywhohasaccesstothekeyisabletodecrypttheencrypted content,thismethodrequirescarefulkeymanagementandcentralizedcontroloverkeydistribution. Public-keyencryptionalgorithmsoperatewithtwoseparatekeys: thepublickeyandtheprivatekey. Thepublickey can be distributed freely while the private key shouldn’t be shared with anyone. A message encrypted with the public key can only be decrypted with the private key and vice-versa. Since asymmetric encryption is several times slower than symmetric operations, it’s typically only used to encrypt small amounts of data, such as symmetric keys for bulk encryption. Hashingisn’taformofencryption,butitdoesusecryptography. Hashfunctionsdeterministicallymaparbitrarypiecesof dataintofixed-lengthvalues. It’seasytocomputethehashfromtheinput,butverydifficult(i.e.infeasible)todetermine theoriginalinputfromthehash. Additionally,thehashwillcompletelychangewhenevenasinglebitoftheinputchanges. Hashfunctionsareusedforintegrityverification,butdon’tprovideanauthenticityguarantee. Message Authentication Codes(MACs)combineothercryptographicmechanisms(suchassymmetricencryptionor hashes)withsecretkeystoprovidebothintegrityandauthenticityprotection. However,inordertoverifyaMAC,multiple entitieshavetosharethesamesecretkeyandanyofthoseentitiescangenerateavalidMAC.HMACs,themostcommonly usedtypeofMAC,relyonhashingastheunderlyingcryptographicprimitive. ThefullnameofanHMACalgorithmusually includestheunderlyinghashfunction’stype(forexample,HMAC-SHA256usestheSHA-256hashfunction). Signaturescombineasymmetriccryptography(thatis,usingapublic/privatekeypair)withhashingtoprovideintegrity and authenticity by encrypting the hash of the message with the private key. However, unlike MACs, signatures also providenon-repudiationpropertyastheprivatekeyshouldremainuniquetothedatasigner. Key Derivation Functions (KDFs) derive secret keys from a secret value (such as a password) and are used to turn keys into other formats or to increase their length. KDFs are similar to hashing functions but have other uses as well (forexample,theyareusedascomponentsofmulti-partykey-agreementprotocols). Whilebothhashingfunctionsand KDFs must be difficult to reverse, KDFs have the added requirement that the keys they produce must have a level of randomness. Identifying Insecure and/or Deprecated Cryptographic Algorithms When assessing a mobile app, you should make sure that it does not use cryptographic algorithms and protocols that havesignificantknownweaknessesorareotherwiseinsufficientformodernsecurityrequirements. Algorithmsthatwere consideredsecureinthepastmaybecomeinsecureovertime;therefore,it’simportanttoperiodicallycheckcurrentbest practicesandadjustconfigurationsaccordingly. Verifythatcryptographicalgorithmsareuptodateandin-linewithindustrystandards. Vulnerablealgorithmsincludeout- datedblockciphers(suchasDESand3DES),streamciphers(suchasRC4),hashfunctions(suchasMD5andSHA1),and brokenrandomnumbergenerators(suchasDual_EC_DRBGandSHA1PRNG).Notethatevenalgorithmsthatarecertified 71\\n(forexample, byNIST)canbecomeinsecureovertime. Acertificationdoesnotreplaceperiodicverificationofanalgo- rithm’ssoundness. Algorithmswithknownweaknessesshouldbereplacedwithmoresecurealternatives. Additionally, algorithms used for encryption must be standardized and open to verification. Encrypting data using any unknown, or proprietaryalgorithmsmayexposetheapplicationtodifferentcryptographicattackswhichmayresultinrecoveryofthe plaintext. Inspecttheapp’ssourcecodetoidentifyinstancesofcryptographicalgorithmsthatareknowntobeweak,suchas: • DES,3DES • RC2 • RC4 • BLOWFISH • MD4 • MD5 • SHA1 ThenamesofcryptographicAPIsdependontheparticularmobileplatform. Pleasemakesurethat: • Cryptographic algorithms are up to date and in-line with industry standards. This includes, but is not limited to outdated block ciphers (e.g. DES), stream ciphers (e.g. RC4), as well as hash functions (e.g. MD5) and broken randomnumbergeneratorslikeDual_EC_DRBG(eveniftheyareNISTcertified). Alloftheseshouldbemarkedas insecureandshouldnotbeusedandremovedfromtheapplicationandserver. • Keylengthsarein-linewithindustrystandardsandprovideprotectionforsufficientamountoftime. Acomparison ofdifferentkeylengthsandprotectiontheyprovidetakingintoaccountMoore’slawisavailableonline. • Cryptographicmeansarenotmixedwitheachother: e.g.youdonotsignwithapublickey,ortrytoreuseakey pairusedforasignaturetodoencryption. • Cryptographic parameters are well defined within reasonable range. This includes, but is not limited to: cryp- tographicsalt, whichshouldbeatleastthesamelengthashashfunctionoutput, reasonablechoiceofpassword derivationfunctionanditerationcount(e.g.PBKDF2,scryptorbcrypt),IVsbeingrandomandunique,fit-for-purpose blockencryptionmodes(e.g.ECBshouldnotbeused,exceptspecificcases),keymanagementbeingdoneproperly (e.g.3DESshouldhavethreeindependentkeys)andsoon. Thefollowingalgorithmsarerecommended: • Confidentialityalgorithms: AES-GCM-256orChaCha20-Poly1305 • Integrityalgorithms: SHA-256,SHA-384,SHA-512,BLAKE3,theSHA-3family • Digitalsignaturealgorithms: RSA(3072bitsandhigher),ECDSAwithNISTP-384 • Keyestablishmentalgorithms: RSA(3072bitsandhigher),DH(3072bitsorhigher),ECDHwithNISTP-384 Additionally,youshouldalwaysrelyonsecurehardware(ifavailable)forstoringencryptionkeys,performingcryptographic operations,etc. Formoreinformationonalgorithmchoiceandbestpractices,seethefollowingresources: • “CommercialNationalSecurityAlgorithmSuiteandQuantumComputingFAQ” • NISTrecommendations(2019) • BSIrecommendations(2019) Common Configuration Issues Insufficient Key Length Eventhemostsecureencryptionalgorithmbecomesvulnerabletobrute-forceattackswhenthatalgorithmusesaninsuf- ficientkeysize. Ensurethatthekeylengthfulfillsacceptedindustrystandards. 72\\nSymmetric Encryption with Hard-Coded Cryptographic Keys Thesecurityofsymmetricencryptionandkeyedhashes(MACs)dependsonthesecrecyofthekey. Ifthekeyisdisclosed, the security gained by encryption is lost. To prevent this, never store secret keys in the same place", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 49}}