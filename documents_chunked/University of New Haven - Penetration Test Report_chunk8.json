{"text": "authentication are both options which would help reduce the risk introduced by this vulnerability. References: https://www.nginx.com/blog/rate-limiting-nginx/ https://docs.nginx.com/nginx /admin-guide/security-controls/configuring-http-basic-authentication/ Page 16\\n4.4 Low Risk 4.4.1 ScadaBR Reflected XSS (Username) Threat Level: Low (1.25) Description: A cross-site scripting (XSS) vulnerability was found in the login portal of ScadaBR. A mali- cious actor could supply malicious Javascript to redirect users and steal cookies. Figure 8: XSS Vulnerability in username input field Potential Business Impact: Because this vulnerability uses reflected XSS instead of stored XSS, phishing would most likely be required for a successful exploit. However, an employee of AECfalling for a phish- ing campaign could lead to drive-by downloads and cookie theft, resulting in the potential compromise of machines on the network. Affected Host: Crunch (10.0.17.50) Crunchserial (10.0.17.51) Exploitation Details: Results can be reproduced by navigating to http://10.0.17.50:9090/ScadaBR/ (without hav- ing been authenticated beforehand) and typing the following in the username field: admin\"><script>alert (\"XSS\")</script> This will result in a reflected cross-site vulnerability displaying an alert on the page with the text “XSS”. While the alert text is only an example, a threat actor could include arbitrary JavaScript in the payload. Recommended Remediation: Validate & sanitize all form fields to prevent XSS attacks. Use a Web application firewall (WAF) to block the execution of malicious scripts. Additionally, convert all alphanumeric Page 17\\ncharacters to HTML character entities before displaying user input. To ensure that cookies cannot be stolen, it is recommended to include in the headers “Secure” and “HttpOnly” so that cookies are not accessible to unintended parties and are sent over HTTPS. At the moment, the web traffic on the ScadaBR server is not encrypted. The Secure header can only be implemented once TLS is implemented and enabled on the host. References: https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies CEHv11 Ethical Hacking and Countermeasures - Volume 2 Page 18\\n4.5 Informational 4.5.1 Insufficient Firewalls Description: During the engagement, many of the services and hosts interacted displayed insufficient Firewall Rules. Potential Business Impact: This could save potential incidents of breach as by enabling firewallswithstrongrulescouldthwartattackersfromgainingunauthorizedaccesstosystems that potentially contain security vulnerabilities such as remote code execution. Recommended Remediation: On hosts setup up proper firewalls using iptables, ufw, or other software. Examples of these can be found in Section 4.2.1. PCI DSS requires firewall zone-based controls between trusted and untrusted zones. Some best practices for firewalls are to: • Block traffic by default • Set Explicit Firewall Rules First • Establish firewall configuration change plan • Optimize firewall rules • Update Firewall Software Regularly Additionally, it may also be beneficial for AEC to implement intrusion-detection and/or intrusion-prevention systems on the network to help with detecting and preventing future exploitation of the network. References: https://backbox.com/7-firewall-best-practices-for-securing-your-network/ https://www.checkpoint.com/cyber-hub/network-security/what-is-firewall/8-fir ewall-best-practices-for-securing-the-network/ Page 19\\n5 Conclusion AEC provides the community with delicious confections. The stability and integrity of the system that provides pastries is necessary to maintaining the luxuries of modern life. It is for this reason that the threats outlined in this report should be taken seriously and immediately remedied. The gravity of the vulnerabilities described above cannot be understated. An attacker", "metadata": {"doc_id": "University of New Haven - Penetration Test Report", "chunk_id": 8}}