{"text": "attack to force the mobile device to talk to you. For this scenario you shouldconsiderbettercaporuseyourownaccesspointtoredirectnetworktrafficfromthemobiledevicetoyour hostcomputer(seebelow). 64\\n• Onarooteddevice,youcanusehookingorcodeinjectiontointerceptnetwork-relatedAPIcalls(e.g.HTTPrequests) anddumporevenmanipulatetheargumentsofthesecalls. Thiseliminatestheneedtoinspecttheactualnetwork data. We’lltalkinmoredetailaboutthesetechniquesinthe“ReverseEngineeringandTampering”chapters. • OnmacOS,youcancreatea“RemoteVirtualInterface”forsniffingalltrafficonaniOSdevice. We’lldescribethis methodinthechapter“BasicSecurityTestingoniOS”. Simulating a Man-in-the-Middle Attack with bettercap Network Setup Tobeabletogetaman-in-the-middlepositionyourhostcomputershouldbeinthesamewirelessnetworkasthemobile phoneandthegatewayitcommunicatesto. OncethisisdoneyouneedtheIPaddressofyourmobilephone. Forafull dynamicanalysisofamobileapp,allnetworktrafficshouldbeintercepted. MITM Attack Start your preferred network analyzer tool first, then start bettercap with the following command and replace the IP addressbelow(X.X.X.X)withthetargetyouwanttoexecutetheMITMattackagainst. $sudobettercap -eval \"setarp.spoof.targetsX.X.X.X;arp.spoofon;setarp.spoof.internaltrue;setarp.spoof.fullduplextrue;\" bettercapv2.22 (builtfordarwinamd64withgo1.12.1)[type 'help' foralistofcommands] [19:21:39] [sys.log][inf]arp.spoofenablingforwarding [19:21:39] [sys.log][inf]arp.spoofarpspooferstarted,probing1targets. bettercapwillthenautomaticallysendthepacketstothenetworkgatewayinthe(wireless)networkandyouareableto sniffthetraffic. Beginningof2019supportforfullduplexARPspoofingwasaddedtobettercap. On the mobile phone start the browser and navigate tohttp://example.com, you should see output like the following whenyouareusingWireshark. Ifthat’sthecase,youarenowabletoseethecompletenetworktrafficthatissentandreceivedbythemobilephone. This includesalsoDNS,DHCPandanyotherformofcommunicationandcanthereforebequite“noisy”. Youshouldtherefore knowhowtouseDisplayFiltersinWiresharkorknowhowtofilterintcpdumptofocusonlyontherelevanttrafficforyou. Man-in-the-middleattacksworkagainstanydeviceandoperatingsystemastheattackisexecutedonOSILayer2 throughARPSpoofing. WhenyouareMITMyoumightnotbeabletoseecleartextdata,asthedataintransitmight be encrypted by using TLS, but it will give you valuable information about the hosts involved, the protocols used andtheportstheappiscommunicatingwith. 65\\nSimulating a Man-in-the-Middle Attack with an access point Network Setup A simple way to simulate a man-in-the-middle (MITM) attack is to configure a network where all packets between the devicesinscopeandthetargetnetworkaregoingthroughyourhostcomputer. Inamobilepenetrationtest,thiscanbe achievedbyusinganaccesspointthemobiledevicesandyourhostcomputerareconnectedto. Yourhostcomputeris thenbecomingarouterandanaccesspoint. Followingscenariosarepossible: • Use your host computer’s built-in WiFi card as an access point and use your wired connection to connect to the targetnetwork. • UseanexternalUSBWiFicardasanaccesspointanduseyourhostcomputer’sbuilt-inWiFitoconnecttothetarget network(canbevice-versa). • Useaseparateaccesspointandredirectthetraffictoyourhostcomputer. ThescenariowithanexternalUSBWiFicardrequirethatthecardhasthecapabilitytocreateanaccesspoint. Additionally, youneedtoinstallsometoolsand/orconfigurethenetworktoenforceaman-in-the-middleposition(seebelow). Youcan verifyifyourWiFicardhasAPcapabilitiesbyusingthecommandiwconfigonKaliLinux: iwlist |grep AP ThescenariowithaseparateaccesspointrequiresaccesstotheconfigurationoftheAPandyoushouldcheckfirstifthe APsupportseither: • portforwardingor • hasaspanormirrorport. InbothcasestheAPneedstobeconfiguredtopointtoyourhostcomputer’sIP.Yourhostcomputermustbeconnectedto theAP(viawiredconnectionorWiFi)andyouneedtohaveconnectiontothetargetnetwork(canbethesameconnection astotheAP).Someadditionalconfigurationmayberequiredonyourhostcomputertoroutetraffictothetargetnetwork. Iftheseparateaccesspointbelongstothecustomer,allchangesandconfigurationsshouldbeclarifiedpriortothe engagementandabackupshouldbecreated,beforemakinganychanges. Installation Thefollowingprocedureissettingupaman-in-the-middlepositionusinganaccesspointandanadditionalnetworkinter- face: CreateaWiFinetworkeitherthroughaseparateaccesspointorthroughanexternalUSBWiFicardorthroughthebuilt-in cardofyourhostcomputer. 66\\nThiscanbedonebyusingthebuilt-inutilitiesonmacOS.YoucanusesharetheinternetconnectiononMacwithother networkusers. ForallmajorLinuxandUnixoperatingsystemsyouneedtoolssuchas: • hostapd • dnsmasq • iptables • wpa_supplicant • airmon-ng ForKaliLinuxyoucaninstallthesetoolswithapt-get: apt-getupdate apt-getinstallhostapddnsmasqaircrack-ng iptablesandwpa_supplicantareinstalledbydefaultonKaliLinux. Incaseofaseparateaccesspoint,routethetraffictoyourhostcomputer. IncaseofanexternalUSBWiFicardorbuilt-in WiFicardthetrafficisalreadyavailableonyourhostcomputer. RoutetheincomingtrafficcomingfromtheWiFitotheadditionalnetworkinterfacewherethetrafficcanreachthetarget network. AdditionalnetworkinterfacecanbewiredconnectionorotherWiFicard,dependingonyoursetup. Configuration WefocusontheconfigurationfilesforKaliLinux. Followingvaluesneedtobedefined: • wlan1-idoftheAPnetworkinterface(withAPcapabilities), • wlan0-idofthetargetnetworkinterface(thiscanbewiredinterfaceorotherWiFicard) • 10.0.0.0/24-IPaddressesandmaskofAPnetwork Thefollowingconfigurationfilesneedtobechangedandadjustedaccordingly: • hostapd.conf #Name oftheWiFiinterfaceweuse interface=wlan1 #Use thenl80211driver driver=nl80211 hw_mode=g channel=6 wmm_enabled=1 macaddr_acl=0 auth_algs=1 ignore_broadcast_ssid=0 wpa=2 wpa_key_mgmt=WPA-PSK rsn_pairwise=CCMP #Name oftheAPnetwork ssid=STM-AP #Password oftheAPnetwork wpa_passphrase=password • wpa_supplicant.conf network={ ssid=\"NAME_OF_THE_TARGET_NETWORK\" psk=\"PASSWORD_OF_THE_TARGET_NETWORK\" } • dnsmasq.conf interface=wlan1 dhcp-range=10.0.0.10,10.0.0.250,12h dhcp-option=3,10.0.0.1 dhcp-option=6,10.0.0.1 server=8.8.8.8 log-queries log-dhcp listen-address=127.0.0.1 67\\nMITM Attack Tobeabletogetaman-in-the-middlepositionyouneedtoruntheaboveconfiguration. Thiscanbedonebyusingthe followingcommandsonKaliLinux: #checkifotherprocessisnotusingWiFiinterfaces $airmon-ngcheckkill #configureIPaddressoftheAPnetworkinterface $ifconfigwlan110.0.0.1up #startaccesspoint $hostapdhostapd.conf #connectthetargetnetworkinterface $wpa_supplicant -B-iwlan0 -cwpa_supplicant.conf #runDNSserver $dnsmasq -Cdnsmasq.conf -d #enablerouting $echo1 >/proc/sys/net/ipv4/ip_forward #iptableswillNATconnectionsfromAPnetworkinterfacetothetargetnetworkinterface $iptables --flush $iptables --table nat--append POSTROUTING --out-interface wlan0 -jMASQUERADE $iptables --append FORWARD --in-interface wlan1 -jACCEPT $iptables -tnat-APOSTROUTING -jMASQUERADE Nowyoucanconnectyourmobiledevicestotheaccesspoint. Network Analyzer Tool Installatoolthatallowsyoutomonitorandanalyzethenetworktrafficthatwillberedirectedtoyourhostcomputer. The twomostcommonnetworkmonitoring(orcapturing)toolsare: • Wireshark(CLIpendant: TShark) • tcpdump Wireshark offers a GUI and is more straightforward if you are not used to the command line. If you are looking for a commandlinetoolyoushouldeitheruseTSharkortcpdump. AllofthesetoolsareavailableforallmajorLinuxandUnix operatingsystemsandshouldbepartoftheirrespectivepackageinstallationmechanisms. Setting a Proxy Through Runtime Instrumentation Onarootedorjailbrokendevice, youcanalsouseruntimehookingtosetanewproxyorredirectnetworktraffic. This canbeachievedwithhookingtoolslikeInspeckageorcodeinjectionframeworkslikeFridaandcycript. You’llfindmore informationaboutruntimeinstrumentationinthe“ReverseEngineeringandTampering”chaptersofthisguide. Example - Dealing with Xamarin Asanexample,wewillnowredirectallrequestsfromaXamarinapptoaninterceptionproxy. XamarinisamobileapplicationdevelopmentplatformthatiscapableofproducingnativeAndroidandiOSappsbyusing VisualStudioandC#asprogramminglanguage. WhentestingaXamarinappandwhenyouaretryingtosetthesystemproxyintheWi-Fisettingsyouwon’tbeableto seeanyHTTPrequestsinyourinterceptionproxy,astheappscreatedbyXamarindonotusethelocalproxysettingsof yourphone. Therearethreewaystoresolvethis: • 1stway: Addadefaultproxytotheapp,byaddingthefollowingcodeintheOnCreateorMainmethodandre-create theapp: WebRequest.DefaultWebProxy =newWebProxy(\"192.168.11.1\",8080); • 2ndway: Usebettercapinordertogetaman-in-the-middleposition(MITM),seethesectionaboveabouthowto setupaMITMattack. WhenbeingMITMyouonlyneedtoredirectport443toyourinterceptionproxyrunningon localhost. ThiscanbedonebyusingthecommandrdronmacOS: 68\\n$echo \" rdrpass inetprototcpfromanytoanyport443->127.0.0.1port8080 \"|sudo pfctl -ef- ForLinuxsystemsyoucanuseiptables: sudo iptables -tnat-APREROUTING -ptcp--dport 443-jDNAT --to-destination 127.0.0.1:8080 Aslaststep,youneedtosettheoption‘Supportinvisibleproxy’inthelistenersettingsofBurpSuite. • 3rdway: Insteadofbettercapanalternativeistweakingthe/etc/hostsonthemobilephone. Addanentryinto /etc/hostsforthetargetdomainandpointittotheIPaddressofyourinterceptingproxy. Thiscreatesasimilar situation of being MITM as with bettercap and you need to redirect port 443 to the port which is used by your interceptionproxy. The redirectioncan be applied as mentioned above. Additionally, you need to redirecttraffic fromyourinterceptionproxytotheoriginallocationandport. When redirecting traffic you should create narrow rules to the domains and IPs in scope, to minimize noise and out-of-scopetraffic. Theinterceptionproxyneedtolistentotheportspecifiedintheportforwardingruleabove,whichis8080. WhenaXamarinappisconfiguredtouseaproxy(e.g.byusingWebRequest.DefaultWebProxy)youneedtospecifywhere trafficshouldgonext,afterredirectingthetraffictoyourinterceptingproxy. Youneedtoredirectthetraffictotheoriginal location. ThefollowingprocedureissettinguparedirectioninBurptotheoriginallocation: 1. GotoProxytabandclickonOptions 2. Selectandedityourlistenerfromthelistofproxylisteners. 3. GotoRequesthandlingtabandset: • Redirecttohost: provideoriginaltrafficlocation. • Redirecttoport: provideoriginalportlocation. • Set‘ForceuseofSSL’(whenHTTPSisused)andset‘Supportinvisibleproxy’. 69\\nCA Certificates Ifnotalreadydone,installtheCAcertificatesinyourmobiledevicewhichwillallowustointerceptHTTPSrequests: • InstalltheCAcertificateofyourinterceptionproxyintoyourAndroidphone>NotethatstartingwithAndroid7.0 (API level 24)", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 48}}