{"text": "exploitability. The scores were calculated using NIST’s CVSS v3.1 calculator [7]. Summary of Vulnerabilities by Base Score Risk Summary Overall Risk Score Impact Exploitability Lack of PostgreSQL 9 8 10 Authentication Lack of MariaDB Authentication 7.5 5 10 Payment Transaction 4.5 4 5 Enumeration ScadaBR Reflected XSS 1.25 1 1.5 (Username) Page 9\\n4.1 Critical Risk 4.1.1 Lack Of PostgreSQL Authentication Threat Level: Critical (9.5) Description: The host Charley on the network did not require password authentication for the postgres user in PostgreSQL. As a result, attackers can access all databases on charley and enumerate data found. The postgres user has full control over the database within the host. Figure 3: User postgres does not require a password to authenticate. Potential Business Impact: The data stored within this database contained unencrypted database information which is a direction violation of PCI DSS more information information can be found in Section 2.3.1. Failures of PCI DSS can result in fines and other punishments. Each security incidents and breaches can result of a $500,000 fine [8]. Figure 4 shows that credit card information was stored encrypted. Affected Host: Eggdicator (10.0.17.10) Scrumdiddlyumptious (10.0.17.12) Charley (10.0.17.14) Exploitation Details: A user who can connect to 10.0.17.14 can connect to the postgresql server by running the following command: psql −U postgres −p 5432 −h 10.0.17.14 Recommended Remediation: Page 10\\nFigure 4: PostgreSQL Billing Table stored in the clear. Harden the PostgreSQL server to require password authentication. Additionally, having firewall access controls to restrict what respective IP addresses can access the database would provide an additional layer of security. ALTER USER postgres PASSWORD ‘B3tt3rP@ssw0rd ’ ; Additionally, the PostgreSQL instance could be further hardened by making rules in the pg_hba.conf file to only allow for authentication from certain hosts. More information about this configuration file can be found in the references for this section. References: https://www.postgresql.org/docs/13/auth-password.html https://www.postgresql.org/docs/9.2/auth-pg-hba-conf.html Page 11\\n4.2 High Risk 4.2.1 Lack of MariaDB Authentication Threat Level: High (7.5) Description: UnauthenticatedaccesstoaMySQLdatabasepermitsaccess/modificationtosensitivedatasets, including the following: • Customer Accounts and passwords (Base64 encoded). • Customer PII - includes phone numbers, address, and payments (including amounts). • Invoices and payments. • Creation of administrator accounts for AEC’s croissant marketplace. • Insertion, deletion, and modification of all data within the database. Figure 5: Passwordless Root MariaDB Access Potential Business Impact: This host (Charley) can severely impact the Confidentiality, Integrity, and Availability (CIA) of transactions within the warehouse management systems. Improper encoding schemes result in an environment in which all of the AEC store website (Scrumdiddlyumptious) users’ passwords can be decoded from base64. All accounts can also be modified to granted administrator level access on the AEC store. As data is parsed through the root user, transactions, account details, items (for sale), and other information which is integral to AEC’s ability to sell its products online may be Page 12\\nsubjecttounauthorizedmodification. Thisdataisnotdirectlyaccessedbythewebstorehost (Scrumdiddlyumptious), but rather through an API endpoint host (Whatchamacallit). Affected Hosts: Charley (10.0.17.14) Scrumdiddlyumptious (10.0.17.12) Whatchamacallit (10.0.17.13) Exploitation Details: New Haven Hacking Inc. used the MySQL command line application to query the unau-", "metadata": {"doc_id": "University of New Haven - Penetration Test Report", "chunk_id": 6}}