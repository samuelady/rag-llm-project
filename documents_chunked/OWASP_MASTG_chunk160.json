{"text": "app basis. Some apps, like Telegram use a standalone * (\"paths\":[\"*\"])inordertoallowallpossiblepaths. Onlyifspecificareasofthewebsiteshouldnotbehandledbysome app,thedevelopercanrestrictaccessbyexcludingthembyprependinga\"NOT\"(notethewhitespaceaftertheT)tothe correspondingpath. Alsorememberthatthesystemwilllookformatchesbyfollowingtheorderofthedictionariesinthe array(firstmatchwins). Thispathexclusionmechanismisnottobeseenasasecurityfeaturebutratherasafilterthatdevelopermightuseto specifywhichappsopenwhichlinks. Bydefault,iOSdoesnotopenanyunverifiedlinks. Rememberthatuniversallinksverificationoccursatinstallationtime. iOSretrievestheAASAfileforthedeclareddomains (applinks) in its com.apple.developer.associated-domains entitlement. iOS will refuse to open those links if the verificationdidnotsucceed. Somereasonstofailverificationmightinclude: 488\\n• TheAASAfileisnotservedoverHTTPS. • TheAASAisnotavailable. • TheappIDsdonotmatch(thiswouldbethecaseofamaliciousapp). iOSwouldsuccessfullypreventanypossible hijackingattacks. Checking the Link Receiver Method Inordertoreceivelinksandhandlethemappropriately,theappdelegatehastoimplementapplication:continueUserActivity:restorationHandler:. Ifyouhavetheoriginalprojecttrysearchingforthismethod. PleasenotethatiftheappusesopenURL:options:completionHandler: toopenauniversallinktotheapp’swebsite, thelinkwon’topenintheapp. Asthecalloriginatesfromtheapp,itwon’tbehandledasauniversallink. FromAppleDocs: WheniOSlaunchesyourappafterausertapsauniversallink,youreceiveanNSUserActivity objectwithanactivityTypevalueofNSUserActivityTypeBrowsingWeb. Theactivityobject’swebpageURLproperty containstheURLthattheuserisaccessing. ThewebpageURLpropertyalwayscontainsanHTTPorHTTPSURL,and you can use NSURLComponents APIs to manipulate the components of the URL. [...] To protect users’ privacy and security,youshouldnotuseHTTPwhenyouneedtotransportdata;instead,useasecuretransportprotocolsuch asHTTPS. Fromthenoteabovewecanhighlightthat: • ThementionedNSUserActivityobjectcomesfromthecontinueUserActivityparameter,asseeninthemethod above. • TheschemeofthewebpageURLmustbeHTTPorHTTPS(anyotherschemeshouldthrowanexception). Thescheme instancepropertyofURLComponents/NSURLComponentscanbeusedtoverifythis. Ifyoudon’thavetheoriginalsourcecodeyoucanuseradare2orrabin2tosearchthebinarystringsforthelinkreceiver method: $rabin2 -zqTelegram\\X.app/Telegram\\X |grep restorationHan 0x1000deea95352application:continueUserActivity:restorationHandler: Checking the Data Handler Method Youshouldcheckhowthereceiveddataisvalidated. Appleexplicitlywarnsaboutthis: Universallinksofferapotentialattackvectorintoyourapp,somakesuretovalidateallURLparametersanddiscard anymalformedURLs. Inaddition,limittheavailableactionstothosethatdonotrisktheuser’sdata. Forexample, donotallowuniversallinkstodirectlydeletecontentoraccesssensitiveinformationabouttheuser. Whentesting yourURL-handlingcode,makesureyourtestcasesincludeimproperlyformattedURLs. AsstatedintheAppleDeveloperDocumentation,wheniOSopensanappastheresultofauniversallink,theappreceives anNSUserActivityobjectwithanactivityTypevalueofNSUserActivityTypeBrowsingWeb. Theactivityobject’sweb- pageURLpropertycontainstheHTTPorHTTPSURLthattheuseraccesses. ThefollowingexampleinSwiftverifiesexactly thisbeforeopeningtheURL: funcapplication(_application:UIApplication,continueuserActivity:NSUserActivity, restorationHandler:@escaping([UIUserActivityRestoring]?)->Void)->Bool{ //... ifuserActivity.activityType==NSUserActivityTypeBrowsingWeb,leturl=userActivity.webpageURL{ application.open(url,options:[:],completionHandler:nil) } returntrue } Inaddition,rememberthatiftheURLincludesparameters,theyshouldnotbetrustedbeforebeingcarefullysanitizedand validated(evenwhencomingfromtrusteddomain). Forexample,theymighthavebeenspoofedbyanattackerormight includemalformeddata. Ifthatisthecase,thewholeURLandthereforetheuniversallinkrequestmustbediscarded. 489\\nTheNSURLComponentsAPIcanbeusedtoparseandmanipulatethecomponentsoftheURL.Thiscanbealsopartofthe methodapplication:continueUserActivity:restorationHandler: itselformightoccuronaseparatemethodbeing calledfromit. Thefollowingexampledemonstratesthis: funcapplication(_application:UIApplication, continueuserActivity:NSUserActivity, restorationHandler:@escaping([Any]?)->Void)->Bool{ guarduserActivity.activityType==NSUserActivityTypeBrowsingWeb, letincomingURL=userActivity.webpageURL, letcomponents=NSURLComponents(url:incomingURL,resolvingAgainstBaseURL:true), letpath=components.path, letparams=components.queryItemselse{ returnfalse } ifletalbumName=params.first(where:{$0.name==\"albumname\"})?.value, letphotoIndex=params.first(where:{$0.name==\"index\"})?.value{ //Interactwithalbumnameandphotoindex returntrue }else{ //Handlewhenalbumand/oralbumnameorphotoindexmissing returnfalse } } Finally,asstatedabove,besuretoverifythattheactionstriggeredbytheURLdonotexposesensitiveinformationorrisk theuser’sdataonanyway. Checking if the App is Calling Other App’s Universal Links Anappmightbecallingotherappsviauniversallinksinordertosimplytriggersomeactionsortotransferinformation, inthatcase,itshouldbeverifiedthatitisnotleakingsensitiveinformation. If you have the original source code, you can search it for the openURL:options: completionHandler: method and checkthedatabeinghandled. NotethattheopenURL:options:completionHandler: methodisnotonlyusedtoopenuniversallinksbutalsoto callcustomURLschemes. ThisisanexamplefromtheTelegramapp: },openUniversalUrl:{url,completionin if#available(iOS10.0,*){ varparsedUrl=URL(string:url) ifletparsed=parsedUrl{ ifparsed.scheme==nil||parsed.scheme!.isEmpty{ parsedUrl=URL(string:\"https://\\(url)\") } } ifletparsedUrl=parsedUrl{ returnUIApplication.shared.open(parsedUrl, options:[UIApplicationOpenURLOptionUniversalLinksOnly:trueasNSNumber], completionHandler:{valueincompletion.completion(value)} ) Notehowtheappadaptstheschemeto“https”beforeopeningitandhowitusestheoptionUIApplicationOpenURLOp- tionUniversalLinksOnly: truethatopenstheURLonlyiftheURLisavaliduniversallinkandthereisaninstalledapp capableofopeningthatURL. Ifyoudon’thavetheoriginalsourcecode,searchinthesymbolsandinthestringsoftheappbinary. Forexample,we willsearchforObjective-Cmethodsthatcontain“openURL”: $rabin2 -zqTelegram\\X.app/Telegram\\X |grep openURL 0x1000dee3f5049application:openURL:sourceApplication:annotation: 0x1000dee712928application:openURL:options: 0x1000df2c998openURL: 0x1000df7723534openURL:options:completionHandler: 490\\nAsexpected,openURL:options:completionHandler: isamongtheonesfound(rememberthatitmightbealsopresent becausetheappopenscustomURLschemes). Next,toensurethatnosensitiveinformationisbeingleakedyou’llhave to perform dynamic analysis and inspect the data being transmitted. Please refer to “Identifying and Hooking the URL HandlerMethod”forsomeexamplesonhookingandtracingthismethod. Dynamic Analysis Ifanappisimplementinguniversallinks,youshouldhavethefollowingoutputsfromthestaticanalysis: • theassociateddomains • theAppleAppSiteAssociationfile • thelinkreceivermethod • thedatahandlermethod Youcanusethisnowtodynamicallytestthem: • Triggeringuniversallinks • Identifyingvaliduniversallinks • Tracingthelinkreceivermethod • Checkinghowthelinksareopened Triggering Universal Links UnlikecustomURLschemes,unfortunatelyyoucannottestuniversallinksfromSafarijustbytypingtheminthesearch bardirectlyasthisisnotallowedbyApple. ButyoucantestthemanytimeusingotherappsliketheNotesapp: • OpentheNotesappandcreateanewnote. • Writethelinksincludingthedomain. • LeavetheeditingmodeintheNotesapp. • Longpressthelinkstoopenthem(rememberthatastandardclicktriggersthedefaultoption). TodoitfromSafariyouwillhavetofindanexistinglinkonawebsitethatonceclicked, itwillberecognizedasa UniversalLink. Thiscanbeabittimeconsuming. AlternativelyyoucanalsouseFridaforthis,seethesection“PerformingURLRequests”formoredetails. Identifying Valid Universal Links FirstofallwewillseethedifferencebetweenopeninganallowedUniversalLinkandonethatshouldn’tbeallowed. Fromtheapple-app-site-associationofapple.comwehaveseenabovewechosethefollowingpaths: \"paths\":[ \"NOT/shop/buy-iphone/*\", ... \"/today\", Oneofthemshouldofferthe“Openinapp”optionandtheothershouldnot. Ifwelongpressonthefirstone(http://www.apple.com/shop/buy-iphone/iphone-xr)itonlyofferstheoptiontoopen it(inthebrowser). 491\\nIfwelongpressonthesecond(http://www.apple.com/today)itshowsoptionstoopenitinSafariandin“AppleStore”: 492\\nNote that there is a difference between a click and a long press. Once we long press a link and select an option, e.g. “Open in Safari”, this will become the default option for all future clicks until we long press again and select anotheroption. Ifwerepeattheprocessonthemethodapplication:continueUserActivity:restorationHandler: byeitherhooking ortracing,wewillseehowitgetscalledassoonasweopenthealloweduniversallink. Forthisyoucanuseforexample frida-trace: frida-trace -U\"AppleStore\" -m\"*[**restorationHandler*]\" Tracing the Link Receiver Method Thissectionexplainshowtotracethelinkreceivermethodandhowtoextractadditionalinformation. Forthisexample, wewilluseTelegram,astherearenorestrictionsinitsapple-app-site-associationfile: 493\\n{ \"applinks\":{ \"apps\":[], \"details\":[ { \"appID\":\"X834Q8SBVP.org.telegram.TelegramEnterprise\", \"paths\":[ \"*\" ] }, { \"appID\":\"C67CF9S4VU.ph.telegra.Telegraph\", \"paths\":[ \"*\" ] }, { \"appID\":\"X834Q8SBVP.org.telegram.Telegram-iOS\", \"paths\":[ \"*\" ] } ] } } InordertoopenthelinkswewillalsousetheNotesappandfrida-tracewiththefollowingpattern: frida-trace -UTelegram -m\"*[**restorationHandler*]\" Writehttps://t.me/addstickers/radare(foundthroughaquickInternetresearch)andopenitfromtheNotesapp. 494\\nFirstweletfrida-tracegeneratethestubsin__handlers__/: $frida-trace -UTelegram -m\"*[**restorationHandler*]\" Instrumentingfunctions... -[AppDelegateapplication:continueUserActivity:restorationHandler:] Youcanseethatonlyonefunctionwasfoundandisbeinginstrumented. Triggernowtheuniversallinkandobservethe traces. 298382ms -[AppDelegate application:0x10556b3c0continueUserActivity:0x1c4237780 restorationHandler:0x16f27a898] Youcanobservethatthefunctionisinfactbeingcalled. Youcannowaddcodetothestubsin__handlers__/toobtain moredetails: 495\\n//__handlers__/__AppDelegate_application_contin_8e36bbb1.js onEnter:function (log,args,state){ log(\"-[AppDelegateapplication:\" +args[2]+\"continueUserActivity:\" + args[3]+ \"restorationHandler:\" +args[4]+\"]\"); log(\"\\tapplication:\" +ObjC.Object(args[2]).toString()); log(\"\\tcontinueUserActivity:\" +ObjC.Object(args[3]).toString()); log(\"\\t\\twebpageURL:\" +ObjC.Object(args[3]).webpageURL().toString()); log(\"\\t\\tactivityType:\" +ObjC.Object(args[3]).activityType().toString()); log(\"\\t\\tuserInfo:\" +ObjC.Object(args[3]).userInfo().toString()); log(\"\\trestorationHandler:\" +ObjC.Object(args[4]).toString()); }, Thenewoutputis: 298382ms -[AppDelegate application:0x10556b3c0continueUserActivity:0x1c4237780 restorationHandler:0x16f27a898] 298382ms application:<Application:0x10556b3c0> 298382ms continueUserActivity:<NSUserActivity:0x1c4237780> 298382ms webpageURL:http://t.me/addstickers/radare 298382ms activityType:NSUserActivityTypeBrowsingWeb 298382ms userInfo:{ } 298382ms restorationHandler:<__NSStackBlock__:0x16f27a898> Apartfromthefunctionparameterswehaveaddedmoreinformationbycallingsomemethodsfromthemtogetmore details,inthiscaseabouttheNSUserActivity. IfwelookintheAppleDeveloperDocumentationwecanseewhatelse wecancallfromthisobject. Checking How the Links Are Opened IfyouwanttoknowmoreaboutwhichfunctionactuallyopenstheURLandhowthedataisactuallybeinghandledyou shouldkeepinvestigating. ExtendthepreviouscommandinordertofindoutifthereareanyotherfunctionsinvolvedintoopeningtheURL. frida-trace -UTelegram -m\"*[**restorationHandler*]\" -i\"*open*Url*\" -iincludesanymethod. Youcanalsouseaglobpatternhere(e.g.-i \"*open*Url*\"means“includeanyfunction containing‘open’,then‘Url’andsomethingelse”) Again,wefirstletfrida-tracegeneratethestubsin__handlers__/: $frida-trace -UTelegram -m\"*[**restorationHandler*]\" -i\"*open*Url*\" Instrumentingfunctions... -[AppDelegateapplication:continueUserActivity:restorationHandler:] $S10TelegramUI0A19ApplicationBindingsC16openUniversalUrlyySS_AA0ac4OpenG10Completion... $S10TelegramUI15openExternalUrl7account7context3url05forceD016presentationData18application... $S10TelegramUI31AuthorizationSequenceControllerC7account7strings7openUrl5apiId0J4HashAC0A4Core19... ... Nowyoucanseealonglistoffunctionsbutwestilldon’tknowwhichoneswillbecalled. Triggertheuniversallinkagain andobservethetraces. /*TID0x303 */ 298382ms -[AppDelegate application:0x10556b3c0continueUserActivity:0x1c4237780 restorationHandler:0x16f27a898] 298619ms |$S10TelegramUI15openExternalUrl7account7context3url05forceD016presentationData 18applicationContext20navigationController12dismissInputy0A4Core7AccountC_AA 14OpenURLContextOSSSbAA012PresentationK0CAA0a11ApplicationM0C7Display0 10NavigationO0CSgyyctF() ApartfromtheObjective-Cmethod,nowthereisoneSwiftfunctionthatisalsoofyourinterest. ThereisprobablynodocumentationforthatSwiftfunctionbutyoucanjustdemangleitssymbolusingswift-demangle viaxcrun: 496\\nxcruncanbeusedinvokeXcodedevelopertoolsfromthecommand-line,withouthavingtheminthepath. Inthis caseitwilllocateandrunswift-demangle,anXcodetoolthatdemanglesSwiftsymbols. $xcrunswift-demangleS10TelegramUI15openExternalUrl7account7context3url05forceD016presentationData 18applicationContext20navigationController12dismissInputy0A4Core7AccountC_AA14OpenURLContextOSSSbAA0 12PresentationK0CAA0a11ApplicationM0C7Display010NavigationO0CSgyyctF Resultingin: --- masvs_category:MASVS-CODE platform:ios", "metadata": {"doc_id": "OWASP_MASTG", "chunk_id": 160}}