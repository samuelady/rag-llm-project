{
  "text": "273\\n<?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.mwr.example.sieve\"> ... Thisactivityisexportedviatheattribute\"exported\" <activity android:name=\".FileSelectActivity\" android:exported=\"true\" /> Thisactivityisexportedviathe\"intent-filter\"declaration <activity android:name=\".MainLoginActivity\"> <intent-filter> <action android:name=\"android.intent.action.MAIN\"/> <category android:name=\"android.intent.category.LAUNCHER\"/> </intent-filter> </activity> Thisactivityisexportedviatheattribute\"exported\" <activity android:name=\".PWList\" android:exported=\"true\" /> Activitiesbelowarenotexported <activity android:name=\".SettingsActivity\" /> <activity android:name=\".AddEntryActivity\"/> <activity android:name=\".ShortLoginActivity\" /> <activity android:name=\".WelcomeActivity\" /> <activity android:name=\".PINActivity\" /> ... </manifest> Enumeratingactivitiesinthevulnerablepasswordmanager“Sieve”showsthatthefollowingactivitiesareexported: • .MainLoginActivity • .PWList • .FileSelectActivity Usethecommandbelowtolaunchanactivity: ##Starttheactivitywithoutspecifyinganactionorancategory $adbshellamstart -ncom.mwr.example.sieve/.PWList Starting:Intent{cmp=com.mwr.example.sieve/.PWList} ##Starttheactivityindicatinganaction(-a)andancategory(-c) $adbshellamstart -n\"com.mwr.example.sieve/.MainLoginActivity\" -aandroid.intent.action.MAIN -candroid.intent.category.LAUNCHER Starting:Intent{act=android.intent.action.MAINcat=[android.intent.category.LAUNCHER]cmp=com.mwr.example.sieve/.MainLoginActivity} Sincetheactivity.PWListiscalleddirectlyinthisexample,youcanuseittobypasstheloginformprotectingthepassword manager,andaccessthedatacontainedwithinthepasswordmanager. Services ServicescanbeenumeratedwiththeDrozermoduleapp.service.info: dz>runapp.service.info -acom.mwr.example.sieve Package:com.mwr.example.sieve com.mwr.example.sieve.AuthService Permission:null com.mwr.example.sieve.CryptoService Permission:null Tocommunicatewithaservice,youmustfirstusestaticanalysistoidentifytherequiredinputs. Becausethisserviceisexported,youcanusethemoduleapp.service.sendtocommunicatewiththeserviceandchange thepasswordstoredinthetargetapplication: dz>runapp.service.sendcom.mwr.example.sievecom.mwr.example.sieve.AuthService --msg 63457452 1 --extra stringcom.mwr.example.sieve.PASSWORD ↪ \"abcdabcdabcdabcd\" --bundle-as-obj Gotareplyfromcom.mwr.example.sieve/com.mwr.example.sieve.AuthService: what:4 arg1:42 arg2:0 Empty Broadcast Receivers Tolist broadcastreceiversexportedby an application, you can use thefollowing command and focus onreceiver ele- ments: 274\\n$aaptdxmltreeInsecureBankv2.apkAndroidManifest.xml ... E:receiver (line=88) A:android:name(0x01010003)=\"com.android.insecurebankv2.MyBroadCastReceiver\" (Raw: \"com.android.insecurebankv2.MyBroadCastReceiver\") A:android:exported(0x01010010)=(type0x12)0xffffffff E:intent-filter (line=91) E:action (line=92) A:android:name(0x01010003)=\"theBroadcast\" (Raw: \"theBroadcast\") E:receiver (line=119) A:android:name(0x01010003)=\"com.google.android.gms.wallet.EnableWalletOptimizationReceiver\" (Raw: ↪ \"com.google.android.gms.wallet.EnableWalletOptimizationReceiver\") A:android:exported(0x01010010)=(type0x12)0x0 E:intent-filter (line=122) E:action (line=123) A:android:name(0x01010003)=\"com.google.android.gms.wallet.ENABLE_WALLET_OPTIMIZATION\" (Raw: \"com.google.android.gms.wallet.ENABLE_WALLET_OPTIMIZATION\") ... Youcanidentifyanexportedbroadcastreceiverusingoneofthefollowingproperties: • Ithasanintent-filtersubdeclaration. • Ithastheattributeandroid:exportedsetto0xffffffff. YoucanalsousejadxtoidentifyexportedbroadcastreceiversinthefileAndroidManifest.xmlusingthecriteriadescribed above: <?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.android.insecurebankv2\"> ... Thisbroadcastreceiverisexportedviatheattribute\"exported\"aswellasthe\"intent-filter\"declaration <receiver android:name=\"com.android.insecurebankv2.MyBroadCastReceiver\" android:exported=\"true\"> <intent-filter> <action android:name=\"theBroadcast\"/> </intent-filter> </receiver> ThisbroadcastreceiverisNOTexportedbecausetheattribute\"exported\"isexplicitlysettofalse <receiver android:name=\"com.google.android.gms.wallet.EnableWalletOptimizationReceiver\" android:exported=\"false\"> <intent-filter> <action android:name=\"com.google.android.gms.wallet.ENABLE_WALLET_OPTIMIZATION\"/> </intent-filter> </receiver> ... </manifest> The above example from the vulnerable banking application InsecureBankv2 shows that only the broadcast receiver namedcom.android.insecurebankv2.MyBroadCastReceiverisexported. Nowthatyouknowthatthereisanexportedbroadcastreceiver,youcandivedeeperandreverseengineertheappusing jadx. Thiswillallowyoutoanalyzethesourcecodesearchingforpotentialvulnerabilitiesthatyoucouldlatertrytoexploit. Thesourcecodeoftheexportedbroadcastreceiveristhefollowing: package com.android.insecurebankv2; ... public class MyBroadCastReceiver extends BroadcastReceiver { public static final StringMYPREFS =\"mySharedPreferences\"; StringusernameBase64ByteString; public void onReceive(Contextcontext,Intentintent){ Stringphn =intent.getStringExtra(\"phonenumber\"); Stringnewpass =intent.getStringExtra(\"newpass\"); if(phn!=null){ try{ SharedPreferencessettings =context.getSharedPreferences(\"mySharedPreferences\",1); this.usernameBase64ByteString =newString(Base64.decode(settings.getString(\"EncryptedUsername\",(String)null),0),\"UTF-8\"); StringdecryptedPassword =newCryptoClass().aesDeccryptedString(settings.getString(\"superSecurePassword\",(String)null)); StringtextPhoneno =phn.toString(); StringtextMessage =\"UpdatedPasswordfrom:\" +decryptedPassword +\"to: \" +newpass; SmsManagersmsManager =SmsManager.getDefault(); System.out.println(\"Forthechangepassword-phonenumber:\" + textPhoneno +\"password is:\" +textMessage); smsManager.sendTextMessage(textPhoneno,(String)null,textMessage,(PendingIntent)null,(PendingIntent)null); }catch (Exceptione){ e.printStackTrace(); } }else { System.out.println(\"Phonenumberisnull\"); } } } As you can see in the source code, this broadcast receiver expects two parameters named phonenumber and newpass. Withthisinformationyoucannowtrytoexploitthisbroadcastreceiverbysendingeventstoitusingcustomvalues: 275\\n##Sendaneventwiththefollowingproperties: ##Actionissetto\"theBroadcast\" ##Parameter\"phonenumber\"issettothestring\"07123456789\" ##Parameter\"newpass\"issettothestring\"12345\" $adbshellambroadcast -atheBroadcast --es phonenumber \"07123456789\" --es newpass \"12345\" Broadcasting:Intent{act=theBroadcastflg=0x400000 (hasextras)} Broadcastcompleted:result=0 ThisgeneratesthefollowingSMS: UpdatedPasswordfrom:SecretPassword@to:12345 Sniffing Intents IfanAndroidapplicationbroadcastsintentswithoutsettingarequiredpermissionorspecifyingthedestinationpackage, theintentscanbemonitoredbyanyapplicationthatrunsonthedevice. Toregisterabroadcastreceivertosniffintents,usetheDrozermoduleapp.broadcast.sniffandspecifytheactionto monitorwiththe--actionparameter: dz>runapp.broadcast.sniff --action theBroadcast [*]Broadcastreceiverregisteredtosniffmatchingintents [*]Outputisupdatedonceasecond.PressControl+Ctoexit. Action:theBroadcast Raw:Intent{act=theBroadcastflg=0x10 (hasextras)} Extra:phonenumber=07123456789 (java.lang.String) Extra:newpass=12345 (java.lang.String)` You can also use the following command to sniff the intents. However, the content of the extras passed will not be displayed: $adbshelldumpsysactivitybroadcasts |grep \"theBroadcast\" BroadcastRecord{fc2f46fu0theBroadcast}touser0 Intent{act=theBroadcastflg=0x400010 (hasextras)} BroadcastRecord{7d4f24du0theBroadcast}touser0 Intent{act=theBroadcastflg=0x400010 (hasextras)} 45:act=theBroadcastflg=0x400010 (hasextras) 46:act=theBroadcastflg=0x400010 (hasextras) 121:act=theBroadcastflg=0x400010 (hasextras) 144:act=theBroadcastflg=0x400010 (hasextras) Determining Whether Sensitive Stored Data Has Been Exposed via IPC Mechanisms Platform: android MASVSV1: MSTG-STORAGE-6 MASVSV2: MASVS-PLATFORM-1 Overview Static Analysis ThefirststepistolookatAndroidManifest.xmltodetectcontentprovidersexposedbytheapp. Youcanidentifycontent providersbythe<provider>element. Completethefollowingsteps: • Determinewhetherthevalueoftheexporttag(android:exported)is\"true\". Evenifitisnot,thetagwillbesetto \"true\"automaticallyifan<intent-filter>hasbeendefinedforthetag. Ifthecontentismeanttobeaccessed onlybytheappitself,setandroid:exportedto\"false\". Ifnot,settheflagto\"true\"anddefineproperread/write permissions. • Determinewhetherthedataisbeingprotectedbyapermissiontag(android:permission). Permissiontagslimit exposuretootherapps. 276\\n• Determinewhethertheandroid:protectionLevelattributehasthevaluesignature. Thissettingindicatesthat the data is intended to be accessed only by apps from the same enterprise (i.e., signed with the same key). To make the data accessible to other apps, apply a security policy with the <permission> element and set a properandroid:protectionLevel. Ifyouuseandroid:permission,otherapplicationsmustdeclarecorrespond- ing <uses-permission> elements in their manifests to interact with your content provider. You can use the an- droid:grantUriPermissionsattributetograntmorespecificaccesstootherapps;youcanlimitaccesswiththe <grant-uri-permission>element. Inspectthesourcecodetounderstandhowthecontentproviderismeanttobeused. Searchforthefollowingkeywords: • android.content.ContentProvider • android.database.Cursor • android.database.sqlite • .query • .update • .delete ToavoidSQLinjectionattackswithintheapp,useparameterizedquerymethods,suchasquery,update,anddelete. Besuretoproperlysanitizeallmethodarguments;forexample,theselectionargumentcouldleadtoSQLinjection ifitismadeupofconcatenateduserinput. If you expose a content provider, determine whether parameterized query methods (query, update, and delete) are beingusedtopreventSQLinjection. Ifso,makesurealltheirargumentsareproperlysanitized. WewillusethevulnerablepasswordmanagerappSieveasanexampleofavulnerablecontentprovider. Inspect the Android Manifest Identifyalldefined<provider>elements: <provider android:authorities=\"com.mwr.example.sieve.DBContentProvider\" android:exported=\"true\" android:multiprocess=\"true\" android:name=\".DBContentProvider\"> <path-permission android:path=\"/Keys\" android:readPermission=\"com.mwr.example.sieve.READ_KEYS\" android:writePermission=\"com.mwr.example.sieve.WRITE_KEYS\" /> </provider> <provider android:authorities=\"com.mwr.example.sieve.FileBackupProvider\" android:exported=\"true\" android:multiprocess=\"true\" android:name=\".FileBackupProvider\" /> AsshownintheAndroidManifest.xmlabove,theapplicationexportstwocontentproviders. Notethatonepath(“/Keys”) isprotectedbyreadandwritepermissions.",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 104
  },
  "embedding": [
    0.02968607470393181,
    0.01199764758348465,
    -0.004980996251106262,
    -0.04993787780404091,
    0.06228746473789215,
    0.04254266992211342,
    0.04747295752167702,
    0.023966187611222267,
    0.011911299079656601,
    0.011206693947315216,
    0.0641690120100975,
    -0.005356918554753065,
    -0.02503490447998047,
    0.0058993808925151825,
    -0.0638086348772049,
    -0.019773397594690323,
    -0.07888346165418625,
    -0.07407424598932266,
    -0.019282445311546326,
    0.018269114196300507,
    0.10172650218009949,
    -0.01875442825257778,
    0.061202697455883026,
    -0.056847430765628815,
    0.026833074167370796,
    -0.0033837328664958477,
    -0.007889452390372753,
    -0.04998766630887985,
    -0.03573423996567726,
    0.008920913562178612,
    -0.013086413033306599,
    0.034832749515771866,
    0.09717082977294922,
    -0.012012452818453312,
    0.04757325351238251,
    -0.08418342471122742,
    -0.06475656479597092,
    -0.020349569618701935,
    -0.042236391454935074,
    -0.022754840552806854,
    0.030707545578479767,
    -0.06459229439496994,
    0.02551458217203617,
    0.015565430745482445,
    -0.07842972874641418,
    -0.03441193699836731,
    0.024300217628479004,
    -0.041694290935993195,
    0.04211539402604103,
    0.03209998086094856,
    -0.02015647478401661,
    0.06407241523265839,
    -0.0355796180665493,
    -0.01564498245716095,
    -0.06565245240926743,
    0.02121906541287899,
    -0.022332213819026947,
    0.06639361381530762,
    0.007852591574192047,
    0.04254144802689552,
    0.024734217673540115,
    0.0045057195238769054,
    -0.04397590085864067,
    -0.012271227315068245,
    -0.03941042721271515,
    0.07106422632932663,
    0.018584899604320526,
    -0.06790976226329803,
    -0.05802527815103531,
    -0.09236513823270798,
    -0.09249457716941833,
    0.09751910716295242,
    -0.025167353451251984,
    -0.01387216616421938,
    -0.008795998990535736,
    -0.10998290032148361,
    -0.024748504161834717,
    0.01848873496055603,
    -0.09548977762460709,
    -0.08594569563865662,
    0.03524566441774368,
    -0.09030142426490784,
    -0.023232460021972656,
    0.030616983771324158,
    0.0764852836728096,
    0.042469147592782974,
    -0.09119909256696701,
    -0.04246687889099121,
    -0.015295561403036118,
    -0.02968134917318821,
    -0.11053181439638138,
    0.024062380194664,
    -0.01960565708577633,
    0.0496024452149868,
    -0.03275248408317566,
    0.051737233996391296,
    -0.08638904243707657,
    0.05902808532118797,
    -0.04210716485977173,
    0.006157418712973595,
    -0.017241651192307472,
    0.026247162371873856,
    -0.03433208540081978,
    0.010940107516944408,
    0.006527474150061607,
    -0.009921557269990444,
    0.05458753556013107,
    -0.0018663101363927126,
    0.012174515053629875,
    0.034124407917261124,
    -0.011078267358243465,
    -0.02620171383023262,
    0.014909990131855011,
    -0.09287485480308533,
    0.03874494135379791,
    0.06628772616386414,
    0.009584496729075909,
    0.09229813516139984,
    0.015180547721683979,
    -0.006463923957198858,
    0.0698382556438446,
    -0.03885503113269806,
    -0.0350741446018219,
    -0.06265728175640106,
    -0.02939715050160885,
    -0.04510827735066414,
    0.04420525208115578,
    8.785477270100785e-33,
    0.05191947519779205,
    -0.09420430660247803,
    -0.06443997472524643,
    0.036299869418144226,
    -0.03688138723373413,
    -0.011985194869339466,
    0.021805645897984505,
    -0.025313956663012505,
    -0.03422945365309715,
    -0.04649025946855545,
    0.007165853399783373,
    -0.04366691783070564,
    -0.05119205266237259,
    -0.005815459415316582,
    0.06780475378036499,
    -0.00038025376852601767,
    -0.0017476266948506236,
    -0.001846599392592907,
    0.10071573406457901,
    -0.03202420473098755,
    -0.006910673342645168,
    -0.07946236431598663,
    -0.07554643601179123,
    -0.013110613450407982,
    0.05325672775506973,
    0.08643844723701477,
    0.028946653008461,
    0.02453819289803505,
    -0.014472325332462788,
    -0.006210535764694214,
    -0.026424627751111984,
    -0.011747917160391808,
    -0.0026924428530037403,
    0.01559832226485014,
    -0.006883245427161455,
    -0.020843030884861946,
    -0.08375272154808044,
    0.024683166295289993,
    0.018707463517785072,
    -0.020450685173273087,
    -0.0396747849881649,
    -0.05431347340345383,
    -0.014168625697493553,
    -0.06631102412939072,
    0.03152093291282654,
    -0.027698561549186707,
    -0.008274393156170845,
    0.07102515548467636,
    0.04640566557645798,
    -0.007970579899847507,
    0.05489490553736687,
    0.024511052295565605,
    -0.023138439282774925,
    -0.04418203979730606,
    -0.010406478308141232,
    0.010466511361300945,
    -0.04239914193749428,
    0.09107159823179245,
    0.0008449311717413366,
    0.009276689030230045,
    0.07329663634300232,
    0.06811080127954483,
    0.07962353527545929,
    0.0018511570524424314,
    0.012643592432141304,
    0.04803818464279175,
    0.04312087967991829,
    -0.036182940006256104,
    -0.0033284437377005816,
    -0.03623835742473602,
    -0.07109707593917847,
    -0.0803203135728836,
    0.09807701408863068,
    0.007319322321563959,
    -0.006272423081099987,
    0.01977672055363655,
    0.018384957686066628,
    -0.03705332800745964,
    -0.04177100956439972,
    0.010705436579883099,
    0.019856046885252,
    -0.1325434297323227,
    0.0077592493034899235,
    -0.0541638620197773,
    0.014154084026813507,
    0.002148651285097003,
    -0.0048424676060676575,
    -0.0354783870279789,
    -0.012887605465948582,
    0.02500031888484955,
    0.0027099449653178453,
    -0.013904676772654057,
    -0.030619194731116295,
    0.009524731896817684,
    -0.05012200400233269,
    -9.700703212655602e-33,
    0.04296870529651642,
    0.057039350271224976,
    -0.03737648203969002,
    -0.07468439638614655,
    -0.012339401058852673,
    0.008958890102803707,
    0.07549124211072922,
    0.06728244572877884,
    0.003283474361523986,
    0.06117185205221176,
    0.04664815589785576,
    0.0220717191696167,
    -0.014144865795969963,
    -0.09249287098646164,
    0.03576378896832466,
    0.06786952167749405,
    0.06060980632901192,
    0.09647127240896225,
    -0.06551599502563477,
    -0.04785589128732681,
    -0.05511951074004173,
    0.08124738186597824,
    0.03474247455596924,
    0.06692486256361008,
    -0.004059731028974056,
    -0.06898069381713867,
    0.07942534238100052,
    0.017291313037276268,
    0.019438989460468292,
    -0.030019287019968033,
    0.06871453672647476,
    0.027056097984313965,
    -0.11138246208429337,
    0.014477507211267948,
    0.05039972811937332,
    -0.03822805732488632,
    0.044443994760513306,
    0.018540851771831512,
    0.017324278131127357,
    0.02011343091726303,
    0.07353441417217255,
    -0.058858875185251236,
    0.03334544599056244,
    0.010913205333054066,
    0.009803778491914272,
    -0.03127328306436539,
    0.10026545822620392,
    -0.05488225817680359,
    -0.05050455778837204,
    0.010955313220620155,
    0.11777690798044205,
    -0.02772882953286171,
    0.03985505551099777,
    -0.03526001423597336,
    0.12527824938297272,
    0.1362057626247406,
    0.12547671794891357,
    -0.046580322086811066,
    -0.01589537225663662,
    -0.1166938990354538,
    0.0956307202577591,
    -0.03548198565840721,
    -0.09662280231714249,
    0.044955842196941376,
    0.05338360741734505,
    0.07397548109292984,
    -0.005147481802850962,
    0.0886588916182518,
    -0.04079994186758995,
    0.07840820401906967,
    -0.042431630194187164,
    -0.042029671370983124,
    0.016892964020371437,
    -9.767257142812014e-05,
    -0.013296001590788364,
    0.009789757430553436,
    0.02301224321126938,
    0.05039753019809723,
    -0.043649084866046906,
    0.017816873267292976,
    0.06250564754009247,
    0.0247943177819252,
    -0.06392405927181244,
    -0.07782814651727676,
    0.03742728754878044,
    -0.07550593465566635,
    -0.07330199331045151,
    0.10942946374416351,
    0.0026228823699057102,
    -0.0009168461547233164,
    -0.10627759993076324,
    0.06830625236034393,
    0.020483659580349922,
    0.006909557152539492,
    -0.021205542609095573,
    -5.872309216670146e-08,
    -0.06593004614114761,
    -0.04641420394182205,
    -0.027737120166420937,
    -0.03780553117394447,
    0.07760293036699295,
    0.04938298091292381,
    0.03057103604078293,
    -0.013259131461381912,
    -0.05574401840567589,
    -0.10744456201791763,
    -0.02639356441795826,
    -0.007720090914517641,
    -0.06036810949444771,
    0.030924329534173012,
    0.05288442224264145,
    -0.08801645785570145,
    0.03182174265384674,
    0.07660601288080215,
    -0.033004242926836014,
    0.04425984248518944,
    0.11153515428304672,
    -0.038243748247623444,
    -0.019262149930000305,
    0.02904997207224369,
    -0.001451194635592401,
    0.006325355730950832,
    -0.0014324963558465242,
    -0.01255699060857296,
    0.05904940515756607,
    0.05976444110274315,
    -0.015192064456641674,
    -0.030925355851650238,
    -0.02639845386147499,
    -0.05713792145252228,
    -0.08996250480413437,
    0.1135944202542305,
    0.09929973632097244,
    -0.022049007937312126,
    0.002514562802389264,
    0.00981476902961731,
    0.003360356204211712,
    -0.032028716057538986,
    0.024593764916062355,
    0.0466148816049099,
    -0.026663869619369507,
    -0.03819350525736809,
    -0.024137962609529495,
    -0.041977155953645706,
    0.05610278248786926,
    0.06116682291030884,
    -0.09167581051588058,
    -0.035777248442173004,
    0.024363728240132332,
    -0.015907838940620422,
    -0.048077210783958435,
    -0.004586254712194204,
    0.05125992372632027,
    -0.05395319685339928,
    0.016908474266529083,
    -0.05040745809674263,
    0.09346834570169449,
    0.07353132218122482,
    -0.02253219485282898,
    0.04237266629934311
  ]
}