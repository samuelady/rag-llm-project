{
  "text": "ls:MobileSync:Operationnotpermitted Thisisnotapermissionissueofthebackupfolder, butanewfeatureinmacOSMojave. Youcansolvethisproblemby grantingfulldiskaccesstoyourterminalapplicationbyfollowingtheexplanationonOSXDaily. BeforeyoucanaccessthedirectoryyouneedtoselectthefolderwiththeUDIDofyourdevice. Checkthesection“Getting theUDIDofaniOSdevice”inthe“iOSBasicSecurityTesting”chapteronhowtoretrievetheUDID. OnceyouknowtheUDIDyoucannavigateintothisdirectoryandyouwillfindthefullbackupofthewholedevice,which doesincludepictures,appdataandwhatevermighthavebeenstoredonthedevice. Reviewthedatathat’sinthebackedupfilesandfolders. Thestructureofthedirectoriesandfilenamesisobfuscated andwilllooklikethis: $pwd /Users/foo/Library/ApplicationSupport/MobileSync/Backup/416f01bd160932d2bf2f95f1f142bc29b1c62dcb/00 $ls |head -n3 000127b08898088a8a169b4f63b363a3adcf389b 0001fe89d0d03708d414b36bc6f706f567b08d66 000200a644d7d2c56eec5b89c1921dacbec83c3e Therefore,it’snotstraightforwardtonavigatethroughitandyouwillnotfindanyhintsoftheappyouwanttoanalyzein thedirectoryorfilename. YoucanconsiderusingtheiMazingsharewareutilitytoassisthere. Performadevicebackup withiMazinganduseitsbuilt-inbackupexplorertoeasilyanalyzeappcontainercontentsincludingoriginalpathsandfile names. WithoutiMazingorsimilarsoftwareyoumayneedtoresorttousinggreptoidentifysensitivedata. Thisisnotthemost thoroughapproachbutyoucantrysearchingforsensitivedatathatyouhavekeyedinwhileusingtheappbeforeyou madethebackup. Forexample: theusername,password,creditcarddata,PIIoranydatathatisconsideredsensitivein thecontextoftheapp. ~/Library/ApplicationSupport/MobileSync/Backup/<UDID> grep -iRn \"password\" . AsdescribedintheStaticAnalysissection,anysensitivedatathatyou’reabletofindshouldbeexcludedfromthebackup, encryptedproperlybyusingtheKeychainornotstoredonthedeviceinthefirstplace. Toidentifyifabackupisencrypted,youcancheckthekeynamed“IsEncrypted”fromthefile“Manifest.plist”,locatedat therootofthebackupdirectory. Thefollowingexampleshowsaconfigurationindicatingthatthebackupisencrypted: <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE plist PUBLIC\"-//Apple//DTDPLIST1.0//EN\"\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"> <plist version=\"1.0\"> ... <key>Date</key> <date>2021-03-12T17:43:33Z</date> <key>IsEncrypted</key> <true/> ... </plist> 411\\nIn case you need to work with an encrypted backup, there are some Python scripts in DinoSec’s GitHub repo, such as backup_tool.pyandbackup_passwd.py,thatwillserveasagoodstartingpoint. However,notethattheymightnotwork withthelatestiTunes/Finderversionsandmightneedtobetweaked. YoucanalsousethetooliOSbackuptoeasilyreadandextractfilesfromapassword-encryptediOSbackup. Proof of Concept: Removing UI Lock with Tampered Backup Asdiscussedearlier,sensitivedataisnotlimitedtojustuserdataandPII.Itcanalsobeconfigurationorsettingsfilesthat affectappbehavior,restrictfunctionality,orenablesecuritycontrols. Ifyoutakealookattheopensourcebitcoinwallet app,Bither,you’llseethatit’spossibletoconfigureaPINtolocktheUI.Andafterafeweasysteps,youwillseehowto bypassthisUIlockwithamodifiedbackuponanon-jailbrokendevice. Afteryouenablethepin,useiMazingtoperformadevicebackup: 1. SelectyourdevicefromthelistundertheAVAILABLEmenu. 2. ClickthetopmenuoptionBackUp. 3. Followpromptstocompletethebackupusingdefaults. Nextyoucanopenthebackuptoviewappcontainerfileswithinyourtargetapp: 1. SelectyourdeviceandclickBackupsonthetoprightmenu. 2. ClickthebackupyoucreatedandselectView. 3. NavigatetotheBitherappfromtheAppsdirectory. 412\\nAtthispointyoucanviewallthebackedupcontentforBither. This is where you can begin parsing through the files looking for sensitive data. In the screenshot you’ll see the net. bither.plistfilewhichcontainsthepin_codeattribute. ToremovetheUIlockrestriction,simplydeletethepin_code attributeandsavethechanges. Fromthereit’spossibletoeasilyrestorethemodifiedversionofnet.bither.plistbackontothedeviceusingthelicensed versionofiMazing. Thefreeworkaround,however,istofindtheplistfileintheobfuscatedbackupgeneratedbyiTunes/Finder. Socreateyour backupofthedevicewithBither’sPINcodeconfigured. Then,usingthestepsdescribedearlier,findthebackupdirectory andgrepfor“pin_code”asshownbelow. $~/Library/ApplicationSupport/MobileSync/Backup/<UDID> $grep -iRn \"pin_code\" . Binaryfile./13/135416dd5f251f9251e0f07206277586b7eac6f6matches You’llseetherewasamatchonabinaryfilewithanobfuscatedname. Thisisyournet.bither.plistfile. Goaheadand renamethefilegivingitaplistextensionsoXcodecaneasilyopenitupforyou. 413\\nAgain,removethepin_codeattributefromtheplistandsaveyourchanges. Renamethefilebacktotheoriginalname (i.e.,withouttheplistextension)andperformyourbackuprestore. Whentherestoreiscompleteyou’llseethatBitherno longerpromptsyouforthePINcodewhenlaunched. Finding Sensitive Data in the Keyboard Cache Platform: ios MASVSV1: MSTG-STORAGE-5 MASVSV2: MASVS-STORAGE-2 Overview Static Analysis • Searchthroughthesourcecodeforsimilarimplementations,suchas textObject.autocorrectionType =UITextAutocorrectionTypeNo; textObject.secureTextEntry =YES; • OpenxibandstoryboardfilesintheInterface BuilderofXcodeandverifythestatesofSecure Text Entryand CorrectionintheAttributes Inspectorfortheappropriateobject. The application must prevent the caching of sensitive information entered into text fields. You can prevent caching by disablingitprogrammatically,usingthetextObject.autocorrectionType = UITextAutocorrectionTypeNodirectivein thedesiredUITextFields, UITextViews, andUISearchBars. Fordatathatshouldbemasked, suchasPINsandpasswords, settextObject.secureTextEntrytoYES. UITextField *textField =[[UITextFieldalloc ]initWithFrame:frame ]; textField.autocorrectionType =UITextAutocorrectionTypeNo; Dynamic Analysis IfajailbrokeniPhoneisavailable,executethefollowingsteps: 1. ResetyouriOSdevicekeyboardcachebynavigatingtoSettings > General > Reset > Reset Keyboard Dictio- nary. 414\\n2. Usetheapplicationandidentifythefunctionalitiesthatallowuserstoentersensitivedata. 3. Dumpthekeyboardcachefilewiththeextension.datinthefollowingdirectoryanditssubdirectories. (whichmight bedifferentforiOSversionsbefore8.0): /private/var/mobile/Library/Keyboard/ 4. Lookforsensitivedata,suchasusername,passwords,emailaddresses,andcreditcardnumbers. Ifthesensitive datacanbeobtainedviathekeyboardcachefile,theappfailsthistest. UITextField *textField =[[UITextFieldalloc ]initWithFrame:frame ]; textField.autocorrectionType =UITextAutocorrectionTypeNo; Ifyoumustuseanon-jailbrokeniPhone: 1. Resetthekeyboardcache. 2. Keyinallsensitivedata. 3. Usetheappagainanddeterminewhetherautocorrectsuggestspreviouslyenteredsensitiveinformation. Determining Whether Sensitive Data Is Shared with Third Parties Platform: ios MASVSV1: MSTG-STORAGE-4 MASVSV2: MASVS-STORAGE-2 Overview Sensitiveinformationmightbeleakedtothirdpartiesbyseveralmeans. OniOStypicallyviathird-partyservicesembed- dedintheapp. The features these services provide can involve tracking services to monitor the user’s behavior while using the app, sellingbanneradvertisements,orimprovingtheuserexperience. Thedownsideisthatdevelopersdon’tusuallyknowthedetailsofthecodeexecutedviathird-partylibraries. Consequently, nomoreinformationthanisnecessaryshouldbesenttoaservice,andnosensitiveinformationshouldbedisclosed. Mostthird-partyservicesareimplementedintwoways: • withastandalonelibrary • withafullSDK Static Analysis To determine whether API calls and functions provided by the third-party library are used according to best practices, reviewtheirsourcecode,requestedpermissionsandcheckforanyknownvulnerabilities. Alldatathat’ssenttothird-partyservicesshouldbeanonymizedtopreventexposureofPII(PersonalIdentifiableInforma- tion)thatwouldallowthethirdpartytoidentifytheuseraccount. Nootherdata(suchasIDsthatcanbemappedtoa useraccountorsession)shouldbesenttoathirdparty. Dynamic Analysis Check all requests to external services for embedded sensitive information. To intercept traffic between the client and server,youcanperformdynamicanalysisbylaunchingaman-in-the-middle(MITM)attackwithBurpSuiteProfessionalor OWASPZAP.Onceyouroutethetrafficthroughtheinterceptionproxy,youcantrytosniffthetrafficthatpassesbetween theappandserver. Allapprequeststhataren’tsentdirectlytotheserveronwhichthemainfunctionishostedshould becheckedforsensitiveinformation,suchasPIIinatrackeroradservice. 415\\niOS Cryptographic APIs Overview Inthe“MobileAppCryptography”chapter,weintroducedgeneralcryptographybestpracticesanddescribedtypicalissues thatcanoccurwhencryptographyisusedincorrectly. Inthischapter,we’llgointomoredetailoniOS’scryptographyAPIs. We’llshowhowtoidentifyusageofthoseAPIsinthesourcecodeandhowtointerpretcryptographicconfigurations. When reviewingcode,makesuretocomparethecryptographicparametersusedwiththecurrentbestpracticeslinkedfromthis guide. Appleprovideslibrariesthatincludeimplementationsofmostcommoncryptographicalgorithms. Apple’sCryptographic ServicesGuideisagreatreference. Itcontainsgeneralizeddocumentationofhowtousestandardlibrariestoinitialize andusecryptographicprimitives,informationthatisusefulforsourcecodeanalysis. CryptoKit AppleCryptoKitwasreleasedwithiOS13andisbuiltontopofApple’snativecryptographiclibrarycorecryptowhichis FIPS140-2validated. TheSwiftframeworkprovidesastronglytypedAPIinterface,haseffectivememorymanagement, conformstoequatable,andsupportsgenerics. CryptoKitcontainssecurealgorithmsforhashing,symmetric-keycryptog- raphy, and public-key cryptography. The framework can also utilize the hardware based key manager from the Secure Enclave. AppleCryptoKitcontainsthefollowingalgorithms: Hashes: • MD5(InsecureModule) • SHA1(InsecureModule) • SHA-2256-bitdigest • SHA-2384-bitdigest • SHA-2512-bitdigest Symmetric-Key: • MessageAuthenticationCodes(HMAC) • AuthenticatedEncryption – AES-GCM – ChaCha20-Poly1305 Public-Key: • KeyAgreement – Curve25519 – NISTP-256 – NISTP-384 – NISTP-512 Examples: Generatingandreleasingasymmetrickey: letencryptionKey=SymmetricKey(size:.bits256) CalculatingaSHA-2512-bitdigest: letrawString=\"OWASPMTSG\" letrawData=Data(rawString.utf8) lethash=SHA512.hash(data:rawData)//Computethedigest lettextHash=String(describing:hash) print(textHash)//Printhashtext FormoreinformationaboutAppleCryptoKit,pleasevisitthefollowingresources: 416\\n• AppleCryptoKit|AppleDeveloperDocumentation • PerformingCommonCryptographicOperations|AppleDeveloperDocumentation • WWDC2019session709|CryptographyandYourApps • HowtocalculatetheSHAhashofaStringorDatainstance|HackingwithSwift CommonCrypto, SecKey and Wrapper libraries ThemostcommonlyusedClassforcryptographicoperationsistheCommonCrypto,whichispackedwiththeiOSruntime. ThefunctionalityofferedbytheCommonCryptoobjectcanbestbedissectedbyhavingalookatthesourcecodeofthe headerfile: • TheCommoncryptor.hgivestheparametersforthesymmetriccryptographicoperations. • TheCommonDigest.hgivestheparametersforthehashingAlgorithms. • TheCommonHMAC.hgivestheparametersforthesupportedHMACoperations. • TheCommonKeyDerivation.hgivestheparametersforsupportedKDFfunctions. • TheCommonSymmetricKeywrap.hgivesthefunctionusedforwrappingasymmetrickeywithaKeyEncryptionKey. Unfortunately,CommonCryptorlacksafewtypesofoperationsinitspublicAPIs,suchas: GCMmodeisonlyavailablein itsprivateAPIsSeeitssourcecode. Forthis,anadditionalbindingheaderisnecessaryorotherwrapperlibrariescanbe used. Next,forasymmetricoperations,AppleprovidesSecKey. AppleprovidesaniceguideinitsDeveloperDocumentationon howtousethis. Asnotedbefore: somewrapper-librariesexistforbothinordertoprovideconvenience. Typicallibrariesthatareusedare, forinstance: • IDZSwiftCommonCrypto • Heimdall • SwiftyRSA • RNCryptor • Arcane Third party libraries Therearevariousthirdpartylibrariesavailable,suchas: • CJOSE:WiththeriseofJWE,andthelackofpublicsupportforAESGCM,otherlibrarieshavefoundtheirway,such asCJOSE.CJOSEstillrequiresahigherlevelwrappingastheyonlyprovideaC/C++implementation. • CryptoSwift: AlibraryinSwift,whichcanbefoundatGitHub. Thelibrarysupportsvarioushash-functions,MAC- functions,CRC-functions,symmetricciphers,andpassword-basedkeyderivationfunctions. Itisnotawrapper,but afullyself-implementedversionofeachoftheciphers.",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 141
  },
  "embedding": [
    -0.046264152973890305,
    -0.02344321832060814,
    0.004649989306926727,
    -0.06213848665356636,
    0.07107695192098618,
    0.028551798313856125,
    -3.9239377656485885e-05,
    -0.07358308136463165,
    0.022356335073709488,
    0.040102843195199966,
    0.11304698139429092,
    0.012170342728495598,
    0.05238896980881691,
    -0.023421350866556168,
    -0.039824724197387695,
    -0.022008731961250305,
    0.02488134615123272,
    -0.00722888158634305,
    -0.07285422831773758,
    0.08536984771490097,
    0.026396309956908226,
    0.044808294624090195,
    0.04805755615234375,
    0.0016570407897233963,
    0.06265651434659958,
    -0.0861658900976181,
    -0.11344554275274277,
    -0.05195436254143715,
    -0.019448481500148773,
    -0.01969464123249054,
    0.023316169157624245,
    0.025868315249681473,
    0.006679534912109375,
    -0.0048392158932983875,
    0.08358420431613922,
    -0.027372175827622414,
    0.01853642426431179,
    -0.048331815749406815,
    -0.027987759560346603,
    -0.060633424669504166,
    -0.08499948680400848,
    0.017354406416416168,
    0.012026285752654076,
    0.0710362046957016,
    -0.08545253425836563,
    -0.02251913957297802,
    -0.03516552969813347,
    -0.06687407940626144,
    -0.023864248767495155,
    0.04081658646464348,
    0.04208146408200264,
    -0.00018091400852426887,
    0.008790667168796062,
    0.014961091801524162,
    -0.11894508451223373,
    0.06917640566825867,
    -0.0424354262650013,
    0.11637678742408752,
    0.0411253497004509,
    0.10042545944452286,
    0.05111328884959221,
    0.010520409792661667,
    -0.018415110185742378,
    0.010934017598628998,
    -0.014963180758059025,
    0.047396861016750336,
    -0.0658959448337555,
    -0.03633320331573486,
    0.002999093383550644,
    -0.061529405415058136,
    -0.05552712827920914,
    0.006034050136804581,
    0.01913887821137905,
    0.09352228045463562,
    0.06259867548942566,
    0.03548780456185341,
    0.04935774952173233,
    0.005195083562284708,
    -0.052613865584135056,
    -0.17499954998493195,
    0.005874998867511749,
    0.041131988167762756,
    0.009404909797012806,
    0.04178138077259064,
    0.007396116852760315,
    0.03352843597531319,
    -0.006109216716140509,
    0.039817292243242264,
    0.01908840611577034,
    -0.03684721514582634,
    0.05065947398543358,
    -0.05426938086748123,
    -0.06123986840248108,
    -0.04439246281981468,
    0.006428346503525972,
    -0.06402047723531723,
    -0.02048676833510399,
    0.023998243734240532,
    -0.04216692969202995,
    0.03524520993232727,
    0.01459986437112093,
    0.005535381846129894,
    0.012715104967355728,
    -0.013983563520014286,
    0.004902529995888472,
    -0.0327783077955246,
    0.03739490732550621,
    -0.0529976449906826,
    -0.010316775180399418,
    -0.01956927962601185,
    -0.008678597398102283,
    0.008429761976003647,
    0.025706645101308823,
    -0.017360979691147804,
    0.033142656087875366,
    0.039024580270051956,
    -0.06705101579427719,
    0.08065827935934067,
    0.07819189131259918,
    0.024962736293673515,
    0.07161647826433182,
    0.0036839868407696486,
    0.03188927844166756,
    -0.07107914239168167,
    -0.057330235838890076,
    -0.037301912903785706,
    0.032834455370903015,
    1.92096112976631e-32,
    -0.012234409339725971,
    0.004203338176012039,
    -0.04297230765223503,
    0.010804455727338791,
    0.04509503021836281,
    -0.09418972581624985,
    0.0644516721367836,
    0.04879266396164894,
    -0.03497385233640671,
    -0.011085056699812412,
    -0.023055458441376686,
    0.063099704682827,
    -0.0029472094029188156,
    -0.04271245002746582,
    0.004291434772312641,
    -0.030241364613175392,
    -0.052048925310373306,
    0.0383826419711113,
    -0.0374273806810379,
    0.03670146316289902,
    0.030215710401535034,
    -0.051825426518917084,
    -0.007565851788967848,
    -0.0069169290363788605,
    -0.026368869468569756,
    0.006148618180304766,
    0.050814438611269,
    0.017544658854603767,
    0.0612766407430172,
    0.04311717301607132,
    -0.13296166062355042,
    -0.007018225267529488,
    -0.044193584471940994,
    -0.051611144095659256,
    -0.003631038824096322,
    0.027200479060411453,
    0.02937944419682026,
    -0.04792853444814682,
    0.04418318346142769,
    -0.12461892515420914,
    -0.032579027116298676,
    -0.04217718169093132,
    -0.13032078742980957,
    0.01245824620127678,
    -0.009780357591807842,
    -0.0367201566696167,
    -0.027042189612984657,
    -0.04773075878620148,
    0.0009166413219645619,
    0.036526862531900406,
    -0.008745410479605198,
    -0.03018363006412983,
    0.002945661311969161,
    -0.08006215840578079,
    -0.11180703341960907,
    0.010487180203199387,
    -0.037000056356191635,
    -0.04220356047153473,
    0.025190992280840874,
    -0.02093636989593506,
    0.07925442606210709,
    0.06708347052335739,
    -0.01609301008284092,
    -0.061404161155223846,
    -0.11527031660079956,
    -0.04602998122572899,
    0.014194714836776257,
    -0.10485571622848511,
    0.0467383973300457,
    -0.05666520819067955,
    -0.11265414208173752,
    -0.03418119251728058,
    0.04257252812385559,
    -0.004509229212999344,
    -0.017276251688599586,
    -0.0046814982779324055,
    -0.012377174571156502,
    -0.011387962847948074,
    -0.03731293976306915,
    -0.025200316682457924,
    0.03416759893298149,
    -0.04214835911989212,
    -0.026326851919293404,
    -0.011119562201201916,
    0.05816389247775078,
    -0.04961390420794487,
    -0.012047027237713337,
    -0.12313773483037949,
    -0.06002022698521614,
    0.021824149414896965,
    -0.061082128435373306,
    0.09034540504217148,
    0.039544302970170975,
    0.0046594273298978806,
    -0.023488888517022133,
    -1.9982980786012592e-32,
    -0.019198961555957794,
    -0.07967526465654373,
    -0.04845312982797623,
    -0.049008794128894806,
    0.003443771740421653,
    -0.03156080096960068,
    -0.07638684660196304,
    0.041632141917943954,
    0.005678145680576563,
    -0.05393778905272484,
    0.018282383680343628,
    0.0035202919971197844,
    -0.006071015726774931,
    -0.08143412321805954,
    0.020928042009472847,
    0.0024814982898533344,
    -0.05177709460258484,
    -0.06195360794663429,
    -0.03274154290556908,
    0.08512770384550095,
    -0.020396891981363297,
    0.08142180740833282,
    0.04943277686834335,
    0.05766947567462921,
    0.0439748615026474,
    0.017635298892855644,
    -0.0021228683181107044,
    0.0658733919262886,
    0.0891348123550415,
    -0.029195278882980347,
    0.11250804364681244,
    -0.0029843244701623917,
    -0.11810209602117538,
    -0.02646382339298725,
    0.03924349322915077,
    -0.036757007241249084,
    -0.01869449019432068,
    -0.024937545880675316,
    -0.053703777492046356,
    0.024005798622965813,
    0.12858934700489044,
    -0.017278680577874184,
    0.025266846641898155,
    0.0073725259862840176,
    0.022087542340159416,
    -0.041134461760520935,
    0.03373384475708008,
    -0.07739490270614624,
    -0.031252216547727585,
    -0.012559141032397747,
    0.11356409639120102,
    -0.037581589072942734,
    0.01790275052189827,
    -0.0017353995935991406,
    0.03514092043042183,
    0.14464668929576874,
    0.04538513347506523,
    -0.08755140006542206,
    -0.004617784172296524,
    -0.02694540098309517,
    0.07523160427808762,
    0.03731972724199295,
    -0.07981155812740326,
    -0.04978059232234955,
    0.022668588906526566,
    0.022736990824341774,
    0.05058768391609192,
    0.04561168700456619,
    -0.003254986135289073,
    0.08759418874979019,
    -0.041096050292253494,
    -0.007993551902472973,
    -0.02343565970659256,
    -0.07232556492090225,
    0.04302893579006195,
    0.015558666549623013,
    0.0055203004740178585,
    -0.1744837611913681,
    -0.06765523552894592,
    -0.03320617601275444,
    -0.01929684355854988,
    0.10242564976215363,
    -0.03374188020825386,
    0.013483978807926178,
    0.04809596389532089,
    -0.07018767297267914,
    -0.08501516282558441,
    0.016649553552269936,
    -0.019964085891842842,
    -0.005634963978081942,
    0.0009572558337822556,
    -0.01027538999915123,
    0.01735777221620083,
    0.04320669174194336,
    0.012981765903532505,
    -6.499568172557701e-08,
    -0.04689357802271843,
    0.05800819769501686,
    0.007123924326151609,
    -0.016868935897946358,
    0.0764043852686882,
    -0.07794594764709473,
    0.04337505251169205,
    0.03848873823881149,
    0.01603042148053646,
    -0.07965889573097229,
    0.0011674542911350727,
    -0.03355121612548828,
    -0.07253116369247437,
    -0.02207651361823082,
    -0.029488369822502136,
    -0.07267162948846817,
    0.041686512529850006,
    0.07940968126058578,
    -0.028123363852500916,
    0.0009560474427416921,
    0.026422729715704918,
    0.012862029485404491,
    -0.024083329364657402,
    -0.033553749322891235,
    -0.03971021622419357,
    0.021154293790459633,
    0.08426102250814438,
    0.006017315201461315,
    0.005884318612515926,
    0.04117314890027046,
    -0.017732730135321617,
    0.0366847887635231,
    0.011202427558600903,
    -0.08014659583568573,
    -0.07837913930416107,
    0.07943649590015411,
    0.0026252802927047014,
    -0.0346577949821949,
    0.03936431556940079,
    0.007328156381845474,
    0.0022456450387835503,
    0.06593285501003265,
    0.057694077491760254,
    0.0661785751581192,
    -0.0584554448723793,
    -0.05057806894183159,
    -0.017138458788394928,
    -7.151153840823099e-05,
    0.04433191940188408,
    -0.013310789130628109,
    -0.10988082736730576,
    -0.029637224972248077,
    -0.03340988978743553,
    0.062302298843860626,
    -0.033094167709350586,
    0.022172465920448303,
    0.030526768416166306,
    0.040815819054841995,
    -0.023652097210288048,
    0.0052876779809594154,
    0.06120612844824791,
    0.026721231639385223,
    0.09461913257837296,
    0.03171750158071518
  ]
}