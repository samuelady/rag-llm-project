{
  "text": "decompiler, making it a compellingalternativetouseforreverseengineering. IfyouhavearegularIDAProlicenseanddonotwanttobuytheHex-Raysdecompiler,youcanuseGhidra’sdecompiler byinstallingtheGhIDApluginforIDAPro. ThemajorityofthischapterappliestoapplicationswritteninObjective-Corhavingbridgedtypes,whicharetypescom- patible with both Swift and Objective-C. The Swift compatibility of most tools that work well with Objective-C is being improved. 376\\nReviewing Decompiled Objective-C and Swift Code Platform: ios TODO:Don’thavethisyet Reviewing Disassembled Objective-C and Swift Code Platform: ios In this section we will be exploring iOS application’s binary code manually and perform static analysis on it. Manual analysiscanbeaslowprocessandrequiresimmensepatience. Agoodmanualanalysiscanmakethedynamicanalysis moresuccessful. Therearenohardwrittenrulesforperformingstaticanalysis,buttherearefewrulesofthumbwhichcanbeusedtohave asystematicapproachtomanualanalysis: • Understandtheworkingoftheapplicationunderevaluation-theobjectiveoftheapplicationandhowitbehaves incaseofwronginput. • Explore the various strings present in the application binary, this can be very helpful, for example in spotting interestingfunctionalitiesandpossibleerrorhandlinglogicintheapplication. • Lookforfunctionsandclasseshavingnamesrelevanttoourobjective. • Lastly,findthevariousentrypointsintotheapplicationandfollowalongfromtheretoexploretheapplication. Techniquesdiscussedinthissectionaregenericandapplicableirrespectiveofthetoolsusedforanalysis. Objective-C Inadditiontothetechniqueslearnedinthe“DisassemblingandDecompiling”section,forthissectionyou’llneedsome understanding of the Objective-C runtime. For instance, functions like _objc_msgSend or _objc_release are specially meaningfulfortheObjective-Cruntime. WewillbeusingtheUnCrackableAppforiOSLevel1,whichhasthesimplegoaloffindingasecretstringhiddensomewhere inthebinary. Theapplicationhasasinglehomescreenandausercaninteractviainputtingcustomstringsintheprovided textfield. Whentheuserinputsthewrongstring,theapplicationshowsapop-upwiththe“VerificationFailed”message. 377\\nYou can keep note of the strings displayed in the pop-up, as this might be helpful when searching for the code where the input is processed and a decision is being made. Luckily, the complexity and interaction with this application is straightforward,whichbodeswellforourreversingendeavors. Forstaticanalysisinthissection,wewillbeusingGhidra9.0.4. Ghidra9.1_betaauto-analysishasabuganddoes notshowtheObjective-Cclasses. WecanstartbycheckingthestringspresentinthebinarybyopeningitinGhidra. Thelistedstringsmightbeoverwhelming atfirst,butwithsomeexperienceinreversingObjective-Ccode,you’lllearnhowtofilteranddiscardthestringsthatare notreallyhelpfulorrelevant. Forinstance,theonesshowninscreenshotbelow,whicharegeneratedfortheObjective-C runtime. Otherstringsmightbehelpfulinsomecases,suchasthosecontainingsymbols(functionnames,classnames, etc.) andwe’llbeusingthemwhenperformingstaticanalysistocheckifsomespecificfunctionisbeingused. 378\\nIf we continue our careful analysis, we can spot the string, “Verification Failed”, which is used for the pop-up when a wronginputisgiven. Ifyoufollowthecross-references(Xrefs)ofthisstring,youwillreachbuttonClickfunctionofthe ViewControllerclass. WewilllookintothebuttonClickfunctionlaterinthissection. Whenfurthercheckingtheother strings in the application, only a few of them look a likely candidate for a hidden flag. You can try them and verify as well. 379\\nMoving forward, we have two paths to take. Either we can start analyzing the buttonClick function identified in the abovestep,orstartanalyzingtheapplicationfromthevariousentrypoints. Inrealworldsituation,mosttimesyouwill betakingthefirstpath,butfromalearningperspective,inthissectionwewilltakethelatterpath. AniOSapplicationcallsdifferentpredefinedfunctionsprovidedbytheiOSruntimedependingonitsthestatewithinthe applicationlifecycle. Thesefunctionsareknownastheentrypointsoftheapp. Forexample: • [AppDelegate application:didFinishLaunchingWithOptions:] iscalledwhentheapplicationisstartedforthe firsttime. • [AppDelegate applicationDidBecomeActive:] iscalled when the application is moving frominactive to active state. Manyapplicationsexecutecriticalcodeinthesesectionsandthereforethey’renormallyagoodstartingpointinorderto followthecodesystematically. Oncewe’redonewiththeanalysisofallthefunctionsintheAppDelegateclass,wecanconcludethatthereisnorelevant codepresent. Thelackofanycodeintheabovefunctionsraisesthequestion-fromwhereistheapplication’sinitialization codebeingcalled? Luckilythecurrentapplicationhasasmallcodebase,andwecanfindanotherViewControllerclassintheSymbolTree view. Inthisclass,functionviewDidLoadfunctionlooksinteresting. IfyoucheckthedocumentationofviewDidLoad,you canseethatitcanalsobeusedtoperformadditionalinitializationonviews. 380\\nIfwecheckthedecompilationofthisfunction,thereareafewinterestingthingsgoingon. Forinstance,thereisacallto anativefunctionatline31andalabelisinitializedwithasetHiddenflagsetto1inlines27-29. Youcankeepanoteof theseobservationsandcontinueexploringtheotherfunctionsinthisclass. Forbrevity,exploringtheotherpartsofthe functionisleftasanexerciseforthereaders. In our first step, we observed that the application verifies the input string only when the UI button is pressed. Thus, analyzingthebuttonClickfunctionisanobvioustarget. Asearliermentioned,thisfunctionalsocontainsthestringwe seeinthepop-ups. Atline29adecisionisbeingmade,whichisbasedontheresultofisEqualString(outputsavedin uVar1atline23). Theinputforthecomparisoniscomingfromthetextinputfield(fromtheuser)andthevalueofthe label. Therefore,wecanassumethatthehiddenflagisstoredinthatlabel. 381\\nNowwehavefollowedthecompleteflowandhavealltheinformationabouttheapplicationflow. Wealsoconcludedthat thehiddenflagispresentinatextlabelandinordertodeterminethevalueofthelabel,weneedtorevisitviewDidLoad function,andunderstandwhatishappeninginthenativefunctionidentified. Analysisofthenativefunctionisdiscussed in“ReviewingDisassembledNativeCode”. Bypassing Certificate Pinning Platform: ios SomeapplicationswillimplementSSLPinning,whichpreventstheapplicationfromacceptingyourinterceptingcertificate asavalidcertificate. Thismeansthatyouwillnotbeabletomonitorthetrafficbetweentheapplicationandtheserver. Formostapplications,certificatepinningcanbebypassedwithinseconds,butonlyiftheappusestheAPIfunctionsthat 382\\narecoveredbythesetools. IftheappisimplementingSSLPinningwithacustomframeworkorlibrary,theSSLPinning mustbemanuallypatchedanddeactivated,whichcanbetime-consuming. ThissectiondescribesvariouswaystobypassSSLPinningandgivesguidanceaboutwhatyoushoulddowhentheexisting toolsdon’twork. Methods for Jailbroken and Non-jailbroken Devices Ifyouhaveajailbrokendevicewithfrida-serverinstalled,youcanbypassSSLpinningbyrunningthefollowingObjection command(repackageyourappifyou’reusinganon-jailbrokendevice): iossslpinningdisable Here’sanexampleoftheoutput: SeealsoObjection’shelponDisablingSSLPinningforiOSforfurtherinformationandinspectthepinning.tsfiletounder- standhowthebypassworks. Methods for Jailbroken Devices Only IfyouhaveajailbrokendeviceyoucantryoneofthefollowingtoolsthatcanautomaticallydisableSSLPinning: • “SSLKillSwitch2”isonewaytodisablecertificatepinning. ItcanbeinstalledviatheCydiastore. Itwillhookonto allhigh-levelAPIcallsandbypasscertificatepinning. • TheBurpSuiteMobileAssistantappcanalsobeusedtobypasscertificatepinning. When the Automated Bypasses Fail Technologiesandsystemschangeovertime,andsomebypasstechniquesmightnotworkeventually. Hence,it’spartof thetesterworktodosomeresearch,sincenoteverytoolisabletokeepupwithOSversionsquicklyenough. SomeappsmightimplementcustomSSLpinningmethods,sothetestercouldalsodevelopnewbypassscriptsmaking useofexistingonesasabaseorinspirationandusingsimilartechniquesbuttargetingtheapp’scustomAPIs. Hereyou caninspectthreegoodexamplesofsuchscripts: • “objection-PinningBypassModule”(pinning.ts) • “FridaCodeShare-ios10-ssl-bypass”by@dki • “CircumventingSSLPinninginobfuscatedappswithOkHttp”byJeroenBeckers 383\\nOtherTechniques: Ifyoudon’thaveaccesstothesource,youcantrybinarypatching: • IfOpenSSLcertificatepinningisused,youcantrybinarypatching. • Sometimes,thecertificateisafileintheapplicationbundle. ReplacingthecertificatewithBurp’scertificatemay besufficient,butbewareofthecertificate’sSHAsum. Ifit’shardcodedintothebinary,youmustreplaceittoo! • Ifyoucanaccessthesourcecodeyoucouldtrytodisablecertificatepinningandrecompiletheapp, lookforAPI callsforNSURLSession,CFStream,andAFNetworkingandmethods/stringscontainingwordslike“pinning”,“X.509”, “Certificate”,etc. Listing Installed Apps Platform: ios When targeting apps that are installed on the device, you’ll first have to figure out the correct bundle identifier of the applicationyouwanttoanalyze. Youcanusefrida-ps-Uaitogetallapps(-a)currentlyinstalled(-i)ontheconnected USBdevice(-U): $frida-ps -Uai PID Name Identifier ---- ------------------- ----------------------------------------- 6847 Calendar com.apple.mobilecal 6815 Mail com.apple.mobilemail - AppStore com.apple.AppStore - AppleStore com.apple.store.Jolly - Calculator com.apple.calculator - Camera com.apple.camera - iGoat-Swift OWASP.iGoat-Swift Italsoshowswhichofthemarecurrentlyrunning. Takeanoteofthe“Identifier”(bundleidentifier)andthePIDifanyas you’llneedthemafterwards. YoucanalsodirectlyopenGrapefruitandafterselectingyouriOSdeviceyou’llgetthelistofinstalledapps. Debugging Platform: ios ComingfromaLinuxbackgroundyou’dexpecttheptracesystemcalltobeaspowerfulasyou’reusedtobut,forsome reason, Apple decided to leave it incomplete. iOS debuggers such as LLDB use it for attaching, stepping or continuing theprocessbuttheycannotuseittoreadorwritememory(allPT_READ_*andPT_WRITE*requestsaremissing). Instead, they have to obtain a so-called Mach task port (by calling task_for_pid with the target process ID) and then use the",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 132
  },
  "embedding": [
    -0.055979128926992416,
    -0.08103734999895096,
    -0.02530743181705475,
    -0.008922263979911804,
    -0.03729081153869629,
    -0.05935703590512276,
    -0.0326843187212944,
    0.029836168512701988,
    -0.1229735016822815,
    0.019429024308919907,
    -0.003401143243536353,
    -0.09089270234107971,
    -0.09857309609651566,
    0.05734919756650925,
    -0.03836549073457718,
    -0.002219571266323328,
    0.06054336205124855,
    0.01958254911005497,
    -0.047943923622369766,
    0.017938878387212753,
    -0.029317811131477356,
    0.030335651710629463,
    0.015851616859436035,
    0.05332991108298302,
    0.08411478996276855,
    0.0038777629379183054,
    -0.07503355294466019,
    -0.07526315748691559,
    0.041062988340854645,
    -0.0358840674161911,
    0.02399023249745369,
    0.00558412354439497,
    0.06547712534666061,
    0.06776364892721176,
    0.030614804476499557,
    -0.011367860250175,
    0.08413121104240417,
    -0.06172206625342369,
    0.017188208177685738,
    -0.0722053125500679,
    -0.13426725566387177,
    0.05897128954529762,
    -0.022590257227420807,
    0.056945666670799255,
    -0.02142358385026455,
    0.012519092299044132,
    -0.014500546269118786,
    -0.028532521799206734,
    -0.03355846181511879,
    0.009389245882630348,
    -0.00781197939068079,
    0.038603588938713074,
    -0.025293046608567238,
    0.08535550534725189,
    0.11310726404190063,
    0.002569700824096799,
    -0.01431571040302515,
    0.004381515085697174,
    0.08529316633939743,
    0.09296585619449615,
    -0.048673756420612335,
    0.09297679364681244,
    -0.026039300486445427,
    -0.0038289434742182493,
    0.028910256922245026,
    0.002152653643861413,
    0.030219733715057373,
    -0.06212518364191055,
    0.08666527271270752,
    -0.052111394703388214,
    0.023303262889385223,
    -0.08109210431575775,
    0.06688547134399414,
    0.008478594943881035,
    -0.05386798083782196,
    0.02665269933640957,
    0.02821231447160244,
    0.0017796962056308985,
    -0.054375793784856796,
    -0.13245688378810883,
    0.002278879750519991,
    0.03783489763736725,
    0.03981084004044533,
    0.1267690807580948,
    0.04411466419696808,
    -0.03742455691099167,
    -0.03232073038816452,
    -0.03460368886590004,
    0.05721309408545494,
    0.11250172555446625,
    0.030274249613285065,
    0.00025546608958393335,
    0.027298010885715485,
    -0.04383648559451103,
    0.08190255612134933,
    -0.05549268797039986,
    0.05765361338853836,
    -0.017814118415117264,
    -0.023355942219495773,
    0.029489705339074135,
    -0.06344336271286011,
    -0.04151082783937454,
    -0.03631502389907837,
    -0.04082941636443138,
    -0.01878463849425316,
    -0.039975039660930634,
    0.07663531601428986,
    -0.07186330854892731,
    0.006181271746754646,
    0.06211179867386818,
    0.04838590696454048,
    0.03890189900994301,
    -0.028596848249435425,
    -0.007187733426690102,
    0.0582701601088047,
    -0.02552938275039196,
    -0.055960748344659805,
    0.038067836314439774,
    0.06117235869169235,
    0.06348259747028351,
    -0.05136075243353844,
    0.07533923536539078,
    0.021604740992188454,
    -0.02624114230275154,
    -0.008719859644770622,
    -0.017480336129665375,
    0.015218904241919518,
    1.5432351219127688e-32,
    -0.059007540345191956,
    0.004022274632006884,
    -0.06386067718267441,
    0.03009127825498581,
    -0.07585067301988602,
    -0.09256941080093384,
    0.03429506719112396,
    0.10096333920955658,
    0.03275192156434059,
    0.0201408788561821,
    -0.010159837082028389,
    0.04960031807422638,
    -0.05225294828414917,
    0.09334743022918701,
    0.07476292550563812,
    -0.05903950706124306,
    -0.023255303502082825,
    -0.0084358099848032,
    -0.09865467250347137,
    0.04220715910196304,
    0.02975287102162838,
    -0.000661090190988034,
    -0.030710944905877113,
    -0.04745599254965782,
    0.027813363820314407,
    0.007034277077764273,
    0.06504078209400177,
    -0.04302104935050011,
    0.025719735771417618,
    0.07443388551473618,
    -0.09344623982906342,
    -0.002475860295817256,
    0.0005343530210666358,
    0.007569574750959873,
    0.008231235668063164,
    -0.04012468084692955,
    -0.0010941653745248914,
    -0.03311173617839813,
    -0.05245095118880272,
    0.0025385431945323944,
    -0.05189770832657814,
    0.038067955523729324,
    -0.09517942368984222,
    -0.053083714097738266,
    0.07201683521270752,
    0.0275880116969347,
    0.005365564953535795,
    -0.021795781329274178,
    -0.0068033915013074875,
    -0.03219655528664589,
    0.03749178722500801,
    -0.01503011304885149,
    0.003670560894533992,
    -0.038443729281425476,
    -0.025148941203951836,
    0.015242270193994045,
    0.033909816294908524,
    -0.08489614725112915,
    0.055867791175842285,
    0.04972337186336517,
    -0.06383378058671951,
    0.06295258551836014,
    -0.021778695285320282,
    -0.0760980173945427,
    0.017589867115020752,
    0.04798687621951103,
    -0.09823501110076904,
    -0.07324791699647903,
    -0.0252213254570961,
    -0.0215729009360075,
    -0.13221214711666107,
    0.009277813136577606,
    -0.011368010193109512,
    0.005935154855251312,
    0.010161113925278187,
    0.019145049154758453,
    0.011907963082194328,
    0.015943629667162895,
    -0.01861228607594967,
    -0.13328544795513153,
    -0.05455974489450455,
    0.08874820172786713,
    0.044630266726017,
    -0.009564606472849846,
    0.049957454204559326,
    -0.03188042342662811,
    -0.034759748727083206,
    -0.03536562994122505,
    -0.07338542491197586,
    0.09640980511903763,
    0.024499930441379547,
    -0.06586583703756332,
    -0.047384172677993774,
    0.006087655667215586,
    -0.05588558316230774,
    -1.4599024172046568e-32,
    0.0030734133906662464,
    -0.0844564363360405,
    -0.11865400522947311,
    0.029381828382611275,
    -0.07552843540906906,
    -0.061706338077783585,
    -0.05009106546640396,
    0.006716232281178236,
    0.04809930920600891,
    -0.07985611259937286,
    -0.017988232895731926,
    -0.0005007421714253724,
    0.03291808068752289,
    0.015446571633219719,
    -0.020060092210769653,
    -0.00613043550401926,
    -0.09238655120134354,
    -0.06507154554128647,
    0.013853635638952255,
    0.08772207051515579,
    0.042665041983127594,
    0.04540526494383812,
    0.004857404623180628,
    -0.10205081850290298,
    -0.01822279766201973,
    0.026500103995203972,
    -0.016538619995117188,
    0.035686466842889786,
    0.14209312200546265,
    -0.06431657075881958,
    0.009949957951903343,
    0.013394288718700409,
    -0.04138841852545738,
    -0.05097121000289917,
    0.0011601047590374947,
    0.047012995928525925,
    -0.008947505615651608,
    -0.01205121073871851,
    -0.07803206145763397,
    -0.06237934157252312,
    0.05757930129766464,
    0.06409971415996552,
    -0.03706831485033035,
    -0.00400221673771739,
    0.03182313218712807,
    0.0883428081870079,
    -0.06296447664499283,
    0.027350453659892082,
    0.07953500002622604,
    -0.029135270044207573,
    0.08701999485492706,
    -0.027332141995429993,
    -0.025312183424830437,
    0.007024201098829508,
    -0.04304509609937668,
    -0.013972188346087933,
    0.07216987758874893,
    -0.10000725835561752,
    -0.03950905054807663,
    0.02439218945801258,
    0.027513260021805763,
    -0.020635496824979782,
    0.10512906312942505,
    -0.05880093574523926,
    0.034818585962057114,
    0.006889099255204201,
    -0.032007232308387756,
    -0.04739755392074585,
    -0.024974416941404343,
    0.021691108122467995,
    -0.001080435118637979,
    -0.11726803332567215,
    0.003919434268027544,
    -0.03894578665494919,
    -0.039901357144117355,
    0.02148844487965107,
    0.0367872454226017,
    -0.08167672902345657,
    0.024185052141547203,
    0.00927040260285139,
    0.03038906864821911,
    0.14037303626537323,
    0.029202274978160858,
    0.052262015640735626,
    0.07673130184412003,
    0.06610292941331863,
    -0.022875415161252022,
    0.02019507810473442,
    0.03112040087580681,
    0.05790691077709198,
    -0.011754114180803299,
    -0.0023441368248313665,
    0.02210349589586258,
    0.03076503425836563,
    -0.010458691976964474,
    -6.251321593708781e-08,
    -0.018085164949297905,
    0.02645004540681839,
    -0.019264504313468933,
    0.014462475664913654,
    0.026091651991009712,
    -0.02470574341714382,
    -0.06467153131961823,
    0.012048233300447464,
    0.04301838576793671,
    -0.06367052346467972,
    0.048347849398851395,
    -0.004184323828667402,
    -0.09600953757762909,
    0.022337770089507103,
    0.016667688265442848,
    -0.015910642221570015,
    0.021840721368789673,
    -0.031047172844409943,
    -0.023918716236948967,
    -0.0678437128663063,
    -0.00608428381383419,
    -0.0557696595788002,
    -0.04265594109892845,
    -0.017328554764389992,
    -0.04210836440324783,
    0.0263172946870327,
    -0.004069238435477018,
    -0.0013055935269221663,
    0.01632041297852993,
    0.03233113884925842,
    -0.007573472801595926,
    0.10374415665864944,
    0.045392077416181564,
    -0.004773665685206652,
    0.033303726464509964,
    0.06017133966088295,
    -0.029426956549286842,
    0.0020869062282145023,
    0.03132007271051407,
    -0.005786483641713858,
    0.040455639362335205,
    0.041366301476955414,
    -0.05002797394990921,
    0.01168938260525465,
    0.03986069932579994,
    -0.04927333816885948,
    0.004459800664335489,
    -0.017665326595306396,
    -0.03469919413328171,
    0.03268533945083618,
    -0.011601337231695652,
    -0.019598400220274925,
    -0.055029768496751785,
    0.0513094961643219,
    0.011808267794549465,
    0.06443645060062408,
    -0.0031711100600659847,
    -0.11490946263074875,
    -0.03882380947470665,
    0.07242514938116074,
    0.06854303926229477,
    -0.016934271901845932,
    0.025345414876937866,
    0.02036052569746971
  ]
}