{
  "text": "Youcanusemethodtracingoncryptographicmethodstodetermineinput/outputvaluessuchasthekeysthatarebeing used. Monitor file system access while cryptographic operations are being performed to assess where key material is writtentoorreadfrom. Forexample,monitorthefilesystembyusingtheAPImonitorofRMS-RuntimeMobileSecurity. 226\\nAndroid Local Authentication Overview During local authentication, an app authenticates the user against credentials stored locally on the device. In other words, the user “unlocks” the app or some inner layer of functionality by providing a valid PIN, password or biometric characteristics such as face or fingerprint, which is verified by referencing local data. Generally, this is done so that userscanmoreconvenientlyresumeanexistingsessionwitharemoteserviceorasameansofstep-upauthentication toprotectsomecriticalfunction. Asstatedbeforeinchapter“MobileAppAuthenticationArchitectures”: Thetestershouldbeawarethatlocalauthentica- tionshouldalwaysbeenforcedataremoteendpointorbasedonacryptographicprimitive. Attackerscaneasilybypass localauthenticationifnodatareturnsfromtheauthenticationprocess. OnAndroid,therearetwomechanismssupportedbytheAndroidRuntimeforlocalauthentication: theConfirmCredential flowandtheBiometricAuthenticationflow. Confirm Credential Flow TheconfirmcredentialflowisavailablesinceAndroid6.0andisusedtoensurethatusersdonothavetoenterapp-specific passwordstogetherwiththelockscreenprotection. Instead: ifauserhasloggedintothedevicerecently,thenconfirm- credentialscanbeusedtounlockcryptographicmaterialsfromtheAndroidKeystore. Thatis,iftheuserunlockedthe devicewithinthesettimelimits(setUserAuthenticationValidityDurationSeconds),otherwisethedeviceneedstobe unlockedagain. NotethatthesecurityofConfirmCredentialsisonlyasstrongastheprotectionsetatthelockscreen. Thisoftenmeans thatsimplepredictivelock-screenpatternsareusedandthereforewedonotrecommendanyappswhichrequireL2of securitycontrolstouseConfirmCredentials. Biometric Authentication Flow Biometricauthenticationisaconvenientmechanismforauthentication,butalsointroducesanadditionalattacksurface whenusingit. TheAndroiddeveloperdocumentationgivesaninterestingoverviewandindicatorsformeasuringbiometric unlocksecurity. TheAndroidplatformoffersthreedifferentclassesforbiometricauthentication: • Android10(APIlevel29)andhigher: BiometricManager • Android9(APIlevel28)andhigher: BiometricPrompt • Android6.0(APIlevel23)andhigher: FingerprintManager(deprecatedinAndroid9(APIlevel28)) 227\\nTheclassBiometricManagercanbeusedtoverifyifbiometrichardwareisavailableonthedeviceandifit’sconfigured bytheuser. Ifthat’sthecase,theclassBiometricPromptcanbeusedtoshowasystem-providedbiometricdialog. TheBiometricPromptclassisasignificantimprovement,asitallowstohaveaconsistentUIforbiometricauthentication onAndroidandalsosupportsmoresensorsthanjustfingerprint. This is different to the FingerprintManager class which only supports fingerprint sensors and provides no UI, forcing developerstobuildtheirownfingerprintUI. AverydetailedoverviewandexplanationoftheBiometricAPIonAndroidwaspublishedontheAndroidDeveloperBlog. FingerprintManager (deprecated in Android 9 (API level 28)) Android 6.0 (API level 23) introduced public APIs for authenticating users via fingerprint, but is deprecated in Android 9 (API level 28). Access to the fingerprint hardware is provided through the FingerprintManager class. An app can request fingerprint authentication by instantiating aFingerprintManager object and calling its authenticate method. Thecallerregisterscallbackmethodstohandlepossibleoutcomesoftheauthenticationprocess(i.e.success,failure,or error). Notethatthismethoddoesn’tconstitutestrongproofthatfingerprintauthenticationhasactuallybeenperformed -forexample,theauthenticationstepcouldbepatchedoutbyanattacker,orthe“success”callbackcouldbeoverloaded usingdynamicinstrumentation. You can achieve better security by using the fingerprint API in conjunction with the Android KeyGenerator class. With thisapproach,asymmetrickeyisstoredintheAndroidKeyStoreandunlockedwiththeuser’sfingerprint. Forexample, to enable user access to a remote service, an AES key is created which encrypts the authentication token. By calling setUserAuthenticationRequired(true)whencreatingthekey,itisensuredthattheusermustre-authenticatetore- trieveit. Theencryptedauthenticationtokencanthenbesaveddirectlyonthedevice(e.g.viaSharedPreferences). This designisarelativelysafewaytoensuretheuseractuallyenteredanauthorizedfingerprint. Anevenmoresecureoptionisusingasymmetriccryptography. Here,themobileappcreatesanasymmetrickeypairin theKeyStoreandenrollsthepublickeyontheserverbackend. Latertransactionsarethensignedwiththeprivatekey andverifiedbytheserverusingthepublickey. 228\\nBiometric Library AndroidprovidesalibrarycalledBiometricwhichoffersacompatibilityversionoftheBiometricPromptandBiometric- ManagerAPIs,asimplementedinAndroid10,withfullfeaturesupportbacktoAndroid6.0(API23). YoucanfindareferenceimplementationandinstructionsonhowtoshowabiometricauthenticationdialogintheAndroid developerdocumentation. There are two authenticate methods available in the BiometricPrompt class. One of them expects a CryptoObject, whichaddsanadditionallayerofsecurityforthebiometricauthentication. TheauthenticationflowwouldbeasfollowswhenusingCryptoObject: • TheappcreatesakeyintheKeyStorewithsetUserAuthenticationRequiredandsetInvalidatedByBiometri- cEnrollmentsettotrue. Additionally,setUserAuthenticationValidityDurationSecondsshouldbesetto-1. • Thiskeyisusedtoencryptinformationthatisauthenticatingtheuser(e.g.sessioninformationorauthentication token). • AvalidsetofbiometricsmustbepresentedbeforethekeyisreleasedfromtheKeyStoretodecryptthedata,which isvalidatedthroughtheauthenticatemethodandtheCryptoObject. • This solution cannot be bypassed, even on rooted devices, as the key from the KeyStore can only be used after successfulbiometricauthentication. If CryptoObject is not used as part of the authenticate method, it can be bypassed by using Frida. See the “Dynamic Instrumentation”sectionformoredetails. DeveloperscanuseseveralvalidationclassesofferedbyAndroidtotesttheimplementationofbiometricauthentication intheirapp. FingerprintManager ThissectiondescribeshowtoimplementbiometricauthenticationbyusingtheFingerprintManagerclass. Please keepinmindthatthisclassisdeprecatedandtheBiometriclibraryshouldbeusedinsteadasabestpractice. This sectionisjustforreference,incaseyoucomeacrosssuchanimplementationandneedtoanalyzeit. Begin by searching for FingerprintManager.authenticate calls. The first parameter passed to this method should be a CryptoObject instance which is a wrapper class for crypto objects supported by FingerprintManager. Should the parameterbesettonull,thismeansthefingerprintauthorizationispurelyevent-bound,likelycreatingasecurityissue. ThecreationofthekeyusedtoinitializethecipherwrappercanbetracedbacktotheCryptoObject. Verifythekeywas bothcreatedusingtheKeyGeneratorclassinadditiontosetUserAuthenticationRequired(true)beingcalledduring creationoftheKeyGenParameterSpecobject(seecodesamplesbelow). Makesuretoverifytheauthenticationlogic. Fortheauthenticationtobesuccessful,theremoteendpointmustrequire theclienttopresentthesecretretrievedfromtheKeyStore,avaluederivedfromthesecret,oravaluesignedwiththe clientprivatekey(seeabove). Safelyimplementingfingerprintauthenticationrequiresfollowingafewsimpleprinciples,startingbyfirstcheckingifthat typeofauthenticationisevenavailable. Onthemostbasicfront, thedevicemustrunAndroid6.0orhigher(API23+). Fourotherprerequisitesmustalsobeverified: • ThepermissionmustberequestedintheAndroidManifest: <uses-permission android:name=\"android.permission.USE_FINGERPRINT\" /> • Fingerprinthardwaremustbeavailable: FingerprintManagerfingerprintManager =(FingerprintManager) context.getSystemService(Context.FINGERPRINT_SERVICE); fingerprintManager.isHardwareDetected(); • Theusermusthaveaprotectedlockscreen: KeyguardManagerkeyguardManager =(KeyguardManager)context.getSystemService(Context.KEYGUARD_SERVICE); keyguardManager.isKeyguardSecure(); //noteifthisisnotthecase:asktheusertosetupaprotectedlockscreen 229\\n• Atleastonefingershouldberegistered: fingerprintManager.hasEnrolledFingerprints(); • Theapplicationshouldhavepermissiontoaskforauserfingerprint: context.checkSelfPermission(Manifest.permission.USE_FINGERPRINT)==PermissionResult.PERMISSION_GRANTED; Ifanyoftheabovechecksfail,theoptionforfingerprintauthenticationshouldnotbeoffered. ItisimportanttorememberthatnoteveryAndroiddeviceoffershardware-backedkeystorage. TheKeyInfoclasscanbe usedtofindoutwhetherthekeyresidesinsidesecurehardwaresuchasaTrustedExecutionEnvironment(TEE)orSecure Element(SE). SecretKeyFactoryfactory =SecretKeyFactory.getInstance(getEncryptionKey().getAlgorithm(),ANDROID_KEYSTORE); KeyInfosecetkeyInfo =(KeyInfo)factory.getKeySpec(yourencryptionkeyhere,KeyInfo.class); secetkeyInfo.isInsideSecureHardware() On certain systems, it is possible to enforce the policy for biometric authentication through hardware as well. This is checkedby: keyInfo.isUserAuthenticationRequirementEnforcedBySecureHardware(); Thefollowingdescribeshowtodofingerprintauthenticationusingasymmetrickeypair. Fingerprint authentication may be implemented by creating a new AES key using the KeyGenerator class by adding setUserAuthenticationRequired(true)inKeyGenParameterSpec.Builder. generator =KeyGenerator.getInstance(KeyProperties.KEY_ALGORITHM_AES,KEYSTORE); generator.init(newKeyGenParameterSpec.Builder (KEY_ALIAS, KeyProperties.PURPOSE_ENCRYPT |KeyProperties.PURPOSE_DECRYPT) .setBlockModes(KeyProperties.BLOCK_MODE_CBC) .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_PKCS7) .setUserAuthenticationRequired(true) .build() ); generator.generateKey(); Toperformencryptionordecryptionwiththeprotectedkey,createaCipherobjectandinitializeitwiththekeyalias. SecretKeykeyspec =(SecretKey)keyStore.getKey(KEY_ALIAS,null); if(mode ==Cipher.ENCRYPT_MODE){ cipher.init(mode,keyspec); Keep in mind, a new key cannot be used immediately - it has to be authenticated through the FingerprintMan- ager first.",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 91
  },
  "embedding": [
    -0.04652206227183342,
    0.023093249648809433,
    -0.055281639099121094,
    -0.08033137768507004,
    0.028297098353505135,
    0.0027741098310798407,
    0.06534576416015625,
    -0.0032085657585412264,
    0.06177067384123802,
    0.00855346117168665,
    0.06651677191257477,
    -0.01948573626577854,
    0.05922185257077217,
    -0.024529384449124336,
    -0.06336450576782227,
    -0.038899410516023636,
    0.0358271524310112,
    -0.017145173624157906,
    -0.009941907599568367,
    -0.011414912529289722,
    0.056149207055568695,
    -0.036081183701753616,
    0.031708501279354095,
    0.017620420083403587,
    0.00866912305355072,
    -0.032698411494493484,
    -8.45370814204216e-05,
    0.010890474542975426,
    0.0009204426896758378,
    0.055913228541612625,
    0.0087503707036376,
    0.08108174055814743,
    0.024969976395368576,
    0.0712011456489563,
    -0.04000014811754227,
    -0.028321512043476105,
    0.038124531507492065,
    0.07557375729084015,
    -0.06700288504362106,
    -0.057702720165252686,
    -0.0925244614481926,
    -0.06531745940446854,
    -0.04537098482251167,
    0.06983625888824463,
    -0.0029544741846621037,
    -0.007948067039251328,
    -0.05317861959338188,
    0.051045168191194534,
    -0.08332783728837967,
    0.03635696321725845,
    0.0422663576900959,
    0.09890155494213104,
    -0.007549604866653681,
    0.0643191933631897,
    -0.07652681320905685,
    0.001129706739448011,
    0.0329761803150177,
    0.022947141900658607,
    0.037918299436569214,
    0.10709080100059509,
    0.02116241306066513,
    0.06943947076797485,
    -0.03267918527126312,
    0.03353827819228172,
    0.048161160200834274,
    0.10559786111116409,
    -0.0653705894947052,
    -0.11673638224601746,
    0.05670090764760971,
    -0.052808091044425964,
    -0.02583480067551136,
    -0.03258746862411499,
    0.009186415001749992,
    -0.013363434933125973,
    -0.021962609142065048,
    0.038762979209423065,
    -0.04982306435704231,
    -0.058966584503650665,
    0.026144688948988914,
    -0.11156006902456284,
    0.02930481918156147,
    0.02969827689230442,
    0.06732118874788284,
    0.02885768562555313,
    0.0560678169131279,
    0.05901092290878296,
    -0.025056663900613785,
    -0.027126803994178772,
    0.009712238796055317,
    0.020915323868393898,
    0.061722300946712494,
    0.023903127759695053,
    -0.12570428848266602,
    -0.06681760400533676,
    0.06854896247386932,
    -0.07317527383565903,
    -0.005813344847410917,
    -0.017565149813890457,
    0.002492344006896019,
    0.00395393930375576,
    -0.0005430872552096844,
    -0.04206772521138191,
    -0.014226884581148624,
    -0.05481559783220291,
    0.06415339559316635,
    -0.007952607236802578,
    0.03371983394026756,
    -0.10248634219169617,
    0.06215237081050873,
    0.07479005306959152,
    0.06384027749300003,
    -0.0055410973727703094,
    -0.05966753885149956,
    0.03984944149851799,
    0.034519780427217484,
    0.08000936359167099,
    -0.017452042549848557,
    0.06030295789241791,
    0.03822238743305206,
    0.05056386440992355,
    -0.05874720215797424,
    -0.00426151417195797,
    0.003803031984716654,
    -0.12801018357276917,
    -0.02068220265209675,
    -0.029991017654538155,
    -0.017239650711417198,
    1.3842644985170274e-32,
    -0.03195187449455261,
    0.04307607561349869,
    -0.05352277681231499,
    0.05851871892809868,
    -0.07400775700807571,
    -0.025652289390563965,
    0.03164489567279816,
    -0.03509361669421196,
    0.01021425612270832,
    0.021014569327235222,
    -0.022155707702040672,
    0.0961645096540451,
    0.012859865091741085,
    0.02816154807806015,
    0.08616136014461517,
    0.03304104134440422,
    -0.026543622836470604,
    0.0006948211812414229,
    -0.05409817770123482,
    0.08088900148868561,
    0.047982554882764816,
    -0.08282420039176941,
    0.08523529767990112,
    0.04670051857829094,
    0.01752546615898609,
    -0.017765894532203674,
    -0.03814740851521492,
    -0.00015820383850950748,
    -0.005121701862663031,
    0.062079548835754395,
    -0.022270599380135536,
    -0.036256179213523865,
    -0.02010069414973259,
    -0.0285765640437603,
    0.00936339981853962,
    0.024899328127503395,
    0.1100492849946022,
    -0.07962896674871445,
    0.02960425242781639,
    -0.04704783484339714,
    -0.03199385851621628,
    -0.062150780111551285,
    -0.03277301788330078,
    -0.023594914004206657,
    -0.06942461431026459,
    -0.046565745025873184,
    -0.04389958828687668,
    -0.011161374859511852,
    0.015555709600448608,
    0.09041687846183777,
    -0.08206849545240402,
    0.003306266386061907,
    -0.04812563210725784,
    -0.14008326828479767,
    -0.07702767103910446,
    -0.019601929932832718,
    -0.003579914104193449,
    -0.08892238885164261,
    0.014136484824120998,
    -0.04702237993478775,
    -0.03343065083026886,
    0.023372601717710495,
    -0.05291344225406647,
    -0.021614640951156616,
    -0.0644916221499443,
    -0.04731312394142151,
    0.05921400710940361,
    -0.0933174341917038,
    0.004565730690956116,
    0.012838177382946014,
    -0.09470287710428238,
    0.02015753835439682,
    0.041288986802101135,
    0.019855808466672897,
    -0.06888002157211304,
    0.04532087966799736,
    0.03218745440244675,
    0.10266805440187454,
    -0.04249436780810356,
    0.00144893117249012,
    0.041604816913604736,
    0.018583964556455612,
    -0.03220720216631889,
    0.008833719417452812,
    -0.03282996639609337,
    0.031115705147385597,
    -0.048060718923807144,
    -0.08261194825172424,
    -0.08038662374019623,
    0.022617653012275696,
    0.03819185867905617,
    0.0057508498430252075,
    0.010242588818073273,
    -0.016698960214853287,
    -0.10986306518316269,
    -1.4900819122308743e-32,
    -0.03663841634988785,
    -0.0779028832912445,
    -0.00204096594825387,
    -0.005064963363111019,
    0.02341068908572197,
    -0.019049692898988724,
    -0.03783337399363518,
    0.06892254203557968,
    -0.045305244624614716,
    -0.07581992447376251,
    -0.01930192857980728,
    0.010097865015268326,
    0.02114511840045452,
    -0.020613210275769234,
    0.02585071139037609,
    -0.008268356323242188,
    -0.023822233080863953,
    0.020407889038324356,
    0.013241223990917206,
    0.08489282429218292,
    -0.02894660457968712,
    0.01079923752695322,
    -0.04746907204389572,
    0.04302048310637474,
    0.036889392882585526,
    -0.0005028384039178491,
    -0.011541998013854027,
    -0.01776612177491188,
    0.025593802332878113,
    -0.07181748747825623,
    0.03170868009328842,
    -4.790865204995498e-05,
    -0.03885624185204506,
    0.0025191849563270807,
    -0.08242038637399673,
    -0.04009156674146652,
    0.020564360544085503,
    -0.0016617699293419719,
    -0.043886732310056686,
    0.03304444998502731,
    0.04706632345914841,
    0.05160633474588394,
    -0.07481750100851059,
    -0.01875607855618,
    -0.07997850328683853,
    -0.02763933688402176,
    0.014084123075008392,
    -0.03939024731516838,
    -0.05907048285007477,
    -0.0305692907422781,
    0.12689441442489624,
    0.030383707955479622,
    0.039617862552404404,
    0.02997623197734356,
    -0.04320000857114792,
    0.14238084852695465,
    0.053972795605659485,
    -0.045206524431705475,
    -0.009139747358858585,
    -0.035013243556022644,
    0.06014179810881615,
    -0.043563298881053925,
    -0.002852234523743391,
    0.02710885927081108,
    0.0028882529586553574,
    0.047539759427309036,
    0.03284674882888794,
    0.005332594271749258,
    -0.053883958607912064,
    0.0806446298956871,
    -0.00995524600148201,
    -0.10349546372890472,
    0.008843709714710712,
    -0.037874735891819,
    0.0030237536411732435,
    -0.029606880620121956,
    -0.044139888137578964,
    -0.09984026849269867,
    -0.07431695610284805,
    -0.06941442936658859,
    0.031076956540346146,
    -0.010730515234172344,
    -0.04469989240169525,
    -0.007750818971544504,
    0.07783189415931702,
    -0.05483081936836243,
    -0.049180153757333755,
    0.016049064695835114,
    0.016327647492289543,
    0.010095481760799885,
    -0.07165206968784332,
    0.037822969257831573,
    -0.14454343914985657,
    -0.02971837855875492,
    0.0045596519485116005,
    -5.8326499186023284e-08,
    0.007979418151080608,
    0.0018412581412121654,
    0.0055876984260976315,
    -0.07078761607408524,
    -0.026233138516545296,
    0.06673634052276611,
    0.04984206706285477,
    -0.017529696226119995,
    0.02005908079445362,
    -0.05309493467211723,
    0.043471891433000565,
    -0.03538184612989426,
    -0.061630092561244965,
    -0.1041688472032547,
    0.04043053090572357,
    0.04574813321232796,
    0.0787113681435585,
    0.041360706090927124,
    -0.03421560302376747,
    0.03723672032356262,
    -0.024648282676935196,
    0.009446864947676659,
    -0.04519736021757126,
    0.033374860882759094,
    0.0035804996732622385,
    0.04925422742962837,
    0.005379705689847469,
    0.07746761292219162,
    0.03065599501132965,
    0.05139898508787155,
    -0.025469714775681496,
    0.014025245793163776,
    0.08521974831819534,
    -0.027735719457268715,
    -0.07039687037467957,
    0.11794642359018326,
    -0.010010858997702599,
    -0.0673537328839302,
    0.03400808572769165,
    0.009097040630877018,
    -0.02894173003733158,
    0.0051699550822377205,
    -0.03515829145908356,
    0.06170279532670975,
    -0.011532440781593323,
    -0.042874693870544434,
    0.0302492193877697,
    0.000814923201687634,
    -0.015626484528183937,
    0.08359767496585846,
    -0.09261883795261383,
    -0.05910458788275719,
    -0.06889316439628601,
    0.14218857884407043,
    0.011297560296952724,
    0.014691388234496117,
    0.04775693640112877,
    -0.07432382553815842,
    0.060621656477451324,
    0.026277922093868256,
    0.04308301582932472,
    0.03675510734319687,
    0.05161867290735245,
    -0.03645804896950722
  ]
}