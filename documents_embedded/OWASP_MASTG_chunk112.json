{
  "text": "Overview General Disclaimer Thelackofanyofthesemeasuresdoesnotcauseavulnerability-instead,theyaremeanttoincreasetheapp’s resilienceagainstreverseengineeringandspecificclient-sideattacks. None of these measures can assure a 100% effectiveness, as the reverse engineer will always have full access to the deviceandwillthereforealwayswin(givenenoughtimeandresources)! Forexample,preventingdebuggingisvirtuallyimpossible. Iftheappispubliclyavailable,itcanberunonanuntrusted devicethatisunderfullcontroloftheattacker. Averydeterminedattackerwilleventuallymanagetobypassalltheapp’s anti-debuggingcontrolsbypatchingtheappbinaryorbydynamicallymodifyingtheapp’sbehavioratruntimewithtools suchasFrida. You can learn more about principles and technical risks of reverse engineering and code modification in these OWASP documents: • OWASPArchitecturalPrinciplesThatPreventCodeModificationorReverseEngineering • OWASPTechnicalRisksofReverseEngineeringandUnauthorizedCodeModification Root Detection and Common Root Detection Methods In the context of anti-reversing, the goal of root detection is to make running the app on a rooted device a bit more difficult,whichinturnblockssomeofthetoolsandtechniquesreverseengineersliketouse. Likemostotherdefenses, rootdetectionisnotveryeffectivebyitself,butimplementingmultiplerootchecksthatarescatteredthroughouttheapp canimprovetheeffectivenessoftheoverallanti-tamperingscheme. ForAndroid,wedefine“rootdetection”abitmorebroadly,includingcustomROMsdetection,i.e.,determiningwhether thedeviceisastockAndroidbuildoracustombuild. Inthefollowingsection,welistsomecommonrootdetectionmethodsyou’llencounter. You’llfindsomeofthesemethods implementedintheOWASPUnCrackableAppsforAndroidthataccompanytheOWASPMobileTestingGuide. RootdetectioncanalsobeimplementedthroughlibrariessuchasRootBeer. SafetyNet SafetyNet is an Android API that provides a set of services and creates profiles of devices according to software and hardwareinformation. ThisprofileisthencomparedtoalistofaccepteddevicemodelsthathavepassedAndroidcompat- ibilitytesting. Googlerecommendsusingthefeatureas“anadditionalin-depthdefensesignalaspartofananti-abuse system”. How exactly SafetyNet works is not well documented and may change at any time. When you call this API, SafetyNet downloadsabinarypackagecontainingthedevicevalidationcodeprovidedfromGoogle,andthecodeisthendynamically executedviareflection. AnanalysisbyJohnKozyrakisshowedthatSafetyNetalsoattemptstodetectwhetherthedevice isrooted,butexactlyhowthat’sdeterminedisunclear. To use the API, an app may call the SafetyNetApi.attest method (which returns a JWS message with the Attestation Result)andthencheckthefollowingfields: • ctsProfileMatch: If‘true’,thedeviceprofilematchesoneofGoogle’slisteddevices. • basicIntegrity: If‘true’,thedevicerunningtheapplikelyhasn’tbeentamperedwith. • nonces: Tomatchtheresponsetoitsrequest. • timestampMs: Tocheckhowmuchtimehaspassedsinceyoumadetherequestandyougottheresponse. Adelayed responsemaysuggestsuspiciousactivity. • apkPackageName,apkCertificateDigestSha256,apkDigestSha256: ProvideinformationabouttheAPK,whichis usedtoverifytheidentityofthecallingapp. TheseparametersareabsentiftheAPIcannotreliablydeterminethe APKinformation. 301\\nThefollowingisasampleattestationresult: { \"nonce\":\"R2Rra24fVm5xa2Mg\", \"timestampMs\":9860437986543, \"apkPackageName\":\"com.package.name.of.requesting.app\", \"apkCertificateDigestSha256\":[\"base64encoded,SHA-256hashofthe certificateusedtosignrequestingapp\"], \"apkDigestSha256\":\"base64encoded,SHA-256hashoftheapp'sAPK\", \"ctsProfileMatch\":true, \"basicIntegrity\":true, } ctsProfileMatch Vs basicIntegrity TheSafetyNetAttestationAPIinitiallyprovidedasinglevaluecalledbasicIntegritytohelpdevelopersdeterminethe integrityofadevice. AstheAPIevolved,Googleintroducedanew,strictercheckwhoseresultsappearinavaluecalled ctsProfileMatch,whichallowsdeveloperstomorefinelyevaluatethedevicesonwhichtheirappisrunning. In broad terms, basicIntegrity gives you a signal about the general integrity of the device and its API. Many Rooted devicesfailbasicIntegrity,asdoemulators,virtualdevices,anddeviceswithsignsoftampering,suchasAPIhooks. On the other hand, ctsProfileMatch gives you a much stricter signal about the compatibility of the device. Only un- modifieddevicesthathavebeencertifiedbyGooglecanpassctsProfileMatch. DevicesthatwillfailctsProfileMatch includethefollowing: • DevicesthatfailbasicIntegrity • Deviceswithanunlockedbootloader • Deviceswithacustomsystemimage(customROM) • Devicesforwhichthemanufacturerdidn’tapplyfor,orpass,Googlecertification • DeviceswithasystemimagebuiltdirectlyfromtheAndroidOpenSourceProgramsourcefiles • Devices with a system image distributed as part of a beta or developer preview program (including the Android BetaProgram) Recommendations when using SafetyNetApi.attest • Createalarge(16bytesorlonger)randomnumberonyourserverusingacryptographically-securerandomfunction sothatamalicioususercannotreuseasuccessfulattestationresultinplaceofanunsuccessfulresult • TrustAPKinformation(apkPackageName,apkCertificateDigestSha256andapkDigestSha256)onlyifthevalueof ctsProfileMatchistrue. • The entire JWS response should be sent to your server, using a secure connection, for verification. It isn’t rec- ommended to perform the verification directly in the app because, in that case, there is no guarantee that the verificationlogicitselfhasn’tbeenmodified. • TheverifymethodonlyvalidatesthattheJWSmessagewassignedbySafetyNet. Itdoesn’tverifythatthepayload oftheverdictmatchesyourexpectations. Asusefulasthisservicemayseem,itisdesignedfortestpurposesonly, andithasverystrictusagequotasof10,000requestsperday,perprojectwhichwillnotbeincreaseduponrequest. Hence, you should refer SafetyNet Verification Samples and implement the digital signature verification logic on yourserverinawaythatitdoesn’tdependonGoogle’sservers. • The SafetyNet AttestationAPI gives you a snapshot of the state of a device at the moment when the attestation requestwasmade. Asuccessfulattestationdoesn’tnecessarilymeanthatthedevicewouldhavepassedattestation inthepast,orthatitwillinthefuture. It’srecommendedtoplanastrategytousetheleastamountofattestations requiredtosatisfytheusecase. • TopreventinadvertentlyreachingyourSafetyNetApi.attestquotaandgettingattestationerrors,youshouldbuild a system that monitors your usage of the API and warns you well before you reach your quota so you can get it increased. You should also be prepared to handle attestation failures because of an exceeded quota and avoid blockingallyourusersinthissituation. Ifyouareclosetoreachingyourquota,orexpectashort-termspikethat mayleadyoutoexceedyourquota,youcansubmitthisformtorequestshortorlong-termincreasestothequota foryourAPIkey. Thisprocess,aswellastheadditionalquota,isfreeofcharge. Followthischecklisttoensurethatyou’vecompletedeachofthestepsneededtointegratetheSafetyNetApi.attest APIintotheapp. Programmatic Detection 302\\nFile existence checks Perhapsthemostwidelyusedmethodofprogrammaticdetectionischeckingforfilestypicallyfoundonrooteddevices, suchaspackagefilesofcommonrootingappsandtheirassociatedfilesanddirectories,includingthefollowing: /system/app/Superuser.apk /system/etc/init.d/99SuperSUDaemon /dev/com.koushikdutta.superuser.daemon/ /system/xbin/daemonsu Detection code also often looks for binaries that are usually installed once a device has been rooted. These searches includecheckingforbusyboxandattemptingtoopenthesubinaryatdifferentlocations: /sbin/su /system/bin/su /system/bin/failsafe/su /system/xbin/su /system/xbin/busybox /system/sd/xbin/su /data/local/su /data/local/xbin/su /data/local/bin/su CheckingwhethersuisonthePATHalsoworks: public static boolean checkRoot(){ for(StringpathDir :System.getenv(\"PATH\").split(\":\")){ if(newFile(pathDir,\"su\").exists()){ return true; } } return false; } FilecheckscanbeeasilyimplementedinbothJavaandnativecode. ThefollowingJNIexample(adaptedfromrootinspec- tor)usesthestatsystemcalltoretrieveinformationaboutafileandreturns“1”ifthefileexists. jbooleanJava_com_example_statfile(JNIEnv *env,jobjectthis,jstringfilepath){ jbooleanfileExists =0; jbooleanisCopy; const char *path =(*env)->GetStringUTFChars(env,filepath,&isCopy); struct statfileattrib; if(stat(path,&fileattrib)<0){ __android_log_print(ANDROID_LOG_DEBUG,DEBUG_TAG,\"NATIVE:staterror:[%s]\",strerror(errno)); }else { __android_log_print(ANDROID_LOG_DEBUG,DEBUG_TAG,\"NATIVE:statsuccess,accessperms:[%d]\",fileattrib.st_mode); return 1; } return",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 112
  },
  "embedding": [
    -0.09916214644908905,
    0.005031893961131573,
    -0.002890974748879671,
    -0.018019070848822594,
    0.0237122755497694,
    -0.06830784678459167,
    -0.015551436692476273,
    0.03409160301089287,
    -0.0870794951915741,
    -0.027732785791158676,
    0.08424552530050278,
    -0.0031664581038057804,
    0.010770369321107864,
    -0.07553176581859589,
    -0.06503333151340485,
    -0.03820232301950455,
    0.07852764427661896,
    0.018486306071281433,
    -0.04696912690997124,
    0.062421947717666626,
    0.016589708626270294,
    -0.04222842678427696,
    -0.049755193293094635,
    0.014126677066087723,
    0.00625112047418952,
    -0.02930769883096218,
    0.006766223348677158,
    0.019672315567731857,
    -0.01949950121343136,
    -0.03187261149287224,
    -0.01767680048942566,
    0.038088247179985046,
    -0.016667786985635757,
    0.026232196018099785,
    0.01416186522692442,
    -0.002935395808890462,
    0.012463804334402084,
    -0.025688380002975464,
    -0.0017077891388908029,
    -0.07893070578575134,
    -0.11624220758676529,
    -0.005388131830841303,
    -0.061233825981616974,
    0.05935141444206238,
    -0.018476005643606186,
    -0.032967668026685715,
    -0.04675021767616272,
    -0.040838323533535004,
    -0.044066231697797775,
    0.011295058764517307,
    0.054181504994630814,
    0.07439756393432617,
    0.04835217818617821,
    0.03492928296327591,
    -0.031435687094926834,
    -0.009509976953268051,
    0.057439837604761124,
    0.028368385508656502,
    0.0043348525650799274,
    0.10208751261234283,
    0.052572935819625854,
    0.01310200896114111,
    -0.05288131535053253,
    0.020747773349285126,
    -0.006108981557190418,
    0.04102571681141853,
    0.008352908305823803,
    -0.07685106992721558,
    0.07155296206474304,
    0.025175515562295914,
    -0.07716868072748184,
    -0.06841651350259781,
    -0.017694827169179916,
    0.031139487400650978,
    0.0493997298181057,
    0.06933940947055817,
    -0.04679130017757416,
    0.02987835742533207,
    -0.03037331998348236,
    -0.13941392302513123,
    0.05661669373512268,
    0.0470489040017128,
    0.023951636627316475,
    0.08792410790920258,
    0.045846786350011826,
    0.04080437868833542,
    -0.02467922680079937,
    0.048894256353378296,
    0.10609815269708633,
    0.062007129192352295,
    -0.0014428748982027173,
    0.002994622802361846,
    0.09130772948265076,
    -0.02690218575298786,
    0.09339208900928497,
    -0.0334303192794323,
    -0.003215020289644599,
    -0.08744022250175476,
    -0.07440292090177536,
    0.04421559348702431,
    -0.030963066965341568,
    -0.028624044731259346,
    0.0016291937790811062,
    -0.06870114803314209,
    0.05719489976763725,
    -0.061992064118385315,
    -0.0013331137597560883,
    -0.02547723427414894,
    0.009797890670597553,
    -0.010557679459452629,
    0.011697599664330482,
    0.027411438524723053,
    0.04360809177160263,
    -0.016200611367821693,
    0.0871884748339653,
    0.011993622407317162,
    -0.06369958817958832,
    0.07159949839115143,
    0.06805223226547241,
    -0.05942781642079353,
    0.026593046262860298,
    -0.008172689937055111,
    0.0722229927778244,
    -0.10664960741996765,
    0.03182501345872879,
    -0.026690823957324028,
    -0.019551336765289307,
    1.866767460647144e-32,
    0.0009033602545969188,
    0.017774488776922226,
    -0.06701061129570007,
    0.024774830788373947,
    0.0034968163818120956,
    0.0005473526543937624,
    0.09998267143964767,
    0.10559285432100296,
    -0.037018418312072754,
    -0.014474072493612766,
    0.021730585023760796,
    0.08556768298149109,
    -0.03920825943350792,
    0.01722678728401661,
    0.055690862238407135,
    0.03348176181316376,
    -0.062234602868556976,
    0.06706922501325607,
    -0.06120773032307625,
    -0.005188481416553259,
    0.03231799602508545,
    -0.09779942035675049,
    -0.005654750391840935,
    -0.04361340403556824,
    0.03964279964566231,
    0.01763284020125866,
    -0.03386243060231209,
    0.010235623456537724,
    0.020301463082432747,
    0.05947834625840187,
    -0.08385096490383148,
    -0.016220740973949432,
    -0.02242056466639042,
    -0.06682103872299194,
    0.011969532817602158,
    -0.004133988171815872,
    -0.048194706439971924,
    -0.12884338200092316,
    -0.013216901570558548,
    0.0027833455242216587,
    -0.033938050270080566,
    -0.04291047900915146,
    -0.05994792282581329,
    -0.1049439013004303,
    0.017817329615354538,
    -0.07943393290042877,
    -0.0335882194340229,
    -0.03432231768965721,
    0.00681567145511508,
    -0.006430690176784992,
    -0.024603167548775673,
    0.03206372261047363,
    0.0853452980518341,
    -0.1133185476064682,
    -0.12363225966691971,
    -0.03265191987156868,
    0.031686294823884964,
    -0.01511843129992485,
    0.0855209231376648,
    0.11135324835777283,
    -0.019909488037228584,
    0.06661099940538406,
    -0.03756207227706909,
    -0.056667257100343704,
    -0.07070785015821457,
    -0.012628264725208282,
    0.06772824376821518,
    -0.1255977898836136,
    -0.036287277936935425,
    -0.05358891189098358,
    -0.05933292582631111,
    -0.051409050822257996,
    -0.02166599966585636,
    -0.028907891362905502,
    -0.03603840246796608,
    0.01279325783252716,
    0.00767891900613904,
    0.055091243237257004,
    -0.0014743177453055978,
    -0.06339255720376968,
    0.022982388734817505,
    0.03208867833018303,
    0.027439922094345093,
    -0.03996417298913002,
    0.002846786519512534,
    -0.04786832258105278,
    -0.053842633962631226,
    -0.14527186751365662,
    -0.08432748168706894,
    0.08730103820562363,
    0.05513078346848488,
    -0.019687293097376823,
    -0.043769676238298416,
    0.06078122556209564,
    0.024773409590125084,
    -1.888054193972597e-32,
    -0.07083451002836227,
    -0.06521817296743393,
    -0.07812240719795227,
    -0.009701780043542385,
    -0.07660625874996185,
    -0.09078915417194366,
    -0.07027032226324081,
    0.040061626583337784,
    0.049714554101228714,
    -0.04091597720980644,
    0.006629361305385828,
    0.03738009184598923,
    -0.027836043387651443,
    -0.08597070723772049,
    0.05848617106676102,
    0.028021806851029396,
    -0.022895973175764084,
    -0.027229687198996544,
    0.011867274530231953,
    0.044971633702516556,
    0.019896125420928,
    0.0840395838022232,
    0.046441901475191116,
    0.04249248653650284,
    -0.006398227997124195,
    0.012919752858579159,
    0.02789446711540222,
    0.03495090454816818,
    0.0788409560918808,
    -0.04657146334648132,
    0.06769554316997528,
    0.01950790546834469,
    -0.048272375017404556,
    0.02573247253894806,
    -0.0036256732419133186,
    -0.01925126649439335,
    0.002796374959871173,
    -0.02173807844519615,
    -0.021701473742723465,
    -0.06009224057197571,
    0.14284059405326843,
    0.041113726794719696,
    -0.01887045055627823,
    0.00032532520708628,
    0.0023761261254549026,
    -0.017670070752501488,
    -0.02088788151741028,
    -0.07564996182918549,
    0.0831931084394455,
    -0.02740965038537979,
    0.11352485418319702,
    -0.010952796787023544,
    0.05701699107885361,
    0.06765294820070267,
    0.0003723618865478784,
    0.036098185926675797,
    0.11368484795093536,
    -0.05621781945228577,
    0.013539586216211319,
    0.04921619966626167,
    0.05621062219142914,
    -0.02540346421301365,
    0.08817517012357712,
    -0.028577420860528946,
    -0.03545355424284935,
    0.032046008855104446,
    0.008720258250832558,
    0.020863497629761696,
    -0.04262852296233177,
    0.012877647764980793,
    0.025440525263547897,
    -0.02142268233001232,
    -0.02484305575489998,
    -0.06969456374645233,
    0.034243177622556686,
    -0.0043968018144369125,
    -0.01356824766844511,
    -0.07346336543560028,
    -0.13236771523952484,
    -0.04313905909657478,
    -0.01695275865495205,
    -0.02730054408311844,
    -0.019365929067134857,
    0.007921588607132435,
    -0.010660250671207905,
    -0.07725212723016739,
    -0.048553548753261566,
    0.06579545140266418,
    0.012520018965005875,
    0.004109770059585571,
    -0.0928599014878273,
    -0.025954056531190872,
    -0.06386253982782364,
    0.09040521085262299,
    0.05162011831998825,
    -6.763815463273204e-08,
    -0.018877560272812843,
    -0.029355106875300407,
    0.06434259563684464,
    -0.011974655091762543,
    -0.030894702300429344,
    0.034494683146476746,
    -0.007822742685675621,
    -0.01512004341930151,
    -0.004426755476742983,
    -0.07589062303304672,
    0.005503656808286905,
    -0.041935984045267105,
    -0.041082125157117844,
    0.04645844176411629,
    -0.025705700740218163,
    0.03803081810474396,
    -0.039512474089860916,
    0.024655994027853012,
    -0.05578339844942093,
    0.001849731313996017,
    -0.009898844175040722,
    -0.0651489719748497,
    0.014594350010156631,
    0.008526971563696861,
    -0.006066220812499523,
    0.012506126426160336,
    0.06077898293733597,
    0.053030408918857574,
    0.03293496370315552,
    -0.01595882885158062,
    -0.05366723611950874,
    0.0223106537014246,
    0.05171743780374527,
    0.056896187365055084,
    -0.06772728264331818,
    0.07723817229270935,
    -0.024222752079367638,
    -0.007397242356091738,
    0.03633110225200653,
    0.03752177208662033,
    -0.021725904196500778,
    0.050921641290187836,
    -0.0560961589217186,
    0.06639812886714935,
    0.018298812210559845,
    -0.041379932314157486,
    -0.04137694090604782,
    -0.019520770758390427,
    -0.013190423138439655,
    -0.015304094180464745,
    -0.04381219670176506,
    -0.025014100596308708,
    -0.02894483134150505,
    0.06316784024238586,
    -0.014096040278673172,
    0.02795718051493168,
    0.005308858118951321,
    -0.0400691032409668,
    0.025172822177410126,
    0.11457258462905884,
    0.025431644171476364,
    0.01307761762291193,
    0.12128756195306778,
    0.011284231208264828
  ]
}