{
  "text": "ThankstoApple’sconfusingprovisioningandcode-signingsystem,re-signinganappismorechallengingthanyouwould expect. iOSwon’trunanappunlessyougettheprovisioningprofileandcodesignatureheaderexactlyright. Thisrequires learningmanyconcepts-certificatetypes,BundleIDs,applicationIDs,teamidentifiers,andhowApple’sbuildtoolsconnect them. GettingtheOStorunabinarythathasn’tbeenbuiltviathedefaultmethod(Xcode)canbeadauntingprocess. We’lluseoptool,Apple’sbuildtools,andsomeshellcommands. OurmethodisinspiredbyVincentTan’sSwizzlerproject. TheNCCgrouphasdescribedanalternativerepackagingmethod. Toreproducethestepslistedbelow,downloadUnCrackableiOSAppLevel1fromtheOWASPMobileTestingGuiderepos- itory. Our goal is to make the UnCrackable app load FridaGadget.dylib during startup so we can instrument the app withFrida. PleasenotethatthefollowingstepsapplytomacOSonly,asXcodeisonlyavailableformacOS. Getting a Developer Provisioning Profile and Certificate TheprovisioningprofileisaplistfilesignedbyApple,whichaddsyourcode-signingcertificatetoitslistofacceptedcertifi- catesononeormoredevices. Inotherwords,thisrepresentsAppleexplicitlyallowingyourapptorunforcertainreasons, such as debugging on selected devices (development profile). The provisioning profile also includes the entitlements grantedtoyourapp. Thecertificatecontainstheprivatekeyyou’llusetosign. Dependingonwhetheryou’reregisteredasaniOSdeveloper,youcanobtainacertificateandprovisioningprofileinone ofthefollowingways: WithaniOSdeveloperaccount: Ifyou’vedevelopedanddeployediOSappswithXcodebefore,youalreadyhaveyourowncode-signingcertificateinstalled. Usethesecuritycommand(macOSonly)tolistyoursigningidentities: $securityfind-identity -v 1)61FA3547E0AF42A11E233F6A2B255E6B6AF262CE \"iPhoneDistribution:CompanyNameLtd.\" 2)8004380F331DCA22CC1B47FB1A805890AE41C938 \"iPhoneDeveloper:BernhardMüller(RV852WND79)\" LogintotheAppleDeveloperportaltoissueanewAppID,thenissueanddownloadtheprofile. AnAppIDisatwo-part string: aTeamIDsuppliedbyAppleandabundleIDsearchstringthatyoucansettoanarbitraryvalue, suchascom. example.myapp. Note that you can use a single App ID to re-sign multiple apps. Make sure you create adevelopment profileandnotadistributionprofilesothatyoucandebugtheapp. Intheexamplesbelow,Iusemysigningidentity,whichisassociatedwithmycompany’sdevelopmentteam. Icreated theAppID“sg.vp.repackaged”andtheprovisioningprofile“AwesomeRepackaging”fortheseexamples. Iendedupwith thefileAwesomeRepackaging.mobileprovision-replacethiswithyourownfilenameintheshellcommandsbelow. WithaRegularAppleID: Applewillissueafreedevelopmentprovisioningprofileevenifyou’renotapayingdeveloper. Youcanobtaintheprofile viaXcodeandyourregularAppleaccount: simplycreateanemptyiOSprojectandextractembedded.mobileprovision from the app container, which is in the Xcode subdirectory of your home directory: ~/Library/Developer/Xcode/ DerivedData/<ProjectName>/Build/Products/Debug-iphoneos/<ProjectName>.app/. TheNCCblogpost“iOSinstru- mentationwithoutjailbreak”explainsthisprocessingreatdetail. Once you’ve obtained the provisioning profile, you can check its contents with the security command. You’ll find the entitlementsgrantedtotheappintheprofile,alongwiththeallowedcertificatesanddevices. You’llneedtheseforcode- signing,soextractthemtoaseparateplistfileasshownbelow. Havealookatthefilecontentstomakesureeverything isasexpected. $securitycms -D-iAwesomeRepackaging.mobileprovision >profile.plist $/usr/libexec/PlistBuddy -x-c'Print:Entitlements' profile.plist >entitlements.plist $catentitlements.plist <?xmlversion=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPEplistPUBLIC \"-//Apple//DTDPLIST1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"> <plist version=\"1.0\"> <dict> <key>application-identifier</key> 338\\n<string>LRUD9L355Y.sg.vantagepoint.repackage</string> <key>com.apple.developer.team-identifier</key> <string>LRUD9L355Y</string> <key>get-task-allow</key> <true/> <key>keychain-access-groups</key> <array> <string>LRUD9L355Y.*</string> </array> </dict> </plist> Notetheapplicationidentifier,whichisacombinationoftheTeamID(LRUD9L355Y)andBundleID(sg.vantagepoint.repackage). ThisprovisioningprofileisonlyvalidfortheappthathasthisAppID.Theget-task-allowkeyisalsoimportant: when settotrue,otherprocesses,suchasthedebuggingserver,areallowedtoattachtotheapp(consequently,thiswould besettofalseinadistributionprofile). Method Hooking Platform: ios Frida Insection“ExecutionTracing”we’veusedfrida-tracewhennavigatingtoawebsiteinSafariandfoundthattheinitWith- URL:methodiscalledtoinitializeanewURLrequestobject. WecanlookupthedeclarationofthismethodontheApple DeveloperWebsite: -(instancetype)initWithURL:(NSURL *)url; UsingthisinformationwecanwriteaFridascriptthatinterceptstheinitWithURL:methodandprintstheURLpassedto themethod. Thefullscriptisbelow. Makesureyoureadthecodeandinlinecommentstounderstandwhat’sgoingon. importsys importfrida ##JavaScripttobeinjected frida_code =\"\"\" //ObtainareferencetotheinitWithURL:methodoftheNSURLRequestclass varURL=ObjC.classes.NSURLRequest[\"-initWithURL:\"]; //Interceptthemethod Interceptor.attach(URL.implementation,{ onEnter:function(args){ //GetahandleonNSString varNSString=ObjC.classes.NSString; //ObtainareferencetotheNSLogfunction,anduseittoprinttheURLvalue //args[2]referstothefirstmethodargument(NSURL*url) varNSLog=newNativeFunction(Module.findExportByName('Foundation','NSLog'),'void',['pointer','...']); //WeshouldalwaysinitializeanautoreleasepoolbeforeinteractingwithObjective-CAPIs varpool=ObjC.classes.NSAutoreleasePool.alloc().init(); try{ //CreatesaJSbindinggivenaNativePointer. varmyNSURL=newObjC.Object(args[2]); //CreateanimmutableObjCstringobjectfromaJSstringobject. varstr_url=NSString.stringWithString_(myNSURL.toString()); //CalltheiOSNSLogfunctiontoprinttheURLtotheiOSdevicelogs NSLog(str_url); //UseFrida'sconsole.logtoprinttheURLtoyourterminal console.log(str_url); }finally{ pool.release(); } } }); \"\"\" 339\\nprocess =frida.get_usb_device().attach(\"Safari\") script =process.create_script(frida_code) script.load() sys.stdin.read() StartSafariontheiOSdevice. RuntheabovePythonscriptonyourconnectedhostandopenthedevicelog(asexplained inthesection“MonitoringSystemLogs”fromthechapter“iOSBasicSecurityTesting”). TryopeninganewURLinSafari, e.g.https://github.com/OWASP/owasp-mastg;youshouldseeFrida’soutputinthelogsaswellasinyourterminal. Of course, this example illustrates only one of the things you can do with Frida. To unlock the tool’s full potential, you should learn to use its JavaScript API. The documentation section of the Frida website has a tutorial and examples for usingFridaoniOS. Getting Loaded Classes and Methods dynamically Platform: ios IntheFridaREPLObjective-CruntimetheObjCcommandcanbeusedtoaccessinformationwithintherunningapp. Within theObjCcommandthefunctionenumerateLoadedClassesliststheloadedclassesforagivenapplication. $frida -U-fcom.iOweApp [iPhone::com.iOweApp]->ObjC.enumerateLoadedClasses() { \"/System/Library/Frameworks/CoreFoundation.framework/CoreFoundation\":[ \"__NSBlockVariable__\", \"__NSGlobalBlock__\", \"__NSFinalizingBlock__\", \"__NSAutoBlock__\", \"__NSMallocBlock__\", \"__NSStackBlock__\" ], \"/private/var/containers/Bundle/Application/F390A491-3524-40EA-B3F8-6C1FA105A23A/iOweApp.app/iOweApp\":[ \"JailbreakDetection\", \"CriticalLogic\", \"ViewController\", \"AppDelegate\" ] } UsingObjC.classes.<classname>.$ownMethodsthemethodsdeclaredineachclasscanbelisted. [iPhone::com.iOweApp]->ObjC.classes.JailbreakDetection.$ownMethods [ \"+isJailbroken\" ] [iPhone::com.iOweApp]->ObjC.classes.CriticalLogic.$ownMethods [ \"+doSha256:\", \"-a:\", \"-AES128Operation:data:key:iv:\", 340\\n\"-coreLogic\", \"-bat\", \"-b:\", \"-hexString:\" ] Sandbox Inspection Platform: ios On iOS, each application gets a sandboxed folder to store its data. As per the iOS security model, an application’s sandboxed folder cannot be accessed by another application. Additionally, the users do not have direct access to the iOSfilesystem,thuspreventingbrowsingorextractionofdatafromthefilesystem. IniOS<8.3therewereapplications availablewhichcanbeusedtobrowsethedevice’sfilesystem,suchasiExplorerandiFunBox,butintherecentversionof iOS(>8.3)thesandboxingrulesaremorestringentandtheseapplicationsdonotworkanymore. Asaresult,ifyouneed toaccessthefilesystemitcanonlybeaccessedonajailbrokendevice. Aspartofthejailbreakingprocess,theapplication sandboxprotectionisdisabledandthusenablinganeasyaccesstosandboxedfolders. Thecontentsofanapplication’ssandboxedfolderhasalreadybeendiscussedin“AccessingAppDataDirectories”inthe chapteriOSBasicSecurityTesting. Thischaptergivesanoverviewofthefolderstructureandwhichdirectoriesyoushould analyze. Information Gathering - API Usage Platform: ios TheiOSplatformprovidesmanybuilt-inlibrariesforfrequentlyusedfunctionalitiesinapplications,forexamplecryptog- raphy,Bluetooth,NFC,networkandlocationlibraries. Determiningthepresenceoftheselibrariesinanapplicationcan giveusvaluableinformationaboutitsunderlyingworking. For instance, if an application is importing the CC_SHA256 function, it indicates that the application will be performing somekindofhashingoperationusingtheSHA256algorithm. FurtherinformationonhowtoanalyzeiOS’scryptographic APIsisdiscussedinthesection“iOSCryptographicAPIs”. Similarly,theaboveapproachcanbeusedtodeterminewhereandhowanapplicationisusingBluetooth. Forinstance,an applicationperformingcommunicationusingtheBluetoothchannelmustusefunctionsfromtheCoreBluetoothframework suchasCBCentralManagerorconnect. UsingtheiOSBluetoothdocumentationyoucandeterminethecriticalfunctions andstartanalysisaroundthosefunctionimports. Emulation-based Analysis Platform: ios iOS Simulator Apple provides a simulator app within Xcode which provides a real iOS device looking user interface for iPhone, iPad or Apple Watch. It allows you to rapidly prototype and test debug builds of your applications during the development process,butactuallyitisnotanemulator. Differencebetweenasimulatorandanemulatorispreviouslydiscussedin “Emulation-basedDynamicAnalysis”section. Whiledevelopinganddebugginganapplication,theXcodetoolchaingeneratesx86code,whichcanbeexecutedinthe iOS simulator. However, for a release build, only ARM code is generated (incompatible with the iOS simulator). That’s why applications downloaded from the Apple App Store cannot be used for any kind of application analysis",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 123
  },
  "embedding": [
    -0.049021124839782715,
    -0.010271941311657429,
    -0.043543118983507156,
    -0.03769185394048691,
    -0.03735414519906044,
    -0.004810499958693981,
    0.04372919350862503,
    -0.0254770927131176,
    -0.06394053250551224,
    -0.016015300527215004,
    0.07018173485994339,
    -0.07173434644937515,
    0.02133898064494133,
    0.02978873811662197,
    0.022782443091273308,
    0.0061978790909051895,
    0.020662831142544746,
    -0.003126777010038495,
    -0.015014637261629105,
    0.054364532232284546,
    0.0595797523856163,
    -0.03364212065935135,
    0.015605650842189789,
    0.033367618918418884,
    0.04706096276640892,
    -0.042680881917476654,
    -0.0452524833381176,
    -0.00652574235573411,
    -0.040910787880420685,
    -0.02381792478263378,
    0.04932709410786629,
    0.03090791590511799,
    0.018459433689713478,
    0.04510502889752388,
    0.14152614772319794,
    -0.004886362235993147,
    0.05372120812535286,
    0.009779303334653378,
    -0.015621267259120941,
    -0.08707290887832642,
    -0.03926607966423035,
    -0.0030427868478000164,
    -0.06312295794487,
    0.131893128156662,
    -0.050941102206707,
    -0.021773580461740494,
    -0.04495515674352646,
    -0.00866386853158474,
    -0.020572837442159653,
    0.02884499914944172,
    0.038712795823812485,
    -0.014987824484705925,
    -0.011263376101851463,
    0.0869460180401802,
    0.009405999444425106,
    0.0383911058306694,
    0.011050406843423843,
    0.03847947344183922,
    0.05285143107175827,
    0.06677965819835663,
    0.026859315112233162,
    0.018166298046708107,
    0.0026291462127119303,
    0.015150402672588825,
    -0.055093251168727875,
    0.034153811633586884,
    -0.05358807370066643,
    -0.026380375027656555,
    -0.005772532895207405,
    -0.02793620526790619,
    0.026211857795715332,
    0.00630346080288291,
    0.03467658534646034,
    -0.017794301733374596,
    0.05001963675022125,
    0.0014631662052124739,
    0.0009888981003314257,
    0.04424566030502319,
    -0.016816141083836555,
    -0.13053956627845764,
    -0.036427345126867294,
    0.00937297660857439,
    -0.0037639823276549578,
    0.07360157370567322,
    -0.004059175960719585,
    0.017405780032277107,
    0.009123537689447403,
    -0.05136623606085777,
    0.0520339235663414,
    0.11329945176839828,
    -0.01172900665551424,
    0.016119573265314102,
    -0.013917999342083931,
    -0.06568141281604767,
    0.017676930874586105,
    -0.009039259515702724,
    0.028478240594267845,
    -0.057350043207407,
    -0.08288273215293884,
    0.03622895106673241,
    -0.03644295409321785,
    -0.02847757376730442,
    0.01906595751643181,
    -0.05391127988696098,
    0.03831183537840843,
    -0.03225947916507721,
    0.03275471180677414,
    -0.09471224993467331,
    -0.009165368042886257,
    0.016892271116375923,
    -0.011294834315776825,
    -0.0026599415577948093,
    0.004031286109238863,
    -0.011171869933605194,
    -0.0027553339023143053,
    0.059623029083013535,
    -0.09303785860538483,
    0.09812423586845398,
    0.05518105626106262,
    -0.058091357350349426,
    0.03506194055080414,
    0.013679632917046547,
    0.004856781102716923,
    -0.055364660918712616,
    -0.07572818547487259,
    -0.012717185541987419,
    0.026253513991832733,
    1.7500014925497383e-32,
    -0.0011746769305318594,
    0.026265999302268028,
    -0.08885176479816437,
    0.01955871284008026,
    0.03966125100851059,
    -0.10022402554750443,
    0.11638274043798447,
    0.10606566071510315,
    -0.04889242351055145,
    -0.017831746488809586,
    -0.016832072287797928,
    0.019436558708548546,
    -0.058857887983322144,
    -0.011879192665219307,
    0.013600177131593227,
    -0.05799778923392296,
    -0.04575399309396744,
    0.05967829376459122,
    -0.014040859416127205,
    0.07046116143465042,
    -0.012302964925765991,
    -0.05505325272679329,
    0.015684442594647408,
    -0.06667633354663849,
    -0.08301785588264465,
    0.025371117517352104,
    0.01568986475467682,
    0.022564182057976723,
    0.06880516558885574,
    0.040186863392591476,
    0.025039084255695343,
    0.021895894780755043,
    -0.03907912224531174,
    -0.007626058999449015,
    0.010837731882929802,
    -0.05780094116926193,
    0.07152149826288223,
    -0.010547485202550888,
    -0.033190518617630005,
    0.0016635128995403647,
    0.020590700209140778,
    -0.015617730095982552,
    -0.056459635496139526,
    -0.023423276841640472,
    0.05585966631770134,
    -0.046419885009527206,
    0.018377605825662613,
    -0.05983678251504898,
    0.07440061867237091,
    0.06403291970491409,
    -0.03613394871354103,
    -0.042151108384132385,
    -0.010033763945102692,
    -0.11028993129730225,
    -0.099263995885849,
    -0.058645837008953094,
    -0.025193536654114723,
    0.038020454347133636,
    -0.02745237946510315,
    -0.0378856360912323,
    -0.08393236994743347,
    0.002154137007892132,
    -0.0006360160186886787,
    -0.07783646881580353,
    0.02372518926858902,
    0.06550522893667221,
    0.0011279232567176223,
    -0.09138797223567963,
    -0.04335920885205269,
    -0.062346331775188446,
    -0.06881652772426605,
    -0.00253496365621686,
    0.023026157170534134,
    1.1852287570945919e-05,
    -0.04674537479877472,
    -0.0017738165333867073,
    0.032759975641965866,
    0.0909222885966301,
    0.010322212241590023,
    -0.04584050178527832,
    0.061608873307704926,
    0.05090489983558655,
    -0.01290737185627222,
    0.006138212513178587,
    -0.00833442434668541,
    0.04792723059654236,
    0.011045733466744423,
    -0.09175489842891693,
    -0.10932349413633347,
    0.104469433426857,
    -0.00923104491084814,
    0.03780648857355118,
    0.014435037039220333,
    0.0219439584761858,
    -0.055116523057222366,
    -1.6434493948666274e-32,
    0.04931626096367836,
    -0.08055803924798965,
    -0.03641374036669731,
    -0.0360175222158432,
    0.0334901288151741,
    -0.021706387400627136,
    -0.11330865323543549,
    0.07541593164205551,
    -0.012044113129377365,
    0.0067525082267820835,
    0.012932932935655117,
    -0.057489681988954544,
    -0.014294753782451153,
    -0.047030769288539886,
    -0.0318697914481163,
    -0.023840269073843956,
    -0.042243536561727524,
    0.02257734164595604,
    -0.033939480781555176,
    0.07336471229791641,
    -0.03126628324389458,
    0.11502730846405029,
    -0.01903887465596199,
    0.042034100741147995,
    -0.008509330451488495,
    0.0245068296790123,
    -0.015216370113193989,
    0.07104366272687912,
    0.08498473465442657,
    -0.03999660909175873,
    0.07233955711126328,
    -0.009263498708605766,
    -0.11087634414434433,
    -0.032493747770786285,
    -0.03330402076244354,
    -0.013026327826082706,
    -0.028039922937750816,
    0.04037102311849594,
    -0.02424822747707367,
    0.06553249806165695,
    0.07787148654460907,
    -0.045637231320142746,
    -0.08707886189222336,
    0.008902017027139664,
    0.09156962484121323,
    -0.011724099516868591,
    0.051797423511743546,
    -0.050358306616544724,
    0.03192286565899849,
    0.0641736388206482,
    0.10679984092712402,
    0.0011404420947656035,
    -0.04265626519918442,
    0.023439912125468254,
    -0.006087598390877247,
    0.12309233099222183,
    0.10110967606306076,
    -0.06331992894411087,
    0.016074473038315773,
    -0.055689528584480286,
    0.06802709400653839,
    -0.02380615845322609,
    0.03976121172308922,
    -0.012217579409480095,
    0.0705619603395462,
    -0.02541709877550602,
    -0.007457575760781765,
    0.027256853878498077,
    -0.042452938854694366,
    0.059514109045267105,
    -0.0629853904247284,
    -0.1089516282081604,
    -0.02668704278767109,
    -0.11158492416143417,
    0.020220134407281876,
    -0.006626023445278406,
    -0.020833482965826988,
    -0.09119470417499542,
    -0.04559804126620293,
    0.02215941995382309,
    -0.03576144203543663,
    0.09285152703523636,
    -0.04008596017956734,
    0.026364140212535858,
    0.10839991271495819,
    -0.06875438988208771,
    0.05979938060045242,
    0.03839663416147232,
    0.003729860996827483,
    0.07980567216873169,
    -0.025150395929813385,
    0.01784680038690567,
    0.03863495588302612,
    0.0448317788541317,
    -0.013403698801994324,
    -6.390856555071878e-08,
    -0.002037233207374811,
    -0.029414841905236244,
    -0.07598444074392319,
    -0.025089552626013756,
    0.0961865559220314,
    0.021517237648367882,
    -0.03254924714565277,
    -0.017696749418973923,
    0.008696620352566242,
    -0.09247740358114243,
    -0.0569995753467083,
    0.001799828140065074,
    -0.15418866276741028,
    0.02770102210342884,
    0.0014145508175715804,
    -0.046212177723646164,
    -0.02885904721915722,
    -0.0017326590605080128,
    -0.047753509134054184,
    -0.05384499207139015,
    -0.06352730840444565,
    -0.052951034158468246,
    -0.05152329429984093,
    -0.009039312601089478,
    -0.029160011559724808,
    0.009594133123755455,
    0.10375700145959854,
    0.06448179483413696,
    0.011290953494608402,
    0.04318603128194809,
    -0.06983313709497452,
    -0.0031391947995871305,
    0.007908773608505726,
    -0.05440320819616318,
    -0.008772619999945164,
    0.09756099432706833,
    0.014369240961968899,
    -0.048701461404561996,
    0.07371488958597183,
    0.034973304718732834,
    -0.0104214483872056,
    0.06944531947374344,
    0.025833729654550552,
    0.033609453588724136,
    0.0023392844013869762,
    0.009325291030108929,
    -0.04168739914894104,
    0.04549366235733032,
    0.004511164966970682,
    0.01047006156295538,
    -0.09373258054256439,
    -0.0801156535744667,
    -0.04885200783610344,
    0.0023490265011787415,
    -0.05476285144686699,
    0.08097634464502335,
    0.00951691996306181,
    -0.07048550993204117,
    0.01825770176947117,
    0.0886097103357315,
    0.12076906114816666,
    -0.015242802910506725,
    0.07457774132490158,
    0.0013190573081374168
  ]
}