{
  "text": "Java 3:00004e49 112FUNC GLOBALDEFAULT 11Java_sg_vantagepoint_helloworld_MainActivity_stringFromJNI Youcanalsoseethisusingradare2’srabin2: $rabin2 -sHelloWord-JNI/lib/armeabi-v7a/libnative-lib.so |grep -iJava 0030x00000e780x00000e78GLOBAL FUNC 16Java_sg_vantagepoint_helloworldjni_MainActivity_stringFromJNI ThisisthenativefunctionthateventuallygetsexecutedwhenthestringFromJNInativemethodiscalled. Todisassemblethecode,youcanloadlibnative-lib.sointoanydisassemblerthatunderstandsELFbinaries(i.e.,any disassembler). Iftheappshipswithbinariesfordifferentarchitectures,youcantheoreticallypickthearchitectureyou’re mostfamiliarwith,aslongasitiscompatiblewiththedisassembler. Eachversioniscompiledfromthesamesourceand implements the same functionality. However, if you’re planning to debug the library on a live device later, it’s usually wisetopickanARMbuild. To support both older and newer ARM processors, Android apps ship with multiple ARM builds compiled for different ApplicationBinaryInterface(ABI)versions. TheABIdefineshowtheapplication’smachinecodeissupposedtointeract withthesystematruntime. ThefollowingABIsaresupported: • armeabi: ABIisforARM-basedCPUsthatsupportatleasttheARMv5TEinstructionset. • armeabi-v7a: ThisABIextendsarmeabitoincludeseveralCPUinstructionsetextensions. • arm64-v8a: ABIforARMv8-basedCPUsthatsupportAArch64,thenew64-bitARMarchitecture. Mostdisassemblerscanhandleanyofthosearchitectures. Below,we’llbeviewingthearmeabi-v7aversion(locatedin HelloWord-JNI/lib/armeabi-v7a/libnative-lib.so)inradare2andinIDAPro. Seethesection“ReviewingDisassem- bledNativeCode”belowtolearnonhowtoproceedwheninspectingthedisassemblednativecode. radare2 Toopenthefileinradare2youonlyhavetorunr2-AHelloWord-JNI/lib/armeabi-v7a/libnative-lib.so. Thechapter “Android Basic Security Testing” already introduced radare2. Remember that you can use the flag -A to run the aaa commandrightafterloadingthebinaryinordertoanalyzeallreferencedcode. $r2 -AHelloWord-JNI/lib/armeabi-v7a/libnative-lib.so [x]Analyzeallflagsstartingwithsym.andentry0 (aa) [x]Analyzefunctioncalls (aac) [x]Analyzelenbytesofinstructionsforreferences (aar) [x]Checkforobjcreferences 176\\n[x]Checkforvtables [x]Findingxrefsinnoncodesectionwithanal.in=io.maps [x]Analyzevaluepointers (aav) [x]Valuefrom0x00000000to0x00001dcf (aav) [x]0x00000000-0x00001dcfin0x0-0x1dcf (aav) [x]Emulatecodetofindcomputedreferences (aae) [x]Typematchinganalysisforallfunctions (aaft) [x]Use -AAoraaaatoperformadditionalexperimentalanalysis. --Printthecontentsofthecurrentblockwiththe 'p'command [0x00000e3c]> Note that for bigger binaries, starting directly with the flag -A might be very time consuming as well as unnecessary. Dependingonyourpurpose,youmayopenthebinarywithoutthisoptionandthenapplyalesscomplexanalysislikeaa oramoreconcretetypeofanalysissuchastheonesofferedinaa(basicanalysisofallfunctions)oraac(analyzefunction calls). Remembertoalwaystype? togetthehelporattachittocommandstoseeevenmorecommandoroptions. For example,ifyouenteraa? you’llgetthefulllistofanalysiscommands. [0x00001760]>aa? Usage:aa[0*?] #seealso'af'and'afna' |aa aliasfor 'af@@sym.*;af@entry0;afva' |aaa[?] autonamefunctionsafteraa (seeafna) |aab abbacrossbin.sections.rx |aac[len] analyzefunctioncalls (af@@ `pilen~call[1]`) |aac* [len] flagfunctioncallswithoutperformingacompleteanalysis |aad[len] analyzedatareferencestocode |aae[len]([addr]) analyzereferenceswithESIL (optionallytoaddress) |aaf[e|t] analyzeallfunctions (eanal.hasnext=1;afr@@c:isq)(aafe=aef@@f) |aaF[sym*] setanal.in=blockforallthespacesbetweenflagsmatchingglob |aaFa [sym*] sameasaaFbutusesaf/a2finsteadofaf+/afb+ (slowerbutmoreaccurate) |aai[j] showinfoofallanalysisparameters |aan autonamefunctionsthateitherstartwithfcn.*orsym.func.* |aang findfunctionandsymbolnamesfromgolangbinaries |aao analyzeallobjcreferences |aap findandanalyzefunctionpreludes |aar[?][len] analyzelenbytesofinstructionsforreferences |aas[len] analyzesymbols (af@@= `isq~[0]`) |aaS analyzeallflagsstartingwithsym. (af@@sym.*) |aat[len] analyzeallconsecutivefunctionsinsection |aaT[len] analyzecodeaftertrap-sleds |aau[len] listmemareas (largerthanlenbytes)notcoveredbyfunctions |aav[sat] findvaluesreferencingaspecificsectionormap Thereisathingthatisworthnoticingaboutradare2vsotherdisassemblerslikee.g.IDAPro. Thefollowingquotefrom thisarticleofradare2’sblog(https://radareorg.github.io/blog/)offersagoodsummary. Codeanalysisisnotaquickoperation,andnotevenpredictableortakingalineartimetobeprocessed. Thismakes startingtimesprettyheavy,comparedtojustloadingtheheadersandstringsinformationlikeit’sdonebydefault. People that are used to IDA or Hopper just load the binary, go out to make a coffee and then when the analysis isdone, they startdoingthemanualanalysis tounderstandwhattheprogramis doing. It’s truethatthosetools performtheanalysisinbackground,andtheGUIisnotblocked. ButthistakesalotofCPUtime,andr2aimstorun inmanymoreplatformsthanjusthigh-enddesktopcomputers. Thissaid,pleaseseesection“ReviewingDisassembledNativeCode”tolearnmorebouthowradare2canhelpusperform- ingourreversingtasksmuchfaster. Forexample,gettingthedisassemblyofaspecificfunctionisatrivialtaskthatcan beperformedinonecommand. IDA Pro IfyouownanIDAProlicense,openthefileandonceinthe“Loadnewfile”dialog,choose“ELFforARM(SharedObject)” asthefiletype(IDAshoulddetectthisautomatically),and“ARMLittle-Endian”astheprocessortype. 177\\nThefreewareversionofIDAProunfortunatelydoesnotsupporttheARMprocessortype. Execution Tracing Platform: android Besides being useful for debugging, the jdb command line tool offers basic execution tracing functionality. To trace an apprightfromthestart,youcanpausetheappwiththeAndroid“WaitforDebugger”featureorakill -STOPcommand andattachjdbtosetadeferredmethodbreakpointonanyinitializationmethod. Oncethebreakpointisreached,activate methodtracingwiththetrace go methodscommandandresumeexecution. jdbwilldumpallmethodentriesandexits fromthatpointonwards. $adbforwardtcp:7777jdwp:7288 ${echo \"suspend\";cat;}|jdb-attach localhost:7777 Setuncaughtjava.lang.Throwable Setdeferreduncaughtjava.lang.Throwable Initializingjdb... >Allthreadssuspended. >stop incom.acme.bob.mobile.android.core.BobMobileApplication.<clinit>() Deferringbreakpointcom.acme.bob.mobile.android.core.BobMobileApplication.<clinit>(). Itwillbesetaftertheclassisloaded. >resume Allthreadsresumed.M Setdeferredbreakpointcom.acme.bob.mobile.android.core.BobMobileApplication.<clinit>() Breakpointhit: \"thread=main\",com.acme.bob.mobile.android.core.BobMobileApplication.<clinit>(),line=44 bci=0 main[1]tracegomethods main[1]resume Methodentered:Allthreadsresumed. The Dalvik Debug Monitor Server (DDMS) is a GUI tool included with Android Studio. It may not look like much, but its Javamethodtracerisoneofthemostawesometoolsyoucanhaveinyourarsenal,anditisindispensableforanalyzing obfuscatedbytecode. DDMS is somewhat confusing, however; it can be launched several ways, and different trace viewers will be launched depending on how a method was traced. There’s a standalone tool called “Traceview” as well as a built-in viewer in AndroidStudio,bothofwhichofferdifferentwaystonavigatethetrace. You’llusuallyuseAndroidstudio’sbuilt-inviewer, whichgivesyouazoomablehierarchicaltimelineofallmethodcalls. However,thestandalonetoolisalsouseful,ithasa profilepanelthatshowsthetimespentineachmethodalongwiththeparentsandchildrenofeachmethod. TorecordanexecutiontraceinAndroidStudio,opentheAndroidtabatthebottomoftheGUI.Selectthetargetprocess inthelistandclickthelittlestopwatchbuttonontheleft. Thisstartstherecording. Onceyou’redone,clickthesame buttontostoptherecording. Theintegratedtraceviewwillopenandshowtherecordedtrace. Youcanscrollandzoom thetimelineviewwiththemouseortrackpad. ExecutiontracescanalsoberecordedinthestandaloneAndroidDeviceMonitor. TheDeviceMonitorcanbestartedwithin AndroidStudio(Tools->Android->AndroidDeviceMonitor)orfromtheshellwiththeddmscommand. To start recording tracing information, select the target process in the Devices tab and click Start Method Profiling. Clickthestopbuttontostoprecording,afterwhichtheTraceviewtoolwillopenandshowtherecordedtrace. Clicking anyofthemethodsintheprofilepanelhighlightstheselectedmethodinthetimelinepanel. 178\\nDDMSalsooffersaconvenientheapdumpbuttonthatwilldumptheJavaheapofaprocesstoa.hproffile. TheAndroid StudiouserguidecontainsmoreinformationaboutTraceview. Tracing System Calls MovingdownalevelintheOShierarchy, youarriveatprivilegedfunctionsthatrequirethepowersoftheLinuxkernel. Thesefunctionsareavailabletonormalprocessesviathesystemcallinterface. Instrumentingandinterceptingcallsinto thekernelisaneffectivemethodforgettingaroughideaofwhatauserprocessisdoing, andoftenthemostefficient waytodeactivatelow-leveltamperingdefenses. Strace is a standard Linux utility that is not included with Android by default, but can be easily built from source via theAndroidNDK.Itmonitorstheinteractionbetweenprocessesandthekernel,beingaveryconvenientwaytomonitor systemcalls. However,there’sadownside: asstracedependsontheptracesystemcalltoattachtothetargetprocess, onceanti-debuggingmeasuresbecomeactiveitwillstopworking. Ifthe“Waitfordebugger”featureinSettings>Developeroptionsisunavailable,youcanuseashellscripttolaunch theprocessandimmediatelyattachstrace(notanelegantsolution,butitworks): while true;dopid=$(pgrep 'target_process' |head -1);if[[-n\"$pid\"]];then strace -s2000 -e\"!read\" -ff-p\"$pid\";break;fi;done Ftrace FtraceisatracingutilitybuiltdirectlyintotheLinuxkernel. Onarooteddevice,ftracecantracekernelsystemcallsmore transparentlythanstracecan(stracereliesontheptracesystemcalltoattachtothetargetprocess). Conveniently,thestockAndroidkernelonbothLollipopandMarshmallowincludeftracefunctionality. Thefeaturecanbe enabledwiththefollowingcommand: echo1 >/proc/sys/kernel/ftrace_enabled The /sys/kernel/debug/tracing directory holds all control and output files related to ftrace. The following files are foundinthisdirectory: • available_tracers: Thisfileliststheavailabletracerscompiledintothekernel. • current_tracer: Thisfilesetsordisplaysthecurrenttracer. • tracing_on: Echo “1”intothis filetoallow/start updateofthe",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 77
  },
  "embedding": [
    -0.027016213163733482,
    -0.052406035363674164,
    -0.004035223741084337,
    -0.07027029991149902,
    0.0018125480273738503,
    -0.060206204652786255,
    0.020750561729073524,
    0.027467746287584305,
    -0.07378623634576797,
    -0.0005883892881684005,
    0.04792238026857376,
    -0.08243097364902496,
    -0.008450623601675034,
    -0.026327282190322876,
    -0.004978829063475132,
    -0.020582253113389015,
    0.05714845657348633,
    -0.009368887171149254,
    -0.08824004232883453,
    0.0949607565999031,
    0.007187145762145519,
    -0.01006215438246727,
    -0.011563671752810478,
    -0.020986642688512802,
    0.05369342863559723,
    0.03291783854365349,
    -0.0009305158746428788,
    -0.011817199178040028,
    0.007468197960406542,
    -0.037990469485521317,
    0.028939396142959595,
    0.0689394623041153,
    0.027375446632504463,
    -0.0324854850769043,
    0.06823524087667465,
    0.11637712270021439,
    -0.08429399132728577,
    -0.07710057497024536,
    -0.06412229686975479,
    -0.09605105221271515,
    -0.03385620191693306,
    0.020189065486192703,
    -0.029458152130246162,
    0.05089235678315163,
    -0.03831479325890541,
    0.007424054201692343,
    -0.038777515292167664,
    -0.0437873937189579,
    0.007208334747701883,
    0.05497879907488823,
    -0.0524851456284523,
    0.041858039796352386,
    0.013272681273519993,
    -0.0015315554337576032,
    0.01215812936425209,
    0.05190742015838623,
    -0.08254215866327286,
    0.041260283440351486,
    0.026744002476334572,
    0.048483941704034805,
    0.027378924190998077,
    -0.036391790956258774,
    -0.04874008521437645,
    -0.012994716875255108,
    -0.025168882682919502,
    0.029193995520472527,
    0.07895201444625854,
    -0.06979765743017197,
    0.02240910567343235,
    -0.019813748076558113,
    -0.014514653943479061,
    0.051971398293972015,
    -0.05012204498052597,
    0.048886436969041824,
    -0.011689155362546444,
    0.050255466252565384,
    0.02572484500706196,
    0.005707853008061647,
    0.016045304015278816,
    -0.13517849147319794,
    -0.059547848999500275,
    -0.017367390915751457,
    0.027140546590089798,
    0.05544262379407883,
    0.07026273757219315,
    0.035523463040590286,
    -0.042234811931848526,
    0.00036353510222397745,
    0.03620043396949768,
    0.07437323778867722,
    0.019516771659255028,
    -0.014032277278602123,
    -0.006650945637375116,
    -0.05748375132679939,
    0.07423938810825348,
    0.03110671415925026,
    -0.009544850327074528,
    0.0042948336340487,
    -0.10078264772891998,
    0.07450012862682343,
    -0.0043057603761553764,
    0.0091549726203084,
    0.035107146948575974,
    0.05045903101563454,
    -0.004407161381095648,
    -0.03698094189167023,
    -0.039376165717840195,
    -0.014687136746942997,
    -0.055225618183612823,
    -0.013392256572842598,
    0.012201196514070034,
    -0.020723694935441017,
    0.08428501337766647,
    -0.07577113807201385,
    0.005000883713364601,
    0.0753435268998146,
    0.008631331846117973,
    0.0027850328478962183,
    0.06465976685285568,
    -0.004399213008582592,
    0.013938860967755318,
    0.010500254109501839,
    0.05098056048154831,
    -0.023317208513617516,
    -0.04065648093819618,
    -0.012461524456739426,
    -0.036158137023448944,
    1.9036522693240396e-32,
    -0.0019428019877523184,
    -0.054697562009096146,
    -0.030859457328915596,
    0.041591741144657135,
    -0.04977932944893837,
    -0.04325173422694206,
    -0.021640131250023842,
    0.10229367017745972,
    -0.06179855018854141,
    -0.03874053433537483,
    -0.01864316314458847,
    0.024011487141251564,
    0.04876957833766937,
    0.006387447007000446,
    0.08728212863206863,
    -0.03967369347810745,
    0.01377071812748909,
    0.014628109522163868,
    -0.12620502710342407,
    0.027197547256946564,
    0.015445505268871784,
    -0.07181008160114288,
    -0.02597714029252529,
    -0.013140596449375153,
    -0.08334774523973465,
    0.04874469339847565,
    0.05691172927618027,
    0.01576605811715126,
    0.01267929095774889,
    0.05016550049185753,
    -0.051153913140296936,
    -0.07086417824029922,
    -0.12897396087646484,
    -0.0014867981662973762,
    0.020014068111777306,
    -0.057870905846357346,
    -0.07839372754096985,
    -0.03168826177716255,
    -0.0515291802585125,
    -0.07871884107589722,
    -0.04083937779068947,
    -0.009275039657950401,
    -0.11631271243095398,
    -0.006073426455259323,
    0.10562605410814285,
    -0.09399796277284622,
    -0.03104986809194088,
    0.04566134139895439,
    -0.0432061143219471,
    0.04468558728694916,
    0.018763219937682152,
    0.05841061845421791,
    0.05017371475696564,
    -0.03177235648036003,
    -0.10174352675676346,
    0.01985241286456585,
    0.02023220993578434,
    0.09483525902032852,
    -0.012521612457931042,
    0.08803878724575043,
    0.018751701340079308,
    0.05071829631924629,
    -0.06304079294204712,
    0.03935499116778374,
    0.041352398693561554,
    0.07697386294603348,
    -0.09429042041301727,
    -0.10194014012813568,
    -0.0027262945659458637,
    -0.0012712670722976327,
    0.0025298858527094126,
    -0.03878551721572876,
    0.12140756100416183,
    0.07823528349399567,
    0.0014100706903263927,
    -0.008608044125139713,
    0.033215560019016266,
    0.026812409982085228,
    -0.02394356206059456,
    -0.09114357084035873,
    -0.0432882122695446,
    0.0634700283408165,
    0.017502017319202423,
    0.018704036250710487,
    -0.05255633592605591,
    -0.08054105192422867,
    0.019860513508319855,
    -0.1593407690525055,
    -0.06632455438375473,
    0.041707947850227356,
    0.028544511646032333,
    0.029457300901412964,
    -0.04876411333680153,
    -0.018536770716309547,
    -0.05535503104329109,
    -1.7804435636265708e-32,
    0.0520232692360878,
    0.010478444397449493,
    -0.02363639697432518,
    -0.0323503240942955,
    -0.04697106033563614,
    0.026569237932562828,
    -0.03660833463072777,
    -0.03993957117199898,
    -0.020647335797548294,
    -0.08036704361438751,
    0.06328132003545761,
    0.06013576313853264,
    0.0008938369574025273,
    -0.055376868695020676,
    0.03959198668599129,
    0.07083550840616226,
    0.04028988257050514,
    -0.03832415118813515,
    0.00442690122872591,
    0.054065972566604614,
    0.03593575954437256,
    0.16703084111213684,
    0.04384532570838928,
    0.03084050677716732,
    0.024960145354270935,
    -0.026091458275914192,
    0.07692677527666092,
    0.04909776523709297,
    0.03134545683860779,
    0.003776240162551403,
    0.04767533019185066,
    0.08406015485525131,
    -0.11102559417486191,
    0.015213985927402973,
    -0.010418642312288284,
    -0.03531118482351303,
    -0.017790913581848145,
    0.01801244355738163,
    -0.046703048050403595,
    0.010989048518240452,
    0.09602661430835724,
    0.012500704266130924,
    -0.029236923903226852,
    0.021937960758805275,
    0.008581635542213917,
    -0.061707548797130585,
    -0.04758249595761299,
    0.004714454524219036,
    0.013476351276040077,
    -0.06815344095230103,
    0.019027477130293846,
    -0.054799411445856094,
    0.026957882568240166,
    0.028871390968561172,
    -0.00989503599703312,
    0.11030804365873337,
    0.061246320605278015,
    -0.06234544888138771,
    0.04442837834358215,
    -0.036439452320337296,
    0.09257211536169052,
    0.002262743888422847,
    0.03174157440662384,
    -0.03586849197745323,
    0.08603537827730179,
    0.02913229912519455,
    -0.003982314374297857,
    0.03746206685900688,
    -0.04159143939614296,
    -0.0007519454811699688,
    -0.037362389266490936,
    -0.006150572560727596,
    -0.008701465092599392,
    -0.04123679921030998,
    0.04811268672347069,
    0.028524357825517654,
    0.04591229930520058,
    -0.04264019802212715,
    -0.03391702100634575,
    -0.05220991373062134,
    0.009736455045640469,
    0.01864231564104557,
    0.012481146492064,
    0.007152537349611521,
    0.019003599882125854,
    0.0008522917632944882,
    -0.07935476303100586,
    0.04167390614748001,
    -0.010516672395169735,
    -0.05162344127893448,
    -0.029418399557471275,
    0.029330501332879066,
    -0.045187778770923615,
    0.09154655784368515,
    0.005432752426713705,
    -6.931167462198573e-08,
    -0.02207712084054947,
    -0.06045694649219513,
    -0.05206206813454628,
    -0.02756338380277157,
    0.11946921795606613,
    0.03718778118491173,
    -0.09638876467943192,
    0.004000782035291195,
    -0.04703383520245552,
    -0.061008524149656296,
    0.015958333387970924,
    -0.021912235766649246,
    -0.09905289113521576,
    0.00018898981215897948,
    0.027257045730948448,
    -0.007797922473400831,
    -0.023476386442780495,
    0.02912905253469944,
    -0.09987736493349075,
    -0.04142279550433159,
    0.010906149633228779,
    -0.034877121448516846,
    0.02016579918563366,
    -0.029930904507637024,
    -0.05373140797019005,
    -0.022529149428009987,
    0.038349974900484085,
    0.017864972352981567,
    0.055341608822345734,
    -0.006230740342289209,
    0.0045201340690255165,
    0.04287681356072426,
    0.06697171181440353,
    -0.09404518455266953,
    -0.0532962903380394,
    0.08951880037784576,
    0.04238859936594963,
    0.015305676497519016,
    0.07646166533231735,
    0.016018997877836227,
    -0.015819571912288666,
    0.12762942910194397,
    -0.014806557446718216,
    0.07019313424825668,
    0.009440976195037365,
    -0.056415215134620667,
    0.008506248705089092,
    0.035067055374383926,
    0.04602646455168724,
    -0.012211845256388187,
    -0.06314357370138168,
    0.02840096317231655,
    -0.05203406512737274,
    0.020645461976528168,
    -0.1012197881937027,
    0.02643830142915249,
    -0.01817001961171627,
    -0.07709562033414841,
    -0.017284872010350227,
    0.06880834698677063,
    0.11609296500682831,
    -0.011245321482419968,
    -0.027398107573390007,
    -0.002203351352363825
  ]
}