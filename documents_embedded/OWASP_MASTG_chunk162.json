{
  "text": "returncompletion(.failure(.jsonError)) } returncompletion(.success(response)) } } } task.resume() } Testing Object Persistence Platform: ios MASVSV1: MSTG-PLATFORM-8 MASVSV2: MASVS-CODE-4 Overview Static Analysis Alldifferentflavorsofobjectpersistencesharethefollowingconcerns: • Ifyouuseobjectpersistencetostoresensitiveinformationonthedevice,thenmakesurethatthedataisencrypted: eitheratthedatabaselevel,orspecificallyatthevaluelevel. • Needtoguaranteetheintegrityoftheinformation? UseanHMACmechanismorsigntheinformationstored. Always verifytheHMAC/signaturebeforeprocessingtheactualinformationstoredintheobjects. • MakesurethatkeysusedinthetwonotionsabovearesafelystoredintheKeyChainandwellprotected. Seethe chapter“DataStorageoniOS”formoredetails. • Ensurethatthedatawithinthedeserializedobjectiscarefullyvalidatedbeforeitisactivelyused(e.g.,noexploit ofbusiness/applicationlogicispossible). • DonotusepersistencemechanismsthatuseRuntimeReferencetoserialize/deserializeobjectsinhigh-riskappli- cations,astheattackermightbeabletomanipulatethestepstoexecutebusinesslogicviathismechanism(see thechapter“iOSAnti-ReversingDefenses”formoredetails). • NotethatinSwift2andbeyond,aMirrorcanbeusedtoreadpartsofanobject,butcannotbeusedtowriteagainst theobject. Dynamic Analysis Thereareseveralwaystoperformdynamicanalysis: • Fortheactualpersistence: Usethetechniquesdescribedinthe“DataStorageoniOS”chapter. • For the serialization itself: Use a debug build or use Frida / objection to see how the serialization methods are handled(e.g.,whethertheapplicationcrashesorextrainformationcanbeextractedbyenrichingtheobjects). Memory Corruption Bugs Platform: ios MASVSV1: MSTG-CODE-8 MASVSV2: MASVS-CODE-4 501\\nOverview Static Analysis Aretherenativecodeparts? Ifso: checkforthegivenissuesinthegeneralmemorycorruptionsection. Nativecodeisa littlehardertospotwhencompiled. IfyouhavethesourcesthenyoucanseethatCfilesuse.csourcefilesand.hheader files and C++ uses .cpp files and .h files. This is a little different from the .swift and the .m source files for Swift and Objective-C.Thesefilescanbepartofthesources,orpartofthirdpartylibraries,registeredasframeworksandimported throughvarioustools,suchasCarthage,theSwiftPackageManagerorCocoapods. Foranymanagedcode(Objective-C/Swift)intheproject,checkthefollowingitems: • ThedoubleFreeissue: whenfreeiscalledtwiceforagivenregioninsteadofonce. • Retainingcycles: lookforcyclicdependenciesbymeansofstrongreferencesofcomponentstooneanotherwhich keepmaterialsinmemory. • UsinginstancesofUnsafePointercanbemanagedwrongly,whichwillallowforvariousmemorycorruptionissues. • TryingtomanagethereferencecounttoanobjectbyUnmanagedmanually,leadingtowrongcounternumbersand atoolate/toosoonrelease. AgreattalkisgivenonthissubjectatRealmacademyandanicetutorialtoseewhatisactuallyhappeningisprovided byRayWenderlichonthissubject. PleasenotethatwithSwift5youcanonlydeallocatefullblocks,whichmeanstheplaygroundhaschangedabit. Dynamic Analysis There are various tools provided which help to identify memory bugs within Xcode, such as the Debug Memory graph introducedinXcode8andtheAllocationsandLeaksinstrumentinXcode. Next,youcancheckwhethermemoryisfreedtoofastortooslowbyenablingNSAutoreleaseFreedObjectCheckEnabled, NSZombieEnabled,NSDebugEnabledinXcodewhiletestingtheapplication. Therearevariouswellwrittenexplanationswhichcanhelpwithtakingcareofmemorymanagement. Thesecanbefound inthereferencelistofthischapter. Testing Enforced Updating Platform: ios MASVSV1: MSTG-ARCH-9 MASVSV2: MASVS-CODE-2 Overview Static Analysis Firstseewhetherthereisanupdatemechanismatall: ifitisnotyetpresent,itmightmeanthatuserscannotbeforced toupdate. Ifthemechanismispresent,seewhetheritenforces“alwayslatest”andwhetherthatisindeedinlinewith thebusinessstrategy. Otherwisecheckifthemechanismissupportingtoupdatetoagivenversion. Makesurethatevery entryoftheapplicationgoesthroughtheupdatingmechanisminordertomakesurethattheupdate-mechanismcannot bebypassed. Dynamic analysis Inordertotestforproperupdating: trydownloadinganolderversionoftheapplicationwithasecurityvulnerability,either byareleasefromthedevelopersorbyusingathirdpartyapp-store. Next,verifywhetherornotyoucancontinuetouse 502\\ntheapplicationwithoutupdatingit. Ifanupdatepromptisgiven,verifyifyoucanstillusetheapplicationbycancelingthe prompt or otherwise circumventing it through normal application usage. This includes validating whether the backend willstopcallstovulnerablebackendsand/orwhetherthevulnerableapp-versionitselfisblockedbythebackend. Finally, seeifyoucanplaywiththeversionnumberofaman-in-the-middledappandseehowthebackendrespondstothis(and ifitisrecordedatallforinstance). Checking for Weaknesses in Third Party Libraries Platform: ios MASVSV1: MSTG-CODE-5 MASVSV2: MASVS-CODE-3 Overview Static Analysis Detecting vulnerabilities of third party libraries Inordertoensurethatthelibrariesusedbytheappsarenotcarryingvulnerabilities,onecanbestcheckthedependencies installedbyCocoaPodsorCarthage. Swift Package Manager IncaseSwiftPackageManagerisusedformanagingthirdpartydependencies,thefollowingstepscanbetakentoanalyze thethirdpartylibrariesforvulnerabilities: First,attherootoftheproject,wherethePackage.swiftfileislocated,type swiftbuild Next, checkthefilePackage.resolvedfortheactualversionsusedandinspectthegivenlibrariesforknownvulnerabili- ties. YoucanutilizetheOWASPDependency-Check’sexperimentalSwiftPackageManagerAnalyzertoidentifytheCommon PlatformEnumeration(CPE)namingschemeofalldependenciesandanycorrespondingCommonVulnerabilityandExpo- sure(CVE)entries. Scantheapplication’sPackage.swiftfileandgenerateareportofknownvulnerablelibrarieswiththe followingcommand: dependency-check --enableExperimental --out .--scan Package.swift CocoaPods IncaseCocoaPodsisusedformanagingthirdpartydependencies,thefollowingstepscanbetakentoanalyzethethird partylibrariesforvulnerabilities. First,attherootoftheproject,wherethePodfileislocated,executethefollowingcommands: sudo geminstallcocoapods podinstall Next,nowthatthedependencytreehasbeenbuilt,youcancreateanoverviewofthedependenciesandtheirversions byrunningthefollowingcommands: sudo geminstallcocoapods-dependencies poddependencies Theresultofthestepsabovecannowbeusedasinputforsearchingdifferentvulnerabilityfeedsforknownvulnerabili- ties. 503\\nNote: 1. If the developer packs all dependencies in terms of its own support library using a .podspec file, then this .podspecfilecanbecheckedwiththeexperimentalCocoaPodspodspecchecker. 2. IftheprojectusesCocoaPodsincombinationwithObjective-C,SourceClearcanbeused. 3. Using CocoaPods with HTTP-based links instead of HTTPS might allow for man-in-the-middle attacks during the download of the dependency, allowing an attacker to replace (parts of) the library with other content. Therefore,alwaysuseHTTPS. YoucanutilizetheOWASPDependency-Check’sexperimentalCocoaPodsAnalyzertoidentifytheCommonPlatformEnu- meration (CPE) naming scheme of all dependencies and any corresponding Common Vulnerability and Exposure (CVE) entries. Scantheapplication’s*.podspecand/orPodfile.lockfilesandgenerateareportofknownvulnerablelibrarieswith thefollowingcommand: dependency-check --enableExperimental --out .--scan Podfile.lock Carthage IncaseCarthageisusedforthirdpartydependencies, thenthefollowingstepscanbetakentoanalyzethethirdparty librariesforvulnerabilities. First,attherootoftheproject,wheretheCartfileislocated,type brewinstallcarthage carthageupdate --platform iOS Next,checktheCartfile.resolvedforactualversionsusedandinspectthegivenlibrariesforknownvulnerabilities. Note, atthetimeofwritingthischapter, thereisnoautomatedsupportforCarthagebaseddependencyanalysis knowntotheauthors. Atleast,thisfeaturewasalreadyrequestedfortheOWASPDependencyChecktoolbutnot yetimplemented(seetheGitHubissue). Discovered library vulnerabilities Whenalibraryisfoundtocontainvulnerabilities,thenthefollowingreasoningapplies: • Isthelibrarypackagedwiththeapplication? Thencheckwhetherthelibraryhasaversioninwhichthevulnerability ispatched. Ifnot,checkwhetherthevulnerabilityactuallyaffectstheapplication. Ifthatisthecaseormightbethe caseinthefuture,thenlookforanalternativewhichprovidessimilarfunctionality,butwithoutthevulnerabilities. • Isthelibrarynotpackagedwiththeapplication? Seeifthereisapatchedversioninwhichthevulnerabilityisfixed. If thisisnotthecase,checkiftheimplicationsofthevulnerabilityforthebuildprocess. Couldthevulnerabilityimpede abuildorweakenthesecurityofthebuild-pipeline? Thentrylookingforanalternativeinwhichthevulnerabilityis fixed. Incaseframeworksareaddedmanuallyaslinkedlibraries: 1. Openthexcodeprojfileandchecktheprojectproperties. 2. Go to the tab Build Phases and check the entries in Link Binary With Libraries for any of the libraries. See earliersectionsonhowtoobtainsimilarinformationusingMobSF. Inthecaseofcopy-pastedsources: searchtheheaderfiles(incaseofusingObjective-C)andotherwisetheSwiftfilesfor knownmethodnamesforknownlibraries. Next, note that for hybrid applications, you will have to check the JavaScript dependencies with RetireJS. Similarly for Xamarin,youwillhavetochecktheC#dependencies. Last,iftheapplicationisahigh-riskapplication,youwillendupvettingthelibrarymanually. Inthatcasetherearespecific requirements for native code, which are similar to the requirements established by the MASVS for the application as a whole. Nexttothat,itisgoodtovetwhetherallbestpracticesforsoftwareengineeringareapplied. 504\\nDynamic Analysis Thedynamicanalysisofthissectioncomprisesoftwoparts: theactuallicenseverificationandcheckingwhichlibraries areinvolvedincaseofmissingsources. Itneedtobevalidatedwhetherthecopyrightsofthelicenseshavebeenadheredto. Thisoftenmeansthattheapplication shouldhaveanaboutorEULAsectioninwhichthecopy-rightstatementsarenotedasrequiredbythelicenseofthethird partylibrary. Listing Application Libraries When performing app analysis, it is important to also analyze the app dependencies (usually in form of libraries or so- called iOS Frameworks) and ensure that they don’t contain any vulnerabilities. Even when you don’t",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 162
  },
  "embedding": [
    -0.07836068421602249,
    -0.0157949049025774,
    -0.003187085036188364,
    0.025948259979486465,
    -0.007939008064568043,
    -0.020241914317011833,
    -0.03764186426997185,
    -0.01798871159553528,
    -0.030865931883454323,
    0.01281747967004776,
    0.02347995899617672,
    -0.07399735599756241,
    -0.022821318358182907,
    0.022882303223013878,
    0.02242259681224823,
    -0.009929387830197811,
    0.06211504712700844,
    -0.01305592991411686,
    -0.01109664048999548,
    0.013216574676334858,
    0.013051807880401611,
    0.027316100895404816,
    0.058938030153512955,
    -0.03485645353794098,
    0.061569999903440475,
    -0.017149783670902252,
    -0.07642825692892075,
    -0.0373171903192997,
    -0.034915126860141754,
    -0.017156904563307762,
    0.06443624943494797,
    -0.03384941443800926,
    -0.020406313240528107,
    0.02159588783979416,
    0.14471335709095,
    0.08686666935682297,
    0.027776163071393967,
    -0.032260820269584656,
    -0.02212298847734928,
    -0.07424972951412201,
    -0.05381530523300171,
    -0.008659052662551403,
    -0.0367291085422039,
    0.06534665077924728,
    0.029339531436562538,
    -0.05183380842208862,
    -0.003431261982768774,
    -0.054260075092315674,
    0.015425628051161766,
    0.039811473339796066,
    -0.055148281157016754,
    -0.021189261227846146,
    -0.011796512641012669,
    0.05128359794616699,
    -0.021428128704428673,
    0.0865381509065628,
    -0.01828905940055847,
    0.05612937733530998,
    0.01525710429996252,
    0.009863286279141903,
    0.051770687103271484,
    -0.02433592826128006,
    -0.026189839467406273,
    -0.04723271355032921,
    -0.04213981330394745,
    0.024871403351426125,
    -0.04423842579126358,
    -0.07709385454654694,
    0.014492838643491268,
    -0.056007932871580124,
    0.002469704719260335,
    -0.016578957438468933,
    -0.04004689306020737,
    0.06848695129156113,
    -0.0044489032588899136,
    0.06194888800382614,
    0.012284941971302032,
    -0.03128664940595627,
    0.0320126973092556,
    -0.08565361797809601,
    -0.0009826120221987367,
    -0.04488262161612511,
    -0.011371859349310398,
    0.055935125797986984,
    0.014258423820137978,
    0.03262888267636299,
    -0.05252643674612045,
    0.0011680210009217262,
    0.0197060015052557,
    0.04417659714818001,
    0.029327917844057083,
    -0.041385289281606674,
    -0.01822403445839882,
    -0.018921297043561935,
    0.007023307960480452,
    -0.027187518775463104,
    -0.0006435776012949646,
    -0.010646565817296505,
    -0.009295045398175716,
    0.029847480356693268,
    -0.009675172157585621,
    -0.041172560304403305,
    0.0411183163523674,
    0.01834014244377613,
    0.031282346695661545,
    -0.061042215675115585,
    0.035367172211408615,
    -0.06766524165868759,
    0.004174789413809776,
    0.026465067639946938,
    0.0012374878861010075,
    0.0325905941426754,
    -0.03215824067592621,
    -0.008331415243446827,
    0.01715671829879284,
    0.013469243422150612,
    -0.11113929748535156,
    0.06228351593017578,
    -0.019945163279771805,
    0.01596377044916153,
    0.02612236700952053,
    0.03901445493102074,
    0.049799975007772446,
    -0.10576646775007248,
    -0.04414258897304535,
    -0.032992828637361526,
    0.02960178814828396,
    1.9863934065001003e-32,
    -0.022540172562003136,
    0.006956696044653654,
    0.01723616011440754,
    0.04932810738682747,
    0.007240930572152138,
    -0.1185673251748085,
    0.06552989035844803,
    0.07509417831897736,
    0.023322245106101036,
    -0.052551839500665665,
    -0.07316888868808746,
    0.058005440980196,
    -0.03143136948347092,
    -0.002038808772340417,
    -0.07625114172697067,
    -0.03367297723889351,
    0.01599048636853695,
    0.023367900401353836,
    -0.022186316549777985,
    0.05351083725690842,
    0.0019958731718361378,
    -0.039950691163539886,
    0.07260116934776306,
    -0.004660053178668022,
    -0.017092417925596237,
    -0.037250034511089325,
    0.02998463250696659,
    0.07433190196752548,
    0.035413146018981934,
    0.023991726338863373,
    -0.02821219153702259,
    -0.00638503348454833,
    -0.026085710152983665,
    -0.0465555414557457,
    -0.014599686488509178,
    0.02573990821838379,
    0.05423841252923012,
    -0.07139327377080917,
    -0.054804809391498566,
    -0.08421985805034637,
    -0.013125093653798103,
    0.012977708131074905,
    -0.05067550018429756,
    -0.014686268754303455,
    0.01229629572480917,
    -0.09619387984275818,
    -0.0015065576881170273,
    0.01142176240682602,
    0.09220532327890396,
    0.10159265995025635,
    -0.046085208654403687,
    -0.003450987860560417,
    0.005739327985793352,
    -0.05593457818031311,
    -0.11614257097244263,
    -0.0007398833404295146,
    -0.02421778440475464,
    0.045873988419771194,
    0.01611325331032276,
    -0.03200720250606537,
    -0.04585582762956619,
    -0.05171584337949753,
    -0.00808693002909422,
    -0.04217299446463585,
    0.003868049941956997,
    -0.002564951777458191,
    -0.0340135395526886,
    -0.07053472846746445,
    -0.024995606392621994,
    0.012734944000840187,
    0.0320945605635643,
    -0.028068458661437035,
    0.025161411613225937,
    0.0029209875501692295,
    0.025519482791423798,
    -0.06727953255176544,
    -0.014199077151715755,
    0.012181326746940613,
    -0.05558444559574127,
    -0.04155826196074486,
    0.0604175366461277,
    -0.0062236781232059,
    -0.06946094334125519,
    0.004752012435346842,
    0.041141577064991,
    0.09432618319988251,
    0.007407214026898146,
    -0.0913177952170372,
    -0.0308135524392128,
    0.11053658276796341,
    -0.01895088329911232,
    0.055897753685712814,
    -0.0072260149754583836,
    0.01706705614924431,
    -0.030629802495241165,
    -1.8435967037509105e-32,
    0.04546814784407616,
    -0.0752137079834938,
    -0.09100805968046188,
    -0.00167791114654392,
    0.012963456101715565,
    -0.008438426069915295,
    -0.013003743253648281,
    0.054542649537324905,
    -0.04569225013256073,
    -0.017240379005670547,
    0.04821554571390152,
    -0.08720097690820694,
    0.027458542957901955,
    -0.009585551917552948,
    -0.055355045944452286,
    -0.03422482684254646,
    -0.05404559150338173,
    -0.041502468287944794,
    0.04924509674310684,
    0.11317919939756393,
    0.03488576039671898,
    0.06928367167711258,
    -0.045429691672325134,
    0.05414380133152008,
    -0.017464829608798027,
    -0.00496023939922452,
    -0.057524941861629486,
    0.010931003838777542,
    0.015596500597894192,
    -0.0652403011918068,
    0.1237017959356308,
    0.030121924355626106,
    -0.09897071123123169,
    -0.009520242922008038,
    0.07067730277776718,
    -0.05756319686770439,
    0.007835936732590199,
    -0.017956111580133438,
    -0.046779170632362366,
    0.06538578867912292,
    0.12477842718362808,
    0.00901016779243946,
    -0.05835109204053879,
    -0.0006502554751932621,
    0.07690492272377014,
    -0.015886245295405388,
    0.03597318008542061,
    0.015346212312579155,
    0.07999766618013382,
    0.012880036607384682,
    0.0750945508480072,
    -0.047692231833934784,
    -0.06218498572707176,
    0.030277201905846596,
    -0.0015118852024897933,
    0.08850614726543427,
    0.09971160441637039,
    -0.09297734498977661,
    -0.01785680092871189,
    -0.032871633768081665,
    -0.007468075025826693,
    -0.05919450521469116,
    0.04111430048942566,
    -0.021042142063379288,
    0.11993857473134995,
    0.013700494542717934,
    0.06384722888469696,
    0.02687091752886772,
    0.03753126785159111,
    -0.03048790991306305,
    -0.08190631121397018,
    -0.06667380779981613,
    0.04394455999135971,
    -0.05757158622145653,
    0.04988158866763115,
    -0.008927389048039913,
    -0.06548594683408737,
    -0.09846237301826477,
    -0.0002787446428555995,
    -0.0029682994354516268,
    -0.026598311960697174,
    0.03441641852259636,
    -0.03686560317873955,
    0.04214689880609512,
    0.08402975648641586,
    -0.031153520569205284,
    -0.008288953453302383,
    0.028532231226563454,
    -0.047792281955480576,
    0.08507592976093292,
    -0.007664008531719446,
    -0.01250466052442789,
    -0.007647149730473757,
    0.06954432278871536,
    -0.013771867379546165,
    -7.092715037515518e-08,
    -0.04164683446288109,
    0.017198657616972923,
    -0.002974131377413869,
    -0.03186744078993797,
    0.056742243468761444,
    -0.005967538338154554,
    0.015604376792907715,
    -0.056008230894804,
    0.04163038730621338,
    -0.09714306890964508,
    -0.04791119322180748,
    -0.009478386491537094,
    -0.12671640515327454,
    -0.0008438630611635745,
    0.010137759149074554,
    -0.06908710300922394,
    -0.025282667949795723,
    0.05640983209013939,
    -0.02091861702501774,
    -0.04830034449696541,
    0.009537294507026672,
    -0.038338493555784225,
    -0.028240876272320747,
    -0.025294620543718338,
    0.051707424223423004,
    0.08582139760255814,
    0.05277061089873314,
    0.14989537000656128,
    0.0013684617588296533,
    0.009359214454889297,
    0.002074612770229578,
    -0.018024412915110588,
    0.07428520172834396,
    -0.12671057879924774,
    -0.03877682983875275,
    0.03626031428575516,
    0.1176629364490509,
    -0.030763335525989532,
    0.11998321115970612,
    -0.04590372368693352,
    0.04393358156085014,
    0.11126820743083954,
    0.010139904916286469,
    0.020797541365027428,
    0.0006383571890182793,
    0.023175476118922234,
    -0.066899374127388,
    0.09324470907449722,
    -0.00877982284873724,
    -0.06572488695383072,
    -0.13233713805675507,
    -0.10665388405323029,
    -0.02845398709177971,
    0.07638049870729446,
    -0.08193378150463104,
    -0.015611479058861732,
    0.03322490304708481,
    -0.04779312014579773,
    0.033696044236421585,
    -0.004611917771399021,
    0.21438083052635193,
    -0.020210621878504753,
    0.016863765195012093,
    -0.04272362217307091
  ]
}