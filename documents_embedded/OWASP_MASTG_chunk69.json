{
  "text": "alertDialog.show(); } protected void onCreate(Bundlebundle){ if(c.a()||c.b()||c.c()){ this.a(\"Rootdetected!\"); } if(b.a(this.getApplicationContext())) { this.a(\"Appisdebuggable!\"); } super.onCreate(bundle); this.setContentView(2130903040); } 137\\n/* *Enabledaggressiveblocksorting */ public void verify(Viewobject){ object =((EditText)this.findViewById(2130837505)).getText().toString(); AlertDialogalertDialog =newAlertDialog.Builder((Context)this).create(); if(a.a((String)object)){ alertDialog.setTitle((CharSequence)\"Success!\"); object =\"Thisisthecorrectsecret.\"; }else { alertDialog.setTitle((CharSequence)\"Nope...\"); object =\"That'snotit.Tryagain.\"; } alertDialog.setMessage((CharSequence)object); alertDialog.setButton(-3,(CharSequence)\"OK\",newDialogInterface.OnClickListener(){ public void onClick(DialogInterfacedialogInterface,intn){ dialogInterface.dismiss(); } }); alertDialog.show(); } } Notice the “Root detected” message in the onCreate method and the various methods called in the preceding if- statement(whichperformtheactualrootchecks). Alsonotethe“Thisisunacceptable...”messagefromthefirstmethod oftheclass,privatevoida. Obviously,thismethoddisplaysthedialogbox. ThereisanalertDialog.onClickListener callbacksetinthesetButtonmethodcall,whichclosestheapplicationviaSystem.exitaftersuccessfulrootdetection. WithFrida,youcanpreventtheappfromexitingbyhookingtheMainActivity.amethodorthecallbackinsideit. The examplebelowshowshowyoucanhookMainActivity.aandpreventitfromendingtheapplication. setImmediate(function(){ //preventtimeout console.log(\"[*]Startingscript\"); Java.perform(function(){ varmainActivity =Java.use(\"sg.vantagepoint.uncrackable1.MainActivity\"); mainActivity.a.implementation =function(v){ console.log(\"[*]MainActivity.acalled\"); }; console.log(\"[*]MainActivity.amodified\"); }); }); WrapyourcodeinthefunctionsetImmediatetopreventtimeouts(youmayormaynotneedtodothis),thencallJava. performtouseFrida’smethodsfordealingwithJava. AfterwardsretrieveawrapperforMainActivityclassandoverwrite itsamethod. Unliketheoriginal,thenewversionofajustwritesconsoleoutputanddoesn’texittheapp. Analternative solutionistohookonClickmethodoftheOnClickListenerinterface. YoucanoverwritetheonClickmethodandprevent itfromendingtheapplicationwiththeSystem.exitcall. IfyouwanttoinjectyourownFridascript,itshouldeitherdisable theAlertDialogentirelyorchangethebehavioroftheonClickmethodsotheappdoesnotexitwhenyouclick“OK”. Savetheabovescriptasuncrackable1.jsandloadit: frida -U-fowasp.mstg.uncrackable1 -luncrackable1.js --no-pause Afteryouseethe“MainActivity.amodified”messageandtheappwillnotexitanymore. Youcannowtrytoinputa“secretstring”. Butwheredoyougetit? Ifyoulookattheclasssg.vantagepoint.uncrackable1.a,youcanseetheencryptedstringwithwhichyourinputgets compared: package sg.vantagepoint.uncrackable1; import android.util.Base64; import android.util.Log; public class a{ public static boolean a(Stringstring){ byte[]arrby =Base64.decode((String)\"5UJiFctbmgbDoLXmpL12mkno8HT4Lv8dlat8FxR2GOc=\",(int)0); try{ arrby =sg.vantagepoint.a.a.a(a.b(\"8d127684cbc37c17616d806cf50473cc\"),arrby); 138\\n} catch (Exceptionexception){ StringBuilderstringBuilder =newStringBuilder(); stringBuilder.append(\"AESerror:\"); stringBuilder.append(exception.getMessage()); Log.d((String)\"CodeCheck\",(String)stringBuilder.toString()); arrby =newbyte[]{}; } return string.equals((Object)newString(arrby)); } public static byte[]b(Stringstring){ intn=string.length(); byte[]arrby =newbyte[n/2]; for(inti=0;i<n;i+=2){ arrby[i/2]=(byte)((Character.digit((char)string.charAt(i),(int)16)<<4)+Character.digit((char)string.charAt(i+1),(int)16)); } return arrby; } } Lookatthestring.equalscomparisonattheendoftheamethodandthecreationofthestringarrbyinthetryblock above. arrby is the return value of the function sg.vantagepoint.a.a.a. string.equals comparison compares your inputwitharrby. Sowewantthereturnvalueofsg.vantagepoint.a.a.a. Insteadofreversingthedecryptionroutinestoreconstructthesecretkey,youcansimplyignoreallthedecryptionlogic in the app and hook the sg.vantagepoint.a.a.a function to catch its return value. Here is the complete script that preventsexitingonrootandinterceptsthedecryptionofthesecretstring: setImmediate(function(){ //preventtimeout console.log(\"[*]Startingscript\"); Java.perform(function(){ varmainActivity =Java.use(\"sg.vantagepoint.uncrackable1.MainActivity\"); mainActivity.a.implementation =function(v){ console.log(\"[*]MainActivity.acalled\"); }; console.log(\"[*]MainActivity.amodified\"); varaaClass =Java.use(\"sg.vantagepoint.a.a\"); aaClass.a.implementation =function(arg1,arg2){ varretval =this.a(arg1,arg2); varpassword =''; for(vari=0;i<retval.length;i++){ password +=String.fromCharCode(retval[i]); } console.log(\"[*]Decrypted:\" +password); return retval; }; console.log(\"[*]sg.vantagepoint.a.a.amodified\"); }); }); After running the script in Frida and seeing the “[*] sg.vantagepoint.a.a.a modified” message in the console, enter a randomvaluefor“secretstring”andpressverify. Youshouldgetanoutputsimilartothefollowing: $frida -U-fowasp.mstg.uncrackable1 -luncrackable1.js --no-pause [*]Startingscript [USB::AndroidEmulator5554::sg.vantagepoint.uncrackable1]->[*]MainActivity.amodified [*]sg.vantagepoint.a.a.amodified [*]MainActivity.acalled. [*]Decrypted:Iwanttobelieve Thehookedfunctionoutputtedthedecryptedstring. Youextractedthesecretstringwithouthavingtodivetoodeepinto theapplicationcodeanditsdecryptionroutines. You’venowcoveredthebasicsofstatic/dynamicanalysisonAndroid. Ofcourse,theonlywaytoreallylearnitishands-on experience: buildyourownprojectsinAndroidStudio,observehowyourcodegetstranslatedintobytecodeandnative code,andtrytocrackourchallenges. In the remaining sections, we’ll introduce a few advanced subjects, including process exploration, kernel modules and dynamicexecution. 139\\nGetting Loaded Classes and Methods Dynamically Platform: android YoucanusethecommandJavaintheFridaCLItoaccesstheJavaruntimeandretrieveinformationfromtherunningapp. Rememberthat,unlikeFridaforiOS,inAndroidyouneedtowrapyourcodeinsideaJava.performfunction. Thus,it’s moreconvenienttouseFridascriptstoe.g.getalistofloadedJavaclassesandtheircorrespondingmethodsandfields orformorecomplexinformationgatheringorinstrumentation. Onesuchscriptsislistedbelow. Thescripttolistclass’s methodsusedbelowisavailableonGithub. //GetlistofloadedJavaclassesandmethods //Filename:java_class_listing.js Java.perform(function(){ Java.enumerateLoadedClasses({ onMatch:function(className){ console.log(className); describeJavaClass(className); }, onComplete:function(){} }); }); //Getthemethodsandfields function describeJavaClass(className){ varjClass =Java.use(className); console.log(JSON.stringify({ _name:className, _methods:Object.getOwnPropertyNames(jClass.__proto__).filter(function(m) { return !m.startsWith('$')//filteroutFridarelatedspecialproperties ||m=='class'||m=='constructor'//optional }), _fields:jClass.class.getFields().map(function(f){ return(f.toString()); }) },null,2)); } Aftersavingthescripttoafilecalledjava_class_listing.js,youcantellFridaCLItoloaditbyusingtheflag-landinjectit totheprocessIDspecifiedby-p. frida -U-ljava_class_listing.js -p<pid> //Output [HuaweiNexus6P::sg.vantagepoint.helloworldjni]-> ... com.scottyab.rootbeer.sample.MainActivity { \"_name\":\"com.scottyab.rootbeer.sample.MainActivity\", \"_methods\":[ ... \"beerView\", \"checkRootImageViewList\", \"floatingActionButton\", \"infoDialog\", \"isRootedText\", \"isRootedTextDisclaimer\", \"mActivity\", \"GITHUB_LINK\" ], \"_fields\":[ \"publicstaticfinalintandroid.app.Activity.DEFAULT_KEYS_DIALER\", ... Giventheverbosityoftheoutput,thesystemclassescanbefilteredoutprogrammaticallytomakeoutputmorereadable andrelevanttotheusecase. Library Injection Platform: android Intheprevioussectionwelearnedaboutpatchingapplicationcodetoassistinouranalysis,butthisapproachhasseveral limitations. Forinstance,you’dliketologeverythingthat’sbeingsentoverthenetworkwithouthavingtoperformaMITM 140\\nattack. Forthis you’dhave topatch allpossible callsto thenetwork APIs, which canquickly becomeimpractical when dealingwithlargeapplications. Inaddition,thefactthatpatchingisuniquetoeachapplicationcanalsobeconsidereda shortcoming,asthiscodecannotbeeasilyreused. Using library injection you can develop reusable libraries and inject them to different applications, effectively making thembehavedifferentlywithouthavingtomodifytheiroriginalsourcecode. ThisisknownasDLLinjectiononWindows (broadlyusedtomodifyandbypassanti-cheatmechanismsingames),LD_PRELOADonLinuxandDYLD_INSERT_LIBRARIES onmacOS.OnAndroidandiOS,acommonexampleisusingtheFridaGadgetwheneverFrida’sso-calledInjectedmode ofoperationisn’tsuitable(i.e.youcannotruntheFridaserveronthetargetdevice). Inthissituation,youcaninjectthe Gadgetlibrarybyusingthesamemethodsyou’regoingtolearninthissection. Libraryinjectionisdesirableinmanysituationssuchas: • Performingprocessintrospection(e.g.listingclasses, tracingmethodcalls, monitoringaccessedfiles, monitoring networkaccess,obtainingdirectmemoryaccess). • Supporting or replacing existing code with your own implementations (e.g. replace a function that should give randomnumbers). • Introducingnewfeaturestoanexistingapplication. • Debuggingandfixingelusiveruntimebugsoncodeforwhichyoudon’thavetheoriginalsource. • Enabledynamictestingonanon-rooteddevice(e.g.withFrida). Inthissection,wewilllearnabouttechniquesforperforminglibraryinjectiononAndroid,whichbasicallyconsistofpatch- ingtheapplicationcode(smaliornative)oralternativelyusingtheLD_PRELOADfeatureprovidedbytheOSloaderitself. Patching the Application’s Smali Code AnAndroidapplication’sdecompiledsmalicodecanbepatchedtointroduceacalltoSystem.loadLibrary. Thefollowing smalipatchinjectsalibrarynamedlibinject.so: const-stringv0,\"inject\" invoke-static{v0},Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V Ideally you should insert the above code early in the application lifecycle, for instance in the onCreate method. It is importanttoremembertoaddthelibrarylibinject.sointherespectivearchitecturefolder(armeabi-v7a,arm64-v8a,x86) ofthelibfolderintheAPK.Finally,youneedtore-signtheapplicationbeforeusingit. A well-known use case of this technique is loading the Frida gadget to an application, especially while working on a non-rooteddevice(thisiswhatobjection patchapkbasicallydoes). Patching Application’s Native Library Many Androidapplications use native code in addition to Java code for various performance and security reasons. The",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 69
  },
  "embedding": [
    -0.0027125950437039137,
    -0.006071940064430237,
    -0.019492417573928833,
    -0.029519377276301384,
    0.0251212976872921,
    0.010257472284138203,
    0.06495765596628189,
    0.07412707060575485,
    0.031142087653279305,
    0.01939402148127556,
    -0.0061052897945046425,
    -0.03182631731033325,
    0.01662226766347885,
    0.052502941340208054,
    -0.054301947355270386,
    0.008597203530371189,
    -0.01197207160294056,
    -0.09047809988260269,
    -0.05960904061794281,
    -0.008198215626180172,
    0.04451881721615791,
    -0.044944051653146744,
    0.058167893439531326,
    -0.007000063546001911,
    0.006263367831707001,
    -0.051225461065769196,
    -0.04234270751476288,
    -0.06309899687767029,
    -0.03960397467017174,
    0.011401462368667126,
    0.08898849785327911,
    -0.03193160519003868,
    0.04833446815609932,
    -0.02500252239406109,
    0.011212323792278767,
    -0.011858048848807812,
    0.03192173317074776,
    -0.011805751360952854,
    -0.012099537998437881,
    -0.01611216552555561,
    -0.07333625853061676,
    -0.030389275401830673,
    -0.04408308491110802,
    -0.01535588875412941,
    -0.015491118654608727,
    -0.0742369219660759,
    -0.0020183096639811993,
    0.011196589097380638,
    -0.005968746263533831,
    0.08263767510652542,
    0.03174623101949692,
    -0.006638374645262957,
    -0.030705131590366364,
    -0.03344014286994934,
    -0.024592209607362747,
    0.1368701308965683,
    0.04582691937685013,
    0.07916145771741867,
    -0.011410661973059177,
    0.08463940024375916,
    0.06650739163160324,
    0.0361587293446064,
    -0.03746546432375908,
    -0.005259256344288588,
    -0.07524647563695908,
    0.06164575740695,
    0.06382334977388382,
    -0.005592674482613802,
    0.011141502298414707,
    -0.058418866246938705,
    -0.018262777477502823,
    0.028411703184247017,
    0.051562417298555374,
    0.04181944578886032,
    -0.015068169683218002,
    -0.025964250788092613,
    -0.006452479865401983,
    0.021005285903811455,
    -0.07582314312458038,
    -0.061976149678230286,
    0.005118131637573242,
    0.06053623557090759,
    -0.013138063251972198,
    0.009836076758801937,
    0.09239568561315536,
    0.010360609740018845,
    0.00130908761639148,
    0.03788464888930321,
    0.02273210696876049,
    0.043836578726768494,
    0.04279467836022377,
    0.032030798494815826,
    -0.021346263587474823,
    0.05910757929086685,
    0.05035852640867233,
    -0.0052019525319337845,
    -0.1378214955329895,
    -0.020223543047904968,
    -0.08552328497171402,
    0.07780233770608902,
    0.0009485920891165733,
    -0.01244770921766758,
    -0.08437594771385193,
    0.019632775336503983,
    0.07522153854370117,
    -0.08927218616008759,
    0.018133042380213737,
    -0.030487218871712685,
    -0.0072294785641133785,
    0.027130572125315666,
    0.0007076921756379306,
    -0.017386015504598618,
    0.07791245728731155,
    0.03280440717935562,
    0.006318424828350544,
    -0.022965632379055023,
    0.05087779834866524,
    0.0639718547463417,
    -0.011654524132609367,
    0.01568373292684555,
    0.041369274258613586,
    -0.022981831803917885,
    0.023405099287629128,
    -0.07584229856729507,
    0.015268031507730484,
    0.06239902973175049,
    0.0771491527557373,
    6.671489535417091e-33,
    0.05581846088171005,
    0.06352559477090836,
    -0.015093471854925156,
    0.09248362481594086,
    -0.07974337786436081,
    0.014759724028408527,
    0.026019543409347534,
    0.04722379148006439,
    -0.02148008532822132,
    -0.007181325927376747,
    -0.028394227847456932,
    -0.019891861826181412,
    0.042222172021865845,
    -0.04039454460144043,
    0.030946888029575348,
    -0.019893867895007133,
    0.013993489556014538,
    0.0010846954537555575,
    -0.026929514482617378,
    -0.07454978674650192,
    -0.029484344646334648,
    -0.0544339157640934,
    -0.044771209359169006,
    -0.07856576144695282,
    0.015146197751164436,
    -0.0026473854668438435,
    0.0780508890748024,
    0.04468003287911415,
    -0.06352531164884567,
    0.011643674224615097,
    -0.0012407335452735424,
    -0.08588729053735733,
    -0.08992817252874374,
    0.04444914311170578,
    0.01976979523897171,
    -0.02033328078687191,
    -0.0531434491276741,
    -0.01274867169559002,
    0.015252119861543179,
    -0.05827779695391655,
    -0.01745746284723282,
    -0.11696317046880722,
    -0.015948401764035225,
    -0.0011170946527272463,
    0.020473001524806023,
    -0.0074735889211297035,
    -0.014366797171533108,
    0.004733852576464415,
    0.0250574741512537,
    -0.07699162513017654,
    0.0587511770427227,
    0.03758292645215988,
    -0.00041036182665266097,
    -0.0527026541531086,
    -0.06596685200929642,
    0.006776838097721338,
    -0.08674020320177078,
    0.024545464664697647,
    0.018413890153169632,
    -0.024176765233278275,
    0.030274854972958565,
    -0.02159905806183815,
    -0.019242607057094574,
    -0.04745474457740784,
    -0.08229482173919678,
    0.051175184547901154,
    -0.011004497297108173,
    -0.1441987007856369,
    -0.023331375792622566,
    -0.06998055428266525,
    -0.07900132983922958,
    -0.08503061532974243,
    0.0916314423084259,
    0.03660493716597557,
    -0.0489630289375782,
    0.03710736706852913,
    -0.042814094573259354,
    0.03934389352798462,
    -0.042881060391664505,
    -0.027151988819241524,
    0.04020017385482788,
    -0.05612624064087868,
    0.032234691083431244,
    -0.02052485942840576,
    0.040337610989809036,
    -0.001008205465041101,
    0.02411613240838051,
    -0.01425213273614645,
    -0.025403346866369247,
    0.0887727439403534,
    -0.051506344228982925,
    0.012887011282145977,
    -0.014346463605761528,
    -0.0017350629204884171,
    0.09948129951953888,
    -6.732347082011069e-33,
    0.05224829167127609,
    -0.025628384202718735,
    -0.05724017694592476,
    -0.1568293273448944,
    -0.005550073459744453,
    -0.018474821001291275,
    -0.02317005954682827,
    0.07562344521284103,
    -0.09495984017848969,
    -0.013267791830003262,
    0.011122855357825756,
    0.029871899634599686,
    0.062452320009469986,
    0.06521236896514893,
    0.01013557706028223,
    0.0664268359541893,
    -0.018506262451410294,
    0.033937741070985794,
    0.025737853720784187,
    0.027027476578950882,
    0.01895381696522236,
    0.0796637311577797,
    -0.004253561608493328,
    -0.024256566539406776,
    -0.07912955433130264,
    -0.005241955164819956,
    0.0598842091858387,
    0.04942880570888519,
    0.046459101140499115,
    -0.0786626785993576,
    0.06533616036176682,
    0.02171582169830799,
    -0.08880522847175598,
    -0.006085770670324564,
    0.03656480088829994,
    0.006250759121030569,
    0.008374426513910294,
    -0.06592410802841187,
    -0.06133832782506943,
    0.04306937754154205,
    0.051618993282318115,
    -0.023859478533267975,
    0.02272636629641056,
    -0.07473910599946976,
    -0.008479328826069832,
    -0.03586234897375107,
    0.07898493856191635,
    -0.02636904828250408,
    0.001019333372823894,
    0.03401210531592369,
    0.036433637142181396,
    -0.016168856993317604,
    0.06815528124570847,
    0.03423745557665825,
    0.040191564708948135,
    0.08791881799697876,
    0.0507156066596508,
    -0.061672668904066086,
    0.04292600229382515,
    -0.024212699383497238,
    0.03845783323049545,
    -0.06707094609737396,
    0.07072991877794266,
    -0.011909013614058495,
    0.07186265289783478,
    0.012799941003322601,
    0.06819833815097809,
    0.06611582636833191,
    0.04793737456202507,
    0.06549722701311111,
    -0.03207727521657944,
    -0.04739221930503845,
    0.007943836972117424,
    -0.06403183192014694,
    0.08250715583562851,
    0.07721177488565445,
    0.029269468039274216,
    -0.03356683999300003,
    -0.03322335332632065,
    -0.07177053391933441,
    0.060970500111579895,
    -0.017946554347872734,
    -0.010004947893321514,
    -0.06307758390903473,
    -0.0020324739161878824,
    -0.06744357943534851,
    0.02136271446943283,
    0.011126093566417694,
    -0.002384825376793742,
    -0.054761867970228195,
    -0.08304009586572647,
    -0.022946268320083618,
    0.03071901574730873,
    0.012222986668348312,
    -0.019614562392234802,
    -5.8706319805423846e-08,
    -0.060988131910562515,
    -0.033403392881155014,
    0.05557757616043091,
    -0.055406488478183746,
    0.0871698334813118,
    -0.031025322154164314,
    -0.010203707031905651,
    -0.07849198579788208,
    -0.0338791124522686,
    -0.12385151535272598,
    -0.1192607432603836,
    0.00815382320433855,
    -0.062350157648324966,
    -0.0019766574259847403,
    0.013327683322131634,
    -0.12571461498737335,
    -0.07910482585430145,
    -0.022923363372683525,
    -0.030583670362830162,
    0.06765186041593552,
    0.06128598749637604,
    -0.04732540622353554,
    0.05010788515210152,
    0.05581860616803169,
    0.026318280026316643,
    -0.021218907088041306,
    0.026612678542733192,
    -0.00990116037428379,
    0.039657749235630035,
    0.08699002861976624,
    -0.02818184532225132,
    0.0467551089823246,
    0.03775235265493393,
    -0.027751535177230835,
    -0.08543277531862259,
    0.15741346776485443,
    0.06469246000051498,
    0.0167972631752491,
    0.056787312030792236,
    -0.01748567260801792,
    0.11715478450059891,
    -0.08334675431251526,
    0.031146129593253136,
    0.023382220417261124,
    0.008514564484357834,
    -0.024923119693994522,
    0.049152348190546036,
    -0.050948984920978546,
    0.04548054561018944,
    0.02856653369963169,
    -0.111601822078228,
    0.0197686105966568,
    0.047588471323251724,
    -0.01720772124826908,
    -0.11807186901569366,
    -0.07261420041322708,
    0.010762686841189861,
    -0.06021418794989586,
    0.05651707947254181,
    0.10373225063085556,
    0.028301039710640907,
    -0.02232765592634678,
    -0.007707612123340368,
    -0.027733083814382553
  ]
}