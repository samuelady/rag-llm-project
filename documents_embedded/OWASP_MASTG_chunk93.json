{
  "text": "settings using the so-called NetworkSecurityConfigurationfeaturewhichoffersthefollowingkeycapabilities: • Cleartexttraffic: Protectappsfromaccidentalusageofcleartexttraffic(orenablesit). • Customtrustanchors: CustomizewhichCertificateAuthorities(CAs)aretrustedforanapp’ssecureconnections. Forexample,trustingparticularself-signedcertificatesorrestrictingthesetofpublicCAsthattheapptrusts. • Certificatepinning: Restrictanapp’ssecureconnectiontoparticularcertificates. • Debug-onlyoverrides: Safelydebugsecureconnectionsinanappwithoutaddedrisktotheinstalledbase. If an app defines a custom Network Security Configuration, you can obtain its location by searching for an- droid:networkSecurityConfigintheAndroidManifest.xmlfile. <application android:networkSecurityConfig=\"@xml/network_security_config\" Inthiscasethefileislocatedat@xml(equivalentto/res/xml)andhasthename“network_security_config”(whichmight vary). Youshouldbeabletofinditas“res/xml/network_security_config.xml”. Ifaconfigurationexists,thefollowingevent shouldbevisibleinthesystemlogs: D/NetworkSecurityConfig:UsingNetworkSecurityConfigfromresourcenetwork_security_config TheNetworkSecurityConfigurationisXML-basedandcanbeusedtoconfigureapp-wideanddomain-specificsettings: • base-configappliestoallconnectionsthattheappattemptstomake. • domain-configoverridesbase-configforspecificdomains(itcancontainmultipledomainentries). Forexample,thefollowingconfigurationusesthebase-configtopreventcleartexttrafficforalldomains. Butitoverrides thatruleusingadomain-config,explicitlyallowingcleartexttrafficforlocalhost. <?xml version=\"1.0\" encoding=\"utf-8\"?> <network-security-config> <base-config cleartextTrafficPermitted=\"false\" /> <domain-config cleartextTrafficPermitted=\"true\"> <domain>localhost</domain> </domain-config> </network-security-config> Learnmore: • “ASecurityAnalyst’sGuidetoNetworkSecurityConfigurationinAndroidP” • AndroidDevelopers-NetworkSecurityConfiguration • AndroidCodelab-NetworkSecurityConfiguration Default Configurations ThedefaultconfigurationforappstargetingAndroid9(APIlevel28)andhigherisasfollows: 234\\n<base-config cleartextTrafficPermitted=\"false\"> <trust-anchors> <certificates src=\"system\" /> </trust-anchors> </base-config> ThedefaultconfigurationforappstargetingAndroid7.0(APIlevel24)toAndroid8.1(APIlevel27)isasfollows: <base-config cleartextTrafficPermitted=\"true\"> <trust-anchors> <certificates src=\"system\" /> </trust-anchors> </base-config> ThedefaultconfigurationforappstargetingAndroid6.0(APIlevel23)andlowerisasfollows: <base-config cleartextTrafficPermitted=\"true\"> <trust-anchors> <certificates src=\"system\" /> <certificates src=\"user\" /> </trust-anchors> </base-config> Certificate Pinning The Network Security Configuration can also be used to pin declarative certificates to specific domains. This is done by providing a <pin-set> in the Network Security Configuration, which is a set of digests (hashes) of the public key (SubjectPublicKeyInfo)ofthecorrespondingX.509certificate. Whenattemptingtoestablishaconnectiontoaremoteendpoint,thesystemwill: • Getandvalidatetheincomingcertificate. • Extractthepublickey. • Calculateadigestovertheextractedpublickey. • Comparethedigestwiththesetoflocalpins. If at least one of the pinned digests matches, the certificate chain will be considered valid and the connection will pro- ceed. <?xml version=\"1.0\" encoding=\"utf-8\"?> <network-security-config> <domain-config> UsecertificatepinningforOWASPwebsiteaccessincludingsubdomains <domain includeSubdomains=\"true\">owasp.org</domain> <pin-set expiration=\"2018/8/10\"> <!--Hashofthepublickey(SubjectPublicKeyInfooftheX.509certificate)of theIntermediateCAoftheOWASPwebsiteservercertificate--> <pindigest=\"SHA-256\">YLh1dUR9y6Kja30RrAn7JKnbQG/uEtLMkBgFF2Fuihg=</pin> <!--Hashofthepublickey(SubjectPublicKeyInfooftheX.509certificate)of theRootCAoftheOWASPwebsiteservercertificate--> <pindigest=\"SHA-256\">Vjs8r4z+80wjNcr1YKepWQboSIRi63WsWXhIMN+eWys=</pin> </pin-set> </domain-config> </network-security-config> Security Provider AndroidreliesonasecurityprovidertoprovideSSL/TLS-basedconnections. Theproblemwiththiskindofsecurityprovider (oneexampleisOpenSSL),whichcomeswiththedevice,isthatitoftenhasbugsand/orvulnerabilities. Toavoidknownvulnerabilities, developersneedtomakesurethattheapplicationwillinstallapropersecurityprovider. SinceJuly11, 2016, GooglehasbeenrejectingPlayStoreapplicationsubmissions(bothnewapplicationsandupdates) thatusevulnerableversionsofOpenSSL. Testing Custom Certificate Stores and Certificate Pinning 235\\nPlatform: android MASVSV1: MSTG-NETWORK-4 MASVSV2: MASVS-NETWORK-2 Overview Static Analysis Network Security Configuration InspecttheNetworkSecurityConfigurationlookingforany<pin-set>elements. Checktheirexpirationdate,ifany. If expired,certificatepinningwillbedisabledfortheaffecteddomains. TestingTip: Ifacertificatepinningvalidationcheckhasfailed,thefollowingeventshouldbeloggedinthesystem logs: I/X509Util:Failedtovalidatethecertificatechain,error:Pinverificationfailed TrustManager Implementingcertificatepinninginvolvesthreemainsteps: • Obtainthecertificateofthedesiredhost(s). • Makesurethecertificateisin.bksformat. • PinthecertificatetoaninstanceofthedefaultApacheHttpclient. Toanalyzethecorrectimplementationofcertificatepinning,theHTTPclientshouldloadtheKeyStore: InputStreamin =resources.openRawResource(certificateRawResource); keyStore =KeyStore.getInstance(\"BKS\"); keyStore.load(resourceStream,password); OncetheKeyStorehasbeenloaded,wecanusetheTrustManagerthattruststheCAsinourKeyStore: StringtmfAlgorithm =TrustManagerFactory.getDefaultAlgorithm(); TrustManagerFactorytmf =TrustManagerFactory.getInstance(tmfAlgorithm); tmf.init(keyStore); //CreateanSSLContextthatusestheTrustManager //SSLContextcontext=SSLContext.getInstance(\"TLS\"); sslContext.init(null,tmf.getTrustManagers(),null); Theapp’simplementationmaybedifferent, pinningagainstthecertificate’spublickeyonly, thewholecertificate, ora wholecertificatechain. Network Libraries and WebViews Applicationsthatusethird-partynetworkinglibrariesmayutilizethelibraries’certificatepinningfunctionality. Forexample, okhttpcanbesetupwiththeCertificatePinnerasfollows: OkHttpClientclient =newOkHttpClient.Builder() .certificatePinner(newCertificatePinner.Builder() .add(\"example.com\",\"sha256/UwQAapahrjCOjYI3oLUx5AQxPBR02Jz6/E2pt0IeLXA=\") .build()) .build(); ApplicationsthatuseaWebViewcomponentmayutilizetheWebViewClient’seventhandlerforsomekindof“certificate pinning”ofeachrequestbeforethetargetresourceisloaded. Thefollowingcodeshowsanexampleverification: 236\\nWebViewmyWebView =(WebView)findViewById(R.id.webview); myWebView.setWebViewClient(newWebViewClient(){ private StringexpectedIssuerDN =\"CN=Let'sEncryptAuthorityX3,O=Let'sEncrypt,C=US;\"; @Override public void onLoadResource(WebViewview,Stringurl) { //FromAndroidAPIdocumentationabout\"WebView.getCertificate()\": //GetstheSSLcertificateforthemaintop-levelpage //ornullifthereisnocertificate(thesiteisnotsecure). // //AvailableinformationonSslCertificateclassare\"IssuerDN\",\"SubjectDN\"andvaliditydatehelpers SslCertificateserverCert =view.getCertificate(); if(serverCert !=null){ //applyeithercertificateorpublickeypinningcomparisonhere //Throwexceptiontocancelresourceloading... } } } }); Alternatively, itisbettertouseanOkHttpClientwithconfiguredpinsandletitactasaproxyoverridingshouldInter- ceptRequestoftheWebViewClient. Xamarin Applications ApplicationsdevelopedinXamarinwilltypicallyuseServicePointManagertoimplementpinning. Normallyafunctioniscreatedtocheckthecertificate(s)andreturnthebooleanvaluetothemethodServerCertificat- eValidationCallback: [Activity(Label =\"XamarinPinning\",MainLauncher =true)] public class MainActivity :Activity { //SupportedPublicKey-Hexadecimalvalueofthepublickey. //UseGetPublicKeyString()methodtodeterminethepublickeyofthecertificatewewanttopin.Uncommentthedebugcode inthe ↪ ValidateServerCertificatefunctionafirsttimetodeterminethevaluetopin. private const string SupportedPublicKey =\"3082010A02820101009CD30CF05AE52E47B7725D3783B...\";//Shortened forreadability private static bool ValidateServerCertificate( object sender, X509Certificatecertificate, X509Chainchain, SslPolicyErrorssslPolicyErrors ) { //Log.Debug(\"XamarinPinning\",chain.ChainElements[X].Certificate.GetPublicKeyString()); //returntrue; return SupportedPublicKey ==chain.ChainElements[1].Certificate.GetPublicKeyString(); } protected override void OnCreate(BundlesavedInstanceState) { System.Net.ServicePointManager.ServerCertificateValidationCallback +=ValidateServerCertificate; base.OnCreate(savedInstanceState); SetContentView(Resource.Layout.Main); TesteAsync(\"https://security.claudio.pt\"); } InthisparticularexamplewearepinningtheintermediateCAofthecertificatechain. TheoutputoftheHTTPresponse willbeavailableinthesystemlogs. SampleXamarinappwiththepreviousexamplecanbeobtainedontheMASTGrepository After decompressing the APK file, use a .NET decompiler like dotPeak, ILSpy or dnSpy to decompile the app dlls stored insidethe‘Assemblies’folderandconfirmtheusageoftheServicePointManager. Learnmore: • Certificate and Public Key Pinning with Xamarin - https://thomasbandt.com/certificate-and-public-key-pinning- with-xamarin • ServicePointManager-https://msdn.microsoft.com/en-us/library/system.net.servicepointmanager(v=vs.110).aspx Cordova Applications 237\\nHybrid applications based on Cordova do not support Certificate Pinning natively, so plugins are used to achieve this. The most common one is PhoneGap SSL Certificate Checker. The check method is used to confirm the fingerprint and callbackswilldeterminethenextsteps. //Endpointtoverifyagainstcertificatepinning. varserver =\"https://www.owasp.org\"; //SHA256Fingerprint(Canbeobtainedvia\"openssls_client-connecthostname:443|opensslx509-noout-fingerprint-sha256\" varfingerprint =\"D8EF3CDF7EF644BA04ECD59714BB004A7AF52663 53874E766777F0F4CCED67B9\"; window.plugins.sslCertificateChecker.check( successCallback, errorCallback, server, fingerprint); function successCallback(message){ alert(message); //Messageisalways:CONNECTION_SECURE. //Nowdosomethingwiththetrustedserver. } function errorCallback(message){ alert(message); if(message ===\"CONNECTION_NOT_SECURE\"){ //Thereislikelyamaninthemiddleattackgoingon,becareful! }else if(message.indexOf(\"CONNECTION_FAILED\")>-1){ //Therewasnoconnection(yet).Internetmaybedown.Tryagain(afewtimes)afteralittletimeout. } } AfterdecompressingtheAPKfile,Cordova/Phonegapfileswillbelocatedinthe/assets/wwwfolder. The‘plugins’folderwill giveyouthevisibilityofthepluginsused. WewillneedtosearchforthismethodsintheJavaScriptcodeoftheapplication toconfirmitsusage. Dynamic Analysis Followtheinstructionsfrom“TestingEndpointIdentifyVerification>DynamicAnalysis”. Ifdoingsodoesn’tleadtotraffic beingproxied,itmaymeanthatcertificatepinningisactuallyimplementedandallsecuritymeasuresareinplace. Does thesamehappenforalldomains? As a quick smoke test, you can try to bypass certificate pinning using objection as described in “Bypassing Certificate Pinning”. PinningrelatedAPIsbeinghookedbyobjectionshouldappearinobjection’soutput. However,keepinmindthat:",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 93
  },
  "embedding": [
    -0.021891051903367043,
    0.018190430477261543,
    -0.024297237396240234,
    -0.06428287923336029,
    -0.008837863802909851,
    -0.02671704813838005,
    0.022576533257961273,
    0.022940779104828835,
    -0.020687583833932877,
    0.004439681302756071,
    0.05442200228571892,
    -0.07521137595176697,
    0.1203051432967186,
    0.004315516911447048,
    -0.0024346651043742895,
    -0.017217712476849556,
    0.05196276679635048,
    0.039203498512506485,
    -0.02427194081246853,
    0.02174939215183258,
    0.030240273103117943,
    0.029297063127160072,
    0.006255534011870623,
    -0.06278573721647263,
    0.015443236567080021,
    -0.017116760835051537,
    0.009976852685213089,
    -0.008514291606843472,
    -0.07257169485092163,
    0.014763510785996914,
    0.042074162513017654,
    -0.002454797737300396,
    0.04530324786901474,
    0.045922234654426575,
    0.025517383590340614,
    -0.043223507702350616,
    -0.0073232813738286495,
    0.015462764538824558,
    0.03219645097851753,
    0.04163703694939613,
    0.02797963097691536,
    0.0014231513487175107,
    -0.008693583309650421,
    0.05731046572327614,
    -0.07211413234472275,
    0.0006911478703841567,
    0.040780000388622284,
    -0.07186247408390045,
    -0.012611104175448418,
    -0.0037942160852253437,
    0.0768931433558464,
    0.040541425347328186,
    0.005492542404681444,
    0.08862216025590897,
    -0.07466346770524979,
    0.03665134310722351,
    -0.02237319014966488,
    0.05740991234779358,
    0.01982758566737175,
    0.04399105906486511,
    0.04776594787836075,
    -0.015190930105745792,
    -0.01601821929216385,
    -0.014856317080557346,
    -0.037000127136707306,
    0.08588185906410217,
    -0.012516958639025688,
    0.018674738705158234,
    0.03411734849214554,
    0.0017990111373364925,
    -0.009948295541107655,
    0.07353290915489197,
    0.005282098893076181,
    -0.04650116339325905,
    0.0014973365468904376,
    0.060661643743515015,
    0.00018819754768628627,
    0.0030726026743650436,
    -0.042146235704422,
    -0.13523636758327484,
    0.06459394097328186,
    0.028167979791760445,
    0.03913658857345581,
    0.08546502143144608,
    -0.051787834614515305,
    0.08396255970001221,
    0.03870139643549919,
    -0.07295490056276321,
    0.05234437435865402,
    0.07860904932022095,
    0.053230542689561844,
    -0.0008507888996973634,
    -0.11243580281734467,
    -0.033596523106098175,
    0.033925119787454605,
    0.020036105066537857,
    -0.057706452906131744,
    -0.014198855496942997,
    -0.07330173254013062,
    0.004564029164612293,
    0.06707479804754257,
    -0.06840332597494125,
    -0.016059787943959236,
    -0.06220462918281555,
    0.05309460312128067,
    0.049016036093235016,
    0.04922207444906235,
    -0.05729236826300621,
    -0.012060572393238544,
    0.07039996981620789,
    0.004123487509787083,
    -0.0354076623916626,
    0.01804741472005844,
    -0.054248008877038956,
    0.014814973808825016,
    0.07662366330623627,
    -0.012398886494338512,
    0.04768729954957962,
    0.043272219598293304,
    -0.0012067868374288082,
    -0.04085766151547432,
    -0.058901961892843246,
    0.03935956582427025,
    -0.08788295835256577,
    -0.05855559557676315,
    0.0799027681350708,
    -0.05868154764175415,
    1.7929860883498446e-32,
    -0.01981986127793789,
    0.08275340497493744,
    -0.03367065265774727,
    0.006161050871014595,
    -0.0018589759711176157,
    0.0013835537247359753,
    -0.009002584032714367,
    0.007915535010397434,
    0.011216901242733002,
    -0.08400671184062958,
    -0.03344820812344551,
    0.007883213460445404,
    -0.05559730529785156,
    -0.10924925655126572,
    -0.02966693416237831,
    0.007097956724464893,
    -0.01425027847290039,
    0.03054925613105297,
    0.08875726163387299,
    0.01641903631389141,
    -0.04303479939699173,
    -0.07059746980667114,
    0.046913888305425644,
    -0.0697917714715004,
    -0.03433861956000328,
    0.023428192362189293,
    0.033675555139780045,
    0.013044305145740509,
    -0.027630213648080826,
    0.007818724028766155,
    -0.11419270932674408,
    0.03780223801732063,
    0.040805645287036896,
    0.07658761739730835,
    0.05237162485718727,
    -0.019721265882253647,
    -0.014357485808432102,
    -0.030530044808983803,
    0.0018476358382031322,
    -0.04873181879520416,
    -0.008534279651939869,
    -0.06971388310194016,
    -0.05791506916284561,
    0.06624108552932739,
    0.03018777258694172,
    -0.05448637530207634,
    -0.07631316781044006,
    -0.006512240506708622,
    0.04857517406344414,
    0.03646049648523331,
    -0.06665275245904922,
    -0.012429751455783844,
    0.002224769676104188,
    -0.11666751652956009,
    -0.04884159937500954,
    -0.057124827057123184,
    -0.06865524500608444,
    0.030285701155662537,
    -0.020331978797912598,
    -0.022638872265815735,
    -0.02898293361067772,
    -0.002440506126731634,
    -0.006403616163879633,
    -0.05376721918582916,
    0.020989399403333664,
    0.03467123210430145,
    -0.021617479622364044,
    -0.09693139791488647,
    -0.009409869089722633,
    -0.052530091255903244,
    -0.06480862200260162,
    -0.04036640003323555,
    0.03529730811715126,
    0.038620416074991226,
    -0.0638410747051239,
    0.01734469085931778,
    0.006339801475405693,
    0.08156722784042358,
    -0.03450876101851463,
    -0.07358645647764206,
    0.0020359030459076166,
    0.05283811688423157,
    0.041981346905231476,
    0.031742505729198456,
    -0.050167448818683624,
    -0.06055803596973419,
    0.0096603874117136,
    -0.06525041162967682,
    -0.023934414610266685,
    0.049779798835515976,
    0.03209070488810539,
    -0.014486338011920452,
    0.02439998835325241,
    0.07236359268426895,
    -0.022782500833272934,
    -1.7088875490721718e-32,
    -0.015360485762357712,
    -0.04730694741010666,
    -0.03469774127006531,
    -0.036009371280670166,
    0.007254684343934059,
    -0.03968086838722229,
    -0.04618658125400543,
    0.0879335030913353,
    0.012811892665922642,
    0.009001370519399643,
    0.0627540796995163,
    -0.05834980309009552,
    0.025943618267774582,
    -0.10575306415557861,
    0.007020985707640648,
    0.02809341438114643,
    0.042630717158317566,
    0.04781508445739746,
    -0.007291948888450861,
    -0.008475651033222675,
    0.040034372359514236,
    -0.001227149274200201,
    0.0028875484131276608,
    0.10924961417913437,
    0.020733032375574112,
    -0.060683224350214005,
    -0.0321454219520092,
    0.0028872427064925432,
    -0.015354844741523266,
    -0.026152288541197777,
    0.03461176156997681,
    0.04099075868725777,
    -0.061161693185567856,
    -0.020519282668828964,
    -0.068959079682827,
    -0.036488961428403854,
    -0.04086273908615112,
    -0.0195554718375206,
    0.024213803932070732,
    0.028528355062007904,
    0.028083786368370056,
    -0.026578862220048904,
    -0.034487415105104446,
    0.03588045760989189,
    0.04077460244297981,
    -0.04220859706401825,
    0.03835565596818924,
    -0.05816563963890076,
    -0.007431737147271633,
    -0.005522475112229586,
    0.07980860769748688,
    -0.05213266238570213,
    0.02111859805881977,
    0.026345539838075638,
    0.07033123075962067,
    0.15646331012248993,
    0.10350767523050308,
    0.050307366997003555,
    0.053223755210638046,
    -0.024297574535012245,
    0.06746961921453476,
    -0.05859222263097763,
    -0.062083229422569275,
    0.10213342308998108,
    -0.012921447865664959,
    0.053585778921842575,
    -0.0020992946811020374,
    0.0552556999027729,
    -0.039550382643938065,
    0.09999603033065796,
    -0.007393464911729097,
    -0.16269584000110626,
    -0.07192330062389374,
    -0.0024034755770117044,
    -0.021329820156097412,
    -0.02291172556579113,
    0.07249754667282104,
    -0.030436435714364052,
    -0.09254800528287888,
    0.055919099599123,
    -0.020866375416517258,
    0.04657426476478577,
    -0.10221033543348312,
    -0.022416451945900917,
    0.0878211185336113,
    -0.062484871596097946,
    -0.03863681107759476,
    0.015546903014183044,
    -0.03304748237133026,
    0.09040457755327225,
    -0.09995605051517487,
    -0.009660439565777779,
    -0.09305700659751892,
    0.03328217193484306,
    -0.03314712643623352,
    -6.421667109179907e-08,
    0.05547599121928215,
    0.00047830038238316774,
    -0.04483218118548393,
    -0.041045136749744415,
    0.06227665767073631,
    0.03675476834177971,
    0.026960184797644615,
    -0.0383940152823925,
    0.05099121853709221,
    -0.014993938617408276,
    -0.052786219865083694,
    0.004659404046833515,
    -0.09260333329439163,
    -0.04096323251724243,
    -0.011039779521524906,
    0.008824219927191734,
    -0.03934496268630028,
    0.03055260330438614,
    0.017427315935492516,
    0.05150770768523216,
    0.039142075926065445,
    -0.05183932185173035,
    -0.058506280183792114,
    0.060107871890068054,
    0.052020344883203506,
    0.025595149025321007,
    0.04277130216360092,
    0.03474785014986992,
    0.037931282073259354,
    0.12978781759738922,
    0.011383278295397758,
    -0.06118251010775566,
    0.04779130965471268,
    -0.09969137609004974,
    -0.08120168000459671,
    0.22358685731887817,
    -0.02201315201818943,
    -0.039305515587329865,
    0.027602028101682663,
    0.027978647500276566,
    -0.07215650379657745,
    0.017672011628746986,
    0.06749673187732697,
    0.015994690358638763,
    -0.04531320929527283,
    -0.021952670067548752,
    0.058132655918598175,
    0.04737496376037598,
    0.09148962050676346,
    -0.011655047535896301,
    -0.07837472856044769,
    -0.04374883696436882,
    -0.05546674504876137,
    -0.03356313332915306,
    -0.093439981341362,
    0.04065916687250137,
    -0.02115103416144848,
    -0.050319042056798935,
    0.008271466940641403,
    0.014397584833204746,
    -0.024980710819363594,
    0.027739927172660828,
    0.00819436926394701,
    -0.008567342534661293
  ]
}