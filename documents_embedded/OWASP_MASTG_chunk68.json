{
  "text": "this command fails, try running the following commandmount -o rw,remount -t ext4 /system • Preparetheproxy’sCAcertificatestomatchsystemcertificatesformat. Exporttheproxy’scertificatesinderformat (thisisthedefaultformatinBurpSuite)thenrunthefollowingcommands: $openssl x509 -inform DER-incacert.der -out cacert.pem $openssl x509 -inform PEM-subject_hash_old -incacert.pem |head -1 mvcacert.pem <hash>.0 • Finally,copythe<hash>.0fileintothedirectory/system/etc/security/cacertsandthenrunthefollowingcommand: chmod 644<hash>.0 By following the steps described above you allow any application to trust the proxy’s certificate, which allows you to interceptitstraffic,unlessofcoursetheapplicationusesSSLpinning. Potential Obstacles Applicationsoftenimplementsecuritycontrolsthatmakeitmoredifficulttoperformasecurityreviewoftheapplication, suchasrootdetectionandcertificatepinning. Ideally,youwouldacquirebothaversionoftheapplicationthathasthese controlsenabled,andonewherethecontrolsaredisabled. Thisallowsyoutoanalyzetheproperimplementationofthe controls,afterwhichyoucancontinuewiththeless-secureversionforfurthertests. Of course, this is not always possible, and you may need to perform a black-box assessment on an application where allsecuritycontrolsareenabled. Thesectionbelowshowsyouhowyoucancircumventcertificatepinningfordifferent applications. Client Isolation in Wireless Networks Onceyou have setup an interceptionproxyandhave a MITM position you mightstill not be able to seeanything. This mightbeduetorestrictionsintheapp(seenextsection)butcanalsobeduetosocalledclientisolationintheWi-Fithat youareconnectedto. WirelessClientIsolationisasecurityfeaturethatpreventswirelessclientsfromcommunicatingwithoneanother. This featureisusefulforguestandBYODSSIDsaddingalevelofsecuritytolimitattacksandthreatsbetweendevicesconnected tothewirelessnetworks. WhattodoiftheWi-Fiweneedfortestinghasclientisolation? YoucanconfiguretheproxyonyourAndroiddevicetopointto127.0.0.1:8080,connectyourphoneviaUSBtoyourhost computeranduseadbtomakeareverseportforwarding: 133\\nadbreversetcp:8080tcp:8080 Once you have done this all proxy traffic on your Android phone will be going to port 8080 on 127.0.0.1 and it will be redirectedviaadbto127.0.0.1:8080onyourhostcomputerandyouwillseenowthetrafficinyourBurp. Withthistrick youareabletotestandintercepttrafficalsoinWi-Fisthathaveclientisolation. Non-Proxy Aware Apps OnceyouhavesetupaninterceptionproxyandhaveaMITMpositionyoumightstillnotbeabletoseeanything. Thisis mainlyduetothefollowingreasons: • TheappisusingaframeworklikeXamarinthatsimplyisnotusingtheproxysettingsoftheAndroidOSor • Theappyouaretestingisverifyingifaproxyissetandisnotallowingnowanycommunication. In both scenarios you would need additional steps to finally being able to see the traffic. In the sections below we are describingtwodifferentsolutions,bettercapandiptables. You could also use an access point that is under your control to redirect the traffic, but this would require additional hardwareandwefocusfornowonsoftwaresolutions. Forbothsolutionsyouneedtoactivate“Supportinvisibleproxying”inBurp,inProxyTab/Options/EditInterface. iptables YoucanuseiptablesontheAndroiddevicetoredirectalltraffictoyourinterceptionproxy. Thefollowingcommandwould redirectport80toyourproxyrunningonport8080 iptables -tnat-AOUTPUT -ptcp--dport 80-jDNAT --to-destination <Your-Proxy-IP>:8080 VerifytheiptablessettingsandchecktheIPandport. $iptables -tnat-L ChainPREROUTING (policyACCEPT) target protoptsource destination ChainINPUT (policyACCEPT) target protoptsource destination ChainOUTPUT (policyACCEPT) target protoptsource destination DNAT tcp -- anywhere anywhere tcpdpt:5288to:<Your-Proxy-IP>:8080 ChainPOSTROUTING (policyACCEPT) target protoptsource destination Chainnatctrl_nat_POSTROUTING (0references) target protoptsource destination Chainoem_nat_pre (0references) target protoptsource destination Incaseyouwanttoresettheiptablesconfigurationyoucanflushtherules: iptables -tnat-F bettercap Readthechapter“TestingNetworkCommunication”andthetestcase“SimulatingaMan-in-the-MiddleAttack”forfurther preparationandinstructionsforrunningbettercap. ThehostcomputerwhereyourunyourproxyandtheAndroiddevicemustbeconnectedtothesamewirelessnetwork. Startbettercapwiththefollowingcommand,replacingtheIPaddressbelow(X.X.X.X)withtheIPaddressofyourAndroid device. 134\\n$sudobettercap -eval \"setarp.spoof.targetsX.X.X.X;arp.spoofon;setarp.spoof.internaltrue;setarp.spoof.fullduplextrue;\" bettercapv2.22 (builtfordarwinamd64withgo1.12.1)[type 'help' foralistofcommands] [19:21:39] [sys.log][inf]arp.spoofenablingforwarding [19:21:39] [sys.log][inf]arp.spoofarpspooferstarted,probing1targets. Proxy Detection Somemobileappsaretryingtodetectifaproxyisset. Ifthat’sthecasetheywillassumethatthisismaliciousandwill notworkproperly. Inordertobypasssuchaprotectionmechanismyoucouldeithersetupbettercaporconfigureiptablesthatdon’tneed aproxysetuponyourAndroidphone. Athirdoptionwedidn’tmentionbeforeandthatisapplicableinthisscenariois usingFrida. ItispossibleonAndroidtodetectifasystemproxyissetbyqueryingtheProxyInfoclassandcheckthe getHost()andgetPort()methods. Theremightbevariousothermethodstoachievethesametaskandyouwouldneed todecompiletheAPKinordertoidentifytheactualclassandmethodname. BelowyoucanfindboilerplatesourcecodeforaFridascriptthatwillhelpyoutooverloadthemethod(inthiscasecalled isProxySet)thatisverifyingifaproxyissetandwillalwaysreturnfalse. Evenifaproxyisnowconfiguredtheappwill nowthinkthatnoneissetasthefunctionreturnsfalse. setTimeout(function(){ Java.perform(function (){ console.log(\"[*]Scriptloaded\") varProxy =Java.use(\"<package-name>.<class-name>\") Proxy.isProxySet.overload().implementation =function(){ console.log(\"[*]isProxySetfunctioninvoked\") return false } }); }); Method Hooking Platform: android Xposed Let’sassumeyou’retestinganappthat’sstubbornlyquittingonyourrooteddevice. Youdecompiletheappandfindthe followinghighlysuspectmethod: package com.example.a.b public static boolean c(){ intv3=0; boolean v0=false; String[]v1=newString[]{\"/sbin/\",\"/system/bin/\",\"/system/xbin/\",\"/data/local/xbin/\", \"/data/local/bin/\",\"/system/sd/xbin/\",\"/system/bin/failsafe/\",\"/data/local/\"}; intv2=v1.length; for(intv3=0;v3<v2;v3++){ if(newFile(String.valueOf(v1[v3])+\"su\").exists()){ v0=true; return v0; } } return v0; } Thismethoditeratesthroughalistofdirectoriesandreturnstrue(devicerooted)ifitfindsthesubinaryinanyofthem. Checkslikethisareeasytodeactivateallyouhavetodoisreplacethecodewithsomethingthatreturns“false”. Method hookingwithanXposedmoduleisonewaytodothis(see“AndroidBasicSecurityTesting”formoredetailsonXposed installationandbasics). 135\\nThe method XposedHelpers.findAndHookMethod allows you to override existing class methods. By inspecting the de- compiledsourcecode, youcanfindoutthatthemethodperformingthecheckisc. Thismethodislocatedintheclass com.example.a.b. ThefollowingisanXposedmodulethatoverridesthefunctionsothatitalwaysreturnsfalse: package com.awesome.pentestcompany; import static de.robv.android.xposed.XposedHelpers.findAndHookMethod; import de.robv.android.xposed.IXposedHookLoadPackage; import de.robv.android.xposed.XposedBridge; import de.robv.android.xposed.XC_MethodHook; import de.robv.android.xposed.callbacks.XC_LoadPackage.LoadPackageParam; public class DisableRootCheck implements IXposedHookLoadPackage { public void handleLoadPackage(final LoadPackageParamlpparam)throws Throwable { if(!lpparam.packageName.equals(\"com.example.targetapp\")) return; findAndHookMethod(\"com.example.a.b\",lpparam.classLoader,\"c\",newXC_MethodHook(){ @Override protected void beforeHookedMethod(MethodHookParamparam)throws Throwable { XposedBridge.log(\"Caughtrootcheck!\"); param.setResult(false); } }); } } JustlikeregularAndroidapps,modulesforXposedaredevelopedanddeployedwithAndroidStudio. Formoredetailson writing,compiling,andinstallingXposedmodules,refertothetutorialprovidedbyitsauthor,rovo89. Frida We’lluseFridatosolvetheUnCrackableAppforAndroidLevel1anddemonstratehowwecaneasilybypassrootdetection andextractsecretdatafromtheapp. Whenyoustartthecrackmeapponanemulatororarooteddevice,you’llfindthattheitpresentsadialogboxandexits assoonasyoupress“OK”becauseitdetectedroot: 136\\nLet’sseehowwecanpreventthis. Themainmethod(decompiledwithCFR)lookslikethis: package sg.vantagepoint.uncrackable1; import android.app.Activity; import android.app.AlertDialog; import android.content.Context; import android.content.DialogInterface; import android.os.Bundle; import android.text.Editable; import android.view.View; import android.widget.EditText; import sg.vantagepoint.a.b; import sg.vantagepoint.a.c; import sg.vantagepoint.uncrackable1.a; public class MainActivity extends Activity { private void a(Stringstring){ AlertDialogalertDialog =newAlertDialog.Builder((Context)this).create(); alertDialog.setTitle((CharSequence)string); alertDialog.setMessage((CharSequence)\"Thisisunacceptable.Theappisnowgoingtoexit.\"); alertDialog.setButton(-3,(CharSequence)\"OK\",newDialogInterface.OnClickListener(){ public void onClick(DialogInterfacedialogInterface,intn){ System.exit((int)0); } }); alertDialog.setCancelable(false); alertDialog.show(); } protected void onCreate(Bundlebundle){ if(c.a()||c.b()||c.c()){ this.a(\"Rootdetected!\"); } if(b.a(this.getApplicationContext())) { this.a(\"Appisdebuggable!\"); } super.onCreate(bundle); this.setContentView(2130903040); } 137\\n/* *Enabledaggressiveblocksorting */ public void verify(Viewobject){ object =((EditText)this.findViewById(2130837505)).getText().toString(); AlertDialogalertDialog =newAlertDialog.Builder((Context)this).create(); if(a.a((String)object)){ alertDialog.setTitle((CharSequence)\"Success!\"); object =\"Thisisthecorrectsecret.\"; }else { alertDialog.setTitle((CharSequence)\"Nope...\"); object =\"That'snotit.Tryagain.\"; } alertDialog.setMessage((CharSequence)object); alertDialog.setButton(-3,(CharSequence)\"OK\",newDialogInterface.OnClickListener(){ public void onClick(DialogInterfacedialogInterface,intn){ dialogInterface.dismiss(); } }); alertDialog.show(); } } Notice the “Root detected”",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 68
  },
  "embedding": [
    -0.04161309078335762,
    0.05179682374000549,
    -0.04201755300164223,
    -0.01888209767639637,
    -0.0007366456557065248,
    0.0013293965021148324,
    -0.0014678718289360404,
    0.025198742747306824,
    -0.0196691881865263,
    0.017458945512771606,
    0.04107768088579178,
    -0.07921965420246124,
    0.1251300722360611,
    0.02568374201655388,
    0.029831713065505028,
    0.02780567668378353,
    -0.00288860104046762,
    0.028013285249471664,
    0.021570391952991486,
    0.011440834030508995,
    -0.002020660089328885,
    -0.0262142401188612,
    0.009454002603888512,
    0.053682707250118256,
    -0.049294956028461456,
    -0.08711965382099152,
    -0.08894128352403641,
    -0.023417970165610313,
    -0.04908469319343567,
    -0.018426064401865005,
    0.050485461950302124,
    0.009050977416336536,
    -0.09945420175790787,
    -0.037692997604608536,
    0.04219822213053703,
    0.0766759067773819,
    0.01900188997387886,
    0.046135395765304565,
    -0.0014158588601276278,
    -0.09179849177598953,
    0.11061343550682068,
    0.01895974390208721,
    -0.033745381981134415,
    0.00971845630556345,
    0.009553971700370312,
    0.025519058108329773,
    0.10597164928913116,
    -0.05038851499557495,
    -0.029865432530641556,
    0.034288439899683,
    -0.05439699441194534,
    -0.005602206569164991,
    0.03658762201666832,
    0.037776824086904526,
    -0.013656788505613804,
    -0.05243745073676109,
    -0.00942286942154169,
    0.05879608541727066,
    0.008514217101037502,
    -0.005958385765552521,
    0.0076484899036586285,
    -0.010378544218838215,
    -0.024511756375432014,
    -0.03925706446170807,
    -0.11059752106666565,
    0.031634338200092316,
    -0.003149131080135703,
    -0.022392990067601204,
    -0.01122213527560234,
    0.038779549300670624,
    -0.05907997488975525,
    0.024410653859376907,
    -0.020886782556772232,
    0.023469222709536552,
    0.07013975083827972,
    0.03923765942454338,
    -0.07236622273921967,
    -0.012033293023705482,
    0.02395784482359886,
    -0.14260399341583252,
    0.040916286408901215,
    0.04380158334970474,
    -0.08273211866617203,
    0.008688650093972683,
    0.039256077259778976,
    0.05368109792470932,
    0.039106979966163635,
    -0.038816723972558975,
    0.05493051931262016,
    0.05284833908081055,
    0.09441574662923813,
    -0.0222205501049757,
    -0.05303864926099777,
    0.03539915755391121,
    0.09780369699001312,
    0.01444521639496088,
    0.04423483461141586,
    0.06826009601354599,
    -0.021779196336865425,
    0.01853926293551922,
    0.012730097398161888,
    0.012883641757071018,
    -0.025235876441001892,
    -0.01816769689321518,
    -0.01298685371875763,
    -0.005837410222738981,
    0.013938219286501408,
    0.05388084799051285,
    -0.02484705112874508,
    0.020636359229683876,
    0.0467156320810318,
    -0.06663016974925995,
    -0.006302005145698786,
    -0.0526786632835865,
    -0.001974515151232481,
    0.13916204869747162,
    0.00734357163310051,
    -0.004456359427422285,
    -0.010515482164919376,
    -0.05409330874681473,
    -0.02538071572780609,
    -0.02657613717019558,
    0.03418648615479469,
    0.013328035362064838,
    0.006549773272126913,
    -0.014396527782082558,
    0.046172648668289185,
    1.4251032293797076e-32,
    0.06692390143871307,
    0.020415402948856354,
    -0.014606133103370667,
    0.07404816150665283,
    0.04506222531199455,
    0.008609774522483349,
    0.1276896595954895,
    0.002249242505058646,
    0.019599828869104385,
    -0.022660989314317703,
    0.001271760556846857,
    -0.026843614876270294,
    -0.050720322877168655,
    -0.03777194023132324,
    -0.019068965688347816,
    -0.048207610845565796,
    -0.04407833516597748,
    0.015669824555516243,
    0.01734808087348938,
    -0.02934272214770317,
    0.02202942781150341,
    -0.09503073990345001,
    -0.03544794023036957,
    -0.11101778596639633,
    -0.03899557888507843,
    0.030300909653306007,
    0.002021669177338481,
    0.01767260581254959,
    0.014815986156463623,
    0.02305390127003193,
    0.08412081003189087,
    0.0495128370821476,
    0.036437805742025375,
    -0.026792829856276512,
    0.03502970188856125,
    -0.06680797040462494,
    0.11676020920276642,
    -0.016627756878733635,
    -0.018768098205327988,
    -0.023473752662539482,
    0.016098685562610626,
    -0.00744175398722291,
    0.09864538162946701,
    0.01242868136614561,
    0.023747306317090988,
    -0.12634682655334473,
    -0.04610064998269081,
    0.015905899927020073,
    0.16359387338161469,
    0.03321196138858795,
    0.05944936349987984,
    0.0010722361039370298,
    0.036261215806007385,
    -0.11050713062286377,
    0.010836961679160595,
    -0.014983993023633957,
    -0.06646044552326202,
    -0.011211580596864223,
    -0.11479363590478897,
    -0.10715297609567642,
    -0.0332619734108448,
    0.044732898473739624,
    -0.01701478660106659,
    -0.020035484805703163,
    0.0762517973780632,
    -0.0015129094244912267,
    -0.03714131936430931,
    -0.0340326689183712,
    -0.09741479158401489,
    -0.010052543133497238,
    -0.04366254806518555,
    -0.0443461574614048,
    -0.007549223955720663,
    -0.027727413922548294,
    0.06477030366659164,
    -0.02908264845609665,
    0.020485470071434975,
    0.05293336510658264,
    0.038604870438575745,
    -0.010275930166244507,
    0.03236020728945732,
    0.014552381820976734,
    -0.0645725205540657,
    -0.01642581634223461,
    -0.024420324712991714,
    0.02832617051899433,
    0.027617059648036957,
    -0.040884897112846375,
    0.0020510328467935324,
    -0.03856702148914337,
    0.03218017891049385,
    -0.0011024066479876637,
    0.020606286823749542,
    0.08825549483299255,
    -0.09392739087343216,
    -1.3161202093790963e-32,
    0.01869034767150879,
    -0.04428356513381004,
    0.10785531997680664,
    -0.018416153267025948,
    -0.00198367633856833,
    -0.051610928028821945,
    -0.014430077746510506,
    0.05097784474492073,
    0.0026590856723487377,
    0.011317504569888115,
    -0.00730173522606492,
    0.004058006685227156,
    0.05878077819943428,
    -0.027893047779798508,
    -0.05055314302444458,
    -0.012168225832283497,
    -0.04295286163687706,
    0.008278856985270977,
    -0.03245801478624344,
    0.017706405371427536,
    0.025636371225118637,
    0.04203817620873451,
    0.020323727279901505,
    0.09612245112657547,
    0.028295783326029778,
    0.04537294805049896,
    0.02473054639995098,
    0.08689485490322113,
    0.06111562252044678,
    -0.019595779478549957,
    0.018033679574728012,
    0.00036013033241033554,
    -0.042703140527009964,
    0.039271481335163116,
    -0.11778389662504196,
    -0.04399895295500755,
    -0.013369712047278881,
    0.0636533722281456,
    -0.0242071021348238,
    -0.03038821741938591,
    0.027475114911794662,
    -0.050780247896909714,
    -0.024749496951699257,
    -0.06110474094748497,
    0.10395276546478271,
    -0.06017908453941345,
    0.031448036432266235,
    0.02123701199889183,
    0.022513801231980324,
    0.049760788679122925,
    0.06595411896705627,
    0.03333475440740585,
    0.054488155990839005,
    0.05013885349035263,
    0.08399949967861176,
    0.0882338285446167,
    -0.03173195198178291,
    0.056597933173179626,
    -0.09433013200759888,
    -0.0933593288064003,
    0.047962602227926254,
    0.021964075043797493,
    -0.00018760553211905062,
    0.021405285224318504,
    0.030759768560528755,
    0.06642638891935349,
    -0.1224987655878067,
    -0.017834670841693878,
    0.0044168997555971146,
    0.012756314128637314,
    -0.05922393500804901,
    -0.05235202983021736,
    -0.10312587767839432,
    -0.1362646520137787,
    0.08600187301635742,
    -0.02998572401702404,
    -0.01565166935324669,
    -0.04987505450844765,
    -0.042476870119571686,
    0.089462049305439,
    0.04920496419072151,
    -0.005088768433779478,
    -0.059045083820819855,
    -0.06192731484770775,
    0.04901004582643509,
    -0.03254030644893646,
    -0.011656281538307667,
    0.05471654608845711,
    0.017256412655115128,
    -0.015512332320213318,
    -0.05007040873169899,
    0.022258726879954338,
    -0.02076457254588604,
    0.006041348911821842,
    0.05931972712278366,
    -6.724170731331469e-08,
    0.016652312129735947,
    0.03213254362344742,
    -0.06103292852640152,
    -0.04169826954603195,
    -0.005316519178450108,
    -0.014191044494509697,
    -0.007746150717139244,
    -0.15831969678401947,
    -0.07504506409168243,
    -0.03424040973186493,
    -0.005403315182775259,
    -0.01720680668950081,
    -0.05076220631599426,
    0.023165695369243622,
    -0.03625776991248131,
    -0.13035419583320618,
    -0.04719588905572891,
    0.005767619237303734,
    -0.022245706990361214,
    -0.06015518307685852,
    -0.0317392498254776,
    -0.09445025771856308,
    -0.04531702399253845,
    0.04741644114255905,
    -0.015598960220813751,
    0.05997627601027489,
    0.06517276912927628,
    -0.030914656817913055,
    0.017301015555858612,
    0.06841761618852615,
    -0.08938491344451904,
    -0.07084441930055618,
    -0.017272159457206726,
    -0.0003961349430028349,
    -0.06916623562574387,
    0.0736207440495491,
    0.009654250927269459,
    -0.02073875442147255,
    0.03741775453090668,
    0.06010458990931511,
    0.043506551533937454,
    0.08222837746143341,
    0.01555771753191948,
    0.04447801038622856,
    -0.036771222949028015,
    -0.017657091841101646,
    -0.05688999593257904,
    0.05031314119696617,
    0.029578551650047302,
    0.0294785238802433,
    0.02819463051855564,
    -0.014055810868740082,
    -0.026987450197339058,
    -0.053840260952711105,
    -0.10701639205217361,
    0.03159084543585777,
    -0.03832826018333435,
    -0.013214637525379658,
    -0.039434950798749924,
    0.0336601696908474,
    0.08072564005851746,
    -0.08780564367771149,
    0.04683367535471916,
    0.020743578672409058
  ]
}