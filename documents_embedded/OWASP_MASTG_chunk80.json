{
  "text": "taint analysis. Another notable tool supporting taintanalysisforAndroidappsisGDA. Forourdemonstration,we’lluseFlowDroid’scommandlinetooltoperformtaintanalysisontheInsecureShopv1.0appli- cation. TheInsecureShopappacceptsausernameandpasswordasinputandstoresthemintheapp’ssharedpreferences. In ourtaintanalysis, we’reinterestedinhowthisstoredusernameandpasswordareused. Inthiscontext, theusername andpasswordarethesensitiveinformation,andreadingfromsharedpreferencesisthesource. Thesinkinthisanalysis couldbevariousoperations,suchassendinginfooverthenetwork,transmittinginfoviaanIntent,orstoringinfoinan externalfile. TouseFlowDroid,firstly,weneedtoprovideaninputlistofpotentialsourcesandsinkstoevaluatefor. Inourcase,reading fromsharedpreferenceswillbethesource,whileaddingparameterstoanIntentwillbethesink. Theconfigurationfile willlookasfollows(we’llnameit“source_sink.txt”): <android.content.SharedPreferences:java.lang.StringgetString(java.lang.String,java.lang.String)>->_SOURCE_ <android.content.Intent:android.content.IntentputExtra(java.lang.String,java.lang.CharSequence)>->_SINK_ <android.content.Intent:android.content.IntentputExtra(java.lang.String,char)>->_SINK_ <android.content.Intent:android.content.IntentputExtra(java.lang.String,java.lang.String)>->_SINK_ ToinvokeFlowDroidviathecommandline,usethefollowingcommand: 185\\njava-jarsoot-infoflow-cmd/target/soot-infoflow-cmd-jar-with-dependencies.jar\\ -aInsecureShop.apk\\ -pAndroid/Sdk/platforms\\ -ssource_sink.txt [main]INFOsoot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow-Thesinkvirtualinvoker2.<android.content.Intent:android.content.Intent ↪ putExtra(java.lang.String,java.lang.String)>(\"password\",$r5)inmethod<com.insecureshop.AboutUsActivity:voidonSendData(android.view.View)>wascalled ↪ withvaluesfromthefollowingsources: [main]INFOsoot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow--$r1=interfaceinvoke$r2.<android.content.SharedPreferences:java.lang.String ↪ getString(java.lang.String,java.lang.String)>(\"password\",\"\")inmethod<com.insecureshop.util.Prefs:java.lang.StringgetPassword()> ... [main]INFOsoot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow-Thesinkvirtualinvoker2.<android.content.Intent:android.content.Intent ↪ putExtra(java.lang.String,java.lang.String)>(\"username\",$r4)inmethod<com.insecureshop.AboutUsActivity:voidonSendData(android.view.View)>wascalled ↪ withvaluesfromthefollowingsources: [main]INFOsoot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow--$r1=interfaceinvoke$r2.<android.content.SharedPreferences:java.lang.String ↪ getString(java.lang.String,java.lang.String)>(\"username\",\"\")inmethod<com.insecureshop.util.Prefs:java.lang.StringgetUsername()> ... [main]INFOsoot.jimple.infoflow.android.SetupApplication-Found2leaks Theoutputalsousesthejimpleintermediaterepresentationandrevealstwoleaksintheapplication,eachcorresponding to the username and password. Given that the InsecureShop app is open-source, we can refer to its source code to validatethefindings,asshownbelow: //file:AboutActivity.kt funonSendData(view:View){ valuserName =Prefs.username!! valpassword =Prefs.password!! valintent =Intent(\"com.insecureshop.action.BROADCAST\") intent.putExtra(\"username\",userName) intent.putExtra(\"password\",password) sendBroadcast(intent) textView.text =\"InsecureShopisanintentionallydesignedvulnerableandroidappbuiltinKotlin.\" } Taint analysis is especially beneficial for automating data flow analysis in intricate applications. However, given the complexityofsomeapps,theaccuracyofsuchtoolscanvary. Thus,it’sessentialforreviewerstofindabalancebetween theaccuracyoftoolsandthetimespentonmanualanalysis. Waiting for the Debugger Platform: android TheUnCrackableAppforAndroidLevel1isnotstupid: itnoticesthatithasbeenrunindebuggablemodeandreactsby shuttingdown. Amodaldialogisshownimmediately,andthecrackmeterminatesonceyoutap“OK”. Fortunately,Android’s“Developeroptions”containtheuseful“WaitforDebugger”feature,whichallowsyoutoautomat- icallysuspendanappduringstartupuntilaJDWPdebuggerconnects. Withthisfeature,youcanconnectthedebugger beforethedetectionmechanismruns,andtrace,debug,anddeactivatethatmechanism. It’sreallyanunfairadvantage, but,ontheotherhand,reverseengineersneverplayfair! 186\\nIntheDeveloperoptions,pickUncrackable1asthedebuggingapplicationandactivatethe“WaitforDebugger”switch. 187\\nNote: Even with ro.debuggable set to “1” in default.prop, an app won’t show up in the “debug app” list unless the android:debuggableflagissetto\"true\"intheAndroidManifest. Emulation-based Analysis Platform: android The Android emulator is based on QEMU, a generic and open source machine emulator. QEMU emulates a guest CPU bytranslatingtheguestinstructionson-the-flyintoinstructionsthehostprocessorcanunderstand. Eachbasicblockof guestinstructionsisdisassembledandtranslatedintoanintermediaterepresentationcalledTinyCodeGenerator(TCG). TheTCGblockiscompiledintoablockofhostinstructions,storedinacodecache,andexecuted. Afterexecutionofthe basicblock,QEMUrepeatstheprocessforthenextblockofguestinstructions(orloadsthealreadytranslatedblockfrom thecache). Thewholeprocessiscalleddynamicbinarytranslation. BecausetheAndroidemulatorisaforkofQEMU,itcomeswithallQEMUfeatures,includingmonitoring,debugging,and tracingfacilities. QEMU-specificparameterscanbepassedtotheemulatorwiththe-qemucommandlineflag. Youcan useQEMU’sbuilt-intracingfacilitiestologexecutedinstructionsandvirtualregistervalues. StartingQEMUwiththe-d commandlineflagwillcauseittodumptheblocksofguestcode,microoperations,orhostinstructionsbeingexecuted. Withthe-d_asmflag,QEMUlogsallbasicblocksofguestcodeastheyenterQEMU’stranslationfunction. Thefollowing commandlogsalltranslatedblockstoafile: emulator -show-kernel -avd Nexus_4_API_19 -snapshot default-boot -no-snapshot-save -qemu -din_asm,cpu 2>/tmp/qemu.log Unfortunately,generatingacompleteguestinstructiontracewithQEMUisimpossiblebecausecodeblocksarewrittento thelogonlyatthetimetheyaretranslated,notwhenthey’retakenfromthecache. Forexample,ifablockisrepeatedly executed in a loop, only the first iteration will be printed to the log. There’s no way to disable TB caching in QEMU (besideshackingthesourcecode). Nevertheless,thefunctionalityissufficientforbasictasks,suchasreconstructingthe disassemblyofanativelyexecutedcryptographicalgorithm. 188\\nReverse Engineering Android Apps Platform: android Android’sopennessmakesitafavorableenvironmentforreverseengineers,offeringbigadvantagesthatarenotavailable withiOS.BecauseAndroidisopen-source,youcanstudyitssourcecodeattheAndroidOpenSourceProject(AOSP)and modifytheOSanditsstandardtoolsanywayyouwant. Evenonstandardretaildevices,itispossibletodothingslike activatingdevelopermodeandsideloadingappswithoutjumpingthroughmanyhoops. Fromthepowerfultoolsshipping withtheSDKtothewiderangeofavailablereverseengineeringtools,there’salotofnicetiestomakeyourlifeeasier. However,therearealsoafewAndroid-specificchallenges. Forexample,you’llneedtodealwithbothJavabytecodeand nativecode. JavaNativeInterface(JNI)issometimesdeliberatelyusedtoconfusereverseengineers(tobefair,thereare legitimatereasonsforusingJNI,suchasimprovingperformanceorsupportinglegacycode). Developerssometimesuse thenativelayerto“hide”dataandfunctionality,andtheymaystructuretheirappssuchthatexecutionfrequentlyjumps betweenthetwolayers. You’llneedatleastaworkingknowledgeofboththeJava-basedAndroidenvironmentandtheLinuxOSandKernel, on which Android is based. You’ll also need the right toolset to deal with both the bytecode running on the Java virtual machineandthenativecode. Repackaging Apps Platform: android Ifyouneedtotestonanon-jailbrokendeviceyoushouldlearnhowtorepackageanapptoenabledynamictestingon it. Useacomputertoperformallthestepsindicatedinthearticle“PatchingAndroidApplications”fromtheobjectionWiki. Onceyou’redoneyou’llbeabletopatchanAPKbycallingtheobjectioncommand: objectionpatchapk --source app-release.apk Thepatchedapplicationthenneedstobeinstalledusingadb,asexplainedin“InstallingApps”. Thisrepackagingmethodisenoughformostusecases. Formoreadvancedrepackaging,referto“AndroidTampering andReverseEngineering-Patching,RepackagingandRe-Signing”. 189\\nAndroid Data Storage Overview Thischapterdiscussestheimportanceofsecuringsensitivedata,likeauthenticationtokensandprivateinformation,vital formobilesecurity. We’lllookatAndroid’sAPIsforlocaldatastorageandsharebestpractices. While it’s preferable to limit sensitive data on local storage, or avoid it at all whenever possible, practical use cases oftennecessitateuserdatastorage. Forexample,toimproveuserexperience,appscacheauthenticationtokenslocally, circumventingtheneedforcomplexpasswordentryateachappstart. Appsmayalsoneedtostorepersonallyidentifiable information(PII)andothersensitivedata. Sensitivedatacanbecomevulnerableifimproperlyprotected,potentiallystoredinvariouslocations,includingthedevice oranexternalSDcard. It’simportanttoidentifytheinformationprocessedbythemobileappandclassifywhatcounts as sensitive data. Check out the “Identifying Sensitive Data” section in the “Mobile App Security Testing” chapter for data classification details. Refer to Security Tips for Storing Data in the Android developer’s guide for comprehensive insights. Sensitive information disclosure risks include potential information decryption, social engineering attacks (if PII is dis- closed), account hijacking (if session information or an authentication token is disclosed), and app exploitation with a paymentoption. In addition to data protection, validate and sanitize data from any storage source. This includes checking correct data typesandimplementingcryptographiccontrols,suchasHMACs,fordataintegrity. Androidoffersvariousdatastoragemethods,tailoredtousers,developers,andapplications. Commonpersistentstorage techniquesinclude: • SharedPreferences • SQLiteDatabases • FirebaseDatabases • RealmDatabases • InternalStorage • ExternalStorage • Keystore Additionally,otherAndroidfunctionsthatcanresultindatastorageandshouldbetestedinclude: • LoggingFunctions • AndroidBackups • ProcessesMemory • KeyboardCaches • Screenshots Understanding each relevant data storage function is crucial for performing the appropriate test cases. This overview providesabriefoutlineofthesedatastoragemethodsandpointstesterstofurtherrelevantdocumentation. Shared Preferences The SharedPreferences API is commonly used to permanently save small collections of key-value pairs. Data stored in a SharedPreferences object is written to a plain-text XML file. The SharedPreferences object can be declared world- readable(accessibletoallapps)orprivate. MisuseoftheSharedPreferencesAPIcanoftenleadtoexposureofsensitive data. Considerthefollowingexample: ExampleforJava: SharedPreferencessharedPref =getSharedPreferences(\"key\",MODE_WORLD_READABLE); SharedPreferences.Editor editor =sharedPref.edit();",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 80
  },
  "embedding": [
    -0.060704708099365234,
    -0.05401292070746422,
    -0.018936924636363983,
    -0.08755630999803543,
    0.004729525651782751,
    -0.022201605141162872,
    0.08344168215990067,
    0.03314782679080963,
    0.02519409917294979,
    -0.04227311909198761,
    0.0018149623647332191,
    -0.02586400881409645,
    0.058355335146188736,
    0.028114628046751022,
    -0.04075852409005165,
    -0.01536918617784977,
    0.04159357398748398,
    0.06171182543039322,
    -0.08779437839984894,
    0.036865588277578354,
    0.06367755681276321,
    0.02747766673564911,
    -0.022443776950240135,
    -0.034607600420713425,
    0.021732831373810768,
    0.011306149885058403,
    -0.07550839334726334,
    -0.059730757027864456,
    0.005882491823285818,
    0.006330265197902918,
    -0.062263522297143936,
    0.096900075674057,
    -0.022150345146656036,
    0.03867422416806221,
    0.020994413644075394,
    0.03580905497074127,
    -0.01751229353249073,
    0.04013127088546753,
    -0.03585668280720711,
    -0.0430668368935585,
    -0.028855860233306885,
    -0.03602485731244087,
    -0.058629900217056274,
    0.10434427112340927,
    -0.07438620179891586,
    -0.022630037739872932,
    -0.007450887467712164,
    -0.019635429605841637,
    -0.03638821095228195,
    0.028402138501405716,
    -0.027707384899258614,
    -0.018371855840086937,
    0.06350812315940857,
    0.15331029891967773,
    -0.03846639394760132,
    -0.0501432940363884,
    0.04430782422423363,
    0.034632083028554916,
    -0.023714685812592506,
    0.11270652711391449,
    -0.026300398632884026,
    0.036155156791210175,
    0.0040268078446388245,
    -0.006807101424783468,
    0.017733203247189522,
    0.06587056815624237,
    0.04473842680454254,
    0.05435866117477417,
    0.07488876581192017,
    -0.030333038419485092,
    -0.06042233109474182,
    0.007616408634930849,
    -0.060707252472639084,
    0.0694800466299057,
    0.02843104675412178,
    0.038169022649526596,
    -0.007357060443609953,
    0.016540365293622017,
    0.02137947827577591,
    -0.16111789643764496,
    0.007795431185513735,
    0.020140480250120163,
    0.04811207950115204,
    0.016832154244184494,
    -0.024176685139536858,
    0.06511721014976501,
    -0.027707070112228394,
    -0.012327359989285469,
    0.07902802526950836,
    0.09555108845233917,
    -0.018975351005792618,
    -0.04029077664017677,
    0.007590245921164751,
    -0.06206227466464043,
    0.009648287668824196,
    -0.01207822561264038,
    -0.06846337020397186,
    0.033699844032526016,
    -0.07415339350700378,
    0.04334910959005356,
    0.0008486759616062045,
    0.05202274024486542,
    -0.06696132570505142,
    -0.07682348042726517,
    0.057199809700250626,
    -0.021533073857426643,
    0.023970572277903557,
    -0.07085391879081726,
    0.04539567977190018,
    -0.004950677044689655,
    -0.024343349039554596,
    0.003916513174772263,
    0.015960635617375374,
    -0.06235893443226814,
    0.04276126250624657,
    0.06109169125556946,
    -0.014351882040500641,
    -0.007692235987633467,
    0.04371633753180504,
    0.02206714265048504,
    0.00787793006747961,
    0.017937423661351204,
    0.03410979360342026,
    0.017766186967492104,
    0.009886587038636208,
    -0.04703938961029053,
    -0.0773913711309433,
    1.98048889837592e-32,
    -0.004790834151208401,
    0.06132623180747032,
    -0.05412648618221283,
    0.043959636241197586,
    -0.04218480736017227,
    -0.027446052059531212,
    0.010685620829463005,
    0.012742462567985058,
    0.007553185801953077,
    -0.04584468528628349,
    -0.03976074606180191,
    0.0738563984632492,
    0.005652129650115967,
    -0.042926426976919174,
    0.04330555349588394,
    -0.01746160164475441,
    -0.06036922335624695,
    0.04652416333556175,
    -0.0017763151554390788,
    0.03261686861515045,
    0.0647992342710495,
    -0.047100115567445755,
    0.01733032986521721,
    0.009232315234839916,
    -0.06198684871196747,
    -0.039101433008909225,
    -0.02701808139681816,
    -0.010550319217145443,
    0.12773290276527405,
    0.0539076030254364,
    -0.05338696017861366,
    -0.04580966755747795,
    -0.04674714431166649,
    -0.016832726076245308,
    0.009974782355129719,
    -0.07019789516925812,
    0.08468274027109146,
    -0.0503760427236557,
    0.02538546361029148,
    -0.035625290125608444,
    -0.03749202936887741,
    0.001245870254933834,
    -0.031782474368810654,
    0.0025732568465173244,
    -0.0477420948445797,
    -0.0617016926407814,
    -0.06102721393108368,
    -0.05319159850478172,
    0.024683723226189613,
    -0.0022152995225042105,
    -0.0027981263119727373,
    0.0003531039401423186,
    0.0933617427945137,
    -0.05120425671339035,
    -0.16112887859344482,
    7.652187377971131e-06,
    -0.03783096745610237,
    -0.06974265724420547,
    -0.041551701724529266,
    0.046646781265735626,
    -0.009644046425819397,
    0.06389757245779037,
    -0.03682912886142731,
    0.017196035012602806,
    -0.009346633218228817,
    -0.06884464621543884,
    -0.007180301938205957,
    -0.058394212275743484,
    -0.03944036364555359,
    -0.06791975349187851,
    -0.1388070434331894,
    0.02034573070704937,
    0.021353980526328087,
    0.06277792900800705,
    -0.013898001983761787,
    -0.053875938057899475,
    -0.0038414092268794775,
    0.08834736794233322,
    -0.00027711212169378996,
    -0.013639326207339764,
    0.0072541311383247375,
    0.0014236699789762497,
    0.02776390314102173,
    0.0404866561293602,
    -0.07584225386381149,
    -0.003193245967850089,
    0.017733478918671608,
    -0.15632914006710052,
    -0.08733464032411575,
    0.05572345480322838,
    0.048359110951423645,
    0.04711287468671799,
    0.023309923708438873,
    0.02831679955124855,
    -0.043856795877218246,
    -1.9019276721745894e-32,
    -0.06436018645763397,
    -0.04986749589443207,
    -0.04839653894305229,
    0.013616720214486122,
    0.0018365215510129929,
    -0.032037291675806046,
    -0.04242176190018654,
    0.0873832032084465,
    -0.021103866398334503,
    -0.05725964903831482,
    0.01880800537765026,
    0.020877111703157425,
    -0.0037560248747467995,
    -0.05789763852953911,
    -0.014620144851505756,
    -0.03918016329407692,
    0.04164973273873329,
    0.04330643266439438,
    -0.04646187648177147,
    0.014859244227409363,
    -0.0020068848971277475,
    0.020306818187236786,
    -0.07844503968954086,
    -0.008624478243291378,
    0.059790175408124924,
    0.04276576265692711,
    0.03875090554356575,
    0.008091562427580357,
    0.02605786919593811,
    -0.002653497504070401,
    0.020254455506801605,
    0.10373992472887039,
    -0.07483445852994919,
    -0.03372064605355263,
    -0.05151000991463661,
    -0.06795118004083633,
    0.022570153698325157,
    -0.025174440816044807,
    -0.052615080028772354,
    -0.0024802701082080603,
    0.128119558095932,
    0.08121785521507263,
    -0.020582284778356552,
    -0.008406013250350952,
    -0.014748284593224525,
    0.006935593672096729,
    -0.13275650143623352,
    -0.03141475468873978,
    0.05937125161290169,
    0.013757186941802502,
    0.16692127287387848,
    -0.008335611782968044,
    0.0012017006520181894,
    -0.04006245359778404,
    0.03316120803356171,
    0.03954190015792847,
    0.08136385679244995,
    -0.0738077312707901,
    -0.023828845471143723,
    -0.011044178158044815,
    0.037078406661748886,
    -0.0059645636938512325,
    -0.05887332558631897,
    0.004166522994637489,
    0.07600109279155731,
    0.0372309610247612,
    -0.000603926251642406,
    0.06235398352146149,
    0.000858359329868108,
    -0.006029738578945398,
    0.04548206180334091,
    -0.08637737482786179,
    -0.017474744468927383,
    -0.047642022371292114,
    0.05102996528148651,
    -0.040190454572439194,
    0.017893925309181213,
    -0.11661379784345627,
    -0.07066058367490768,
    0.019528426229953766,
    -0.037500232458114624,
    0.05948282778263092,
    -0.029412901028990746,
    0.02813190408051014,
    0.0763327032327652,
    -0.062471456825733185,
    -0.022427914664149284,
    0.09369786828756332,
    -0.018647918477654457,
    -0.0416453517973423,
    -0.05556235834956169,
    -0.05376148968935013,
    -0.08899138122797012,
    0.05125598609447479,
    -0.0007823084015399218,
    -6.994719825570428e-08,
    0.016419654712080956,
    -0.0350896418094635,
    0.04346482828259468,
    0.013815222308039665,
    0.05484235659241676,
    0.0636780634522438,
    -0.047751933336257935,
    -0.030275488272309303,
    0.003756570629775524,
    -0.046038851141929626,
    -0.021898556500673294,
    0.02424430660903454,
    -0.04020066559314728,
    -0.08850912004709244,
    0.040760960429906845,
    -0.04462946951389313,
    0.02109764888882637,
    0.0029895659536123276,
    -0.08993661403656006,
    -0.0421421192586422,
    -0.03671547397971153,
    -0.0002629685332067311,
    -0.09649227559566498,
    -0.0003740880929399282,
    -0.009759744629263878,
    -0.007060502655804157,
    0.07932884991168976,
    0.07744202762842178,
    0.04890876263380051,
    -0.0400724895298481,
    -0.0421086922287941,
    0.016004925593733788,
    -0.024433044716715813,
    -0.03724787384271622,
    -0.0757940262556076,
    0.14608944952487946,
    -0.047908179461956024,
    -0.054334308952093124,
    0.04253390058875084,
    0.0680001825094223,
    -0.05395829305052757,
    -0.008584883995354176,
    0.016617653891444206,
    0.06505733728408813,
    0.06572183966636658,
    -0.013721956871449947,
    -0.0031895465217530727,
    0.015120774507522583,
    0.08900173753499985,
    -0.052887190133333206,
    -0.011418159119784832,
    0.002609048504382372,
    0.04033045470714569,
    0.07275034487247467,
    3.8828369724797085e-05,
    0.06878886371850967,
    0.025886058807373047,
    -0.020467394962906837,
    -0.04062872380018234,
    -0.01684766262769699,
    0.10915062576532364,
    -0.0027091566007584333,
    0.049521367996931076,
    0.06095658242702484
  ]
}