{
  "text": "Pleaseuse thisinformationasareferencewheninspectingthecode. Testing for Cleartext Traffic EnsurethattheappisnotallowingcleartextHTTPtraffic. SinceiOS9.0cleartextHTTPtrafficisblockedbydefault(due toAppTransportSecurity(ATS))buttherearemultiplewaysinwhichanapplicationcanstillsendit: • Configuring ATS to enable cleartext traffic by setting the NSAllowsArbitraryLoads attribute to true (or YES) on NSAppTransportSecurityintheapp’sInfo.plist. • RetrievetheInfo.plist • CheckthatNSAllowsArbitraryLoadsisnotsettotruegloballyofforanydomain. • If the application opens third party web sites in WebViews, then from iOS 10 onwards NSAllowsArbitraryLoad- sInWebContentcanbeusedtodisableATSrestrictionsforthecontentloadedinwebviews. Apple warns: Disabling ATS means that unsecured HTTP connections are allowed. HTTPS connections are also allowed,andarestillsubjecttodefaultservertrustevaluation. However,extendedsecuritychecks—likerequiring aminimumTransportLayerSecurity(TLS)protocolversion—aredisabled. WithoutATS,you’realsofreetoloosen thedefaultservertrustrequirements,asdescribedin“PerformingManualServerTrustAuthentication”. ThefollowingsnippetshowsavulnerableexampleofanappdisablingATSrestrictionsglobally. <key>NSAppTransportSecurity</key> <dict> <key>NSAllowsArbitraryLoads</key> <true/> </dict> 434\\nATS should be examined taking the application’s context into consideration. The application may have to define ATS exceptionstofulfillitsintendedpurpose. Forexample,theFirefoxiOSapplicationhasATSdisabledglobally. Thisexception isacceptablebecauseotherwisetheapplicationwouldnotbeabletoconnecttoanyHTTPwebsitethatdoesnothaveall theATSrequirements. Insomecases,appsmightdisableATSgloballybutenableitforcertaindomainstoe.g.securely loadmetadataorstillallowsecurelogin. ATSshouldincludeajustificationstringforthis(e.g.“Theappmustconnecttoaservermanagedbyanotherentitythat doesn’tsupportsecureconnections.”). Dynamic Analysis Intercept the tested app’s incoming and outgoing network traffic and make sure that this traffic is encrypted. You can interceptnetworktrafficinanyofthefollowingways: • CaptureallHTTP(S)andWebsockettrafficwithaninterceptionproxylikeOWASPZAPorBurpSuiteandmakesure allrequestsaremadeviaHTTPSinsteadofHTTP. • InterceptionproxieslikeBurpandOWASPZAPwillshowHTTP(S)trafficonly. Youcan,however,useaBurpplugin suchasBurp-non-HTTP-Extensionorthetoolmitm-relaytodecodeandvisualizecommunicationviaXMPPandother protocols. SomeapplicationsmaynotworkwithproxieslikeBurpandOWASPZAPbecauseofCertificatePinning. Insucha scenario,pleasecheck“TestingCustomCertificateStoresandCertificatePinning”. Formoredetailsreferto: • “InterceptingTrafficontheNetworkLayer”fromchapter“TestingNetworkCommunication” • “SettingupaNetworkTestingEnvironment”fromchapteriOSBasicSecurityTesting 435\\niOS Platform APIs Overview Enforced Updating Enforcedupdatingcanbehelpfulwhenitcomestopublickeypinning(seetheTestingNetworkcommunicationformore details) when a pin has to be refreshed due to a certificate/public key rotation. Additionally, vulnerabilities are easily patchedbymeansofforcedupdates. ThechallengewithiOShowever,isthatAppledoesnotprovideanyAPIsyettoautomatethisprocess,instead,developers will have to create their own mechanism, such as described at various blogs which boil down to looking up properties of the app using http://itunes.apple.com/lookup\\?id\\<BundleId> or third party libraries, such as Siren and react- native-appstore-version-checker. Most of these implementations will require a certain given version offered by an API or just “latest in the appstore”, which means users can be frustrated with having to update the app, even though no business/securityneedforanupdateistrulythere. Please note that newer versions of an application will not fix security issues that are living in the backends to which the app communicates. Allowing an app not to communicate with it might not be enough. Having proper API-lifecycle managementiskeyhere. Similarly,whenauserisnotforcedtoupdate,donotforgettotestolderversionsofyourapp againstyourAPIand/oruseproperAPIversioning. Object Persistence ThereareseveralwaystopersistanobjectoniOS: Object Encoding iOScomeswithtwoprotocolsforobjectencodinganddecodingforObjective-CorNSObjects: NSCodingandNSSecure- Coding. When a class conforms to either of the protocols, the data is serialized to NSData: a wrapper for byte buffers. NotethatDatainSwiftisthesameasNSDataoritsmutablecounterpart: NSMutableData. TheNSCodingprotocoldeclares the two methods that must be implemented in order to encode/decode its instance-variables. A class using NSCoding needstoimplementNSObjectorbeannotatedasan@objcclass. TheNSCodingprotocolrequirestoimplementencode andinitasshownbelow. class CustomPoint:NSObject,NSCoding { //requiredbyNSCoding: func encode(with aCoder:NSCoder){ aCoder.encode(x,forKey:\"x\") aCoder.encode(name,forKey:\"name\") } varx:Double =0.0 varname:String =\"\" init(x:Double,name:String){ self.x=x self.name =name } //requiredbyNSCoding:initializemembersusingadecoder. required convenience init?(coderaDecoder:NSCoder){ guard letname =aDecoder.decodeObject(forKey:\"name\")as?String else {return nil} self.init(x:aDecoder.decodeDouble(forKey:\"x\"), name:name) } //getters/setters/etc. } TheissuewithNSCodingisthattheobjectisoftenalreadyconstructedandinsertedbeforeyoucanevaluatetheclass- type. Thisallowsanattackertoeasilyinjectallsortsofdata. Therefore,theNSSecureCodingprotocolhasbeenintroduced. WhenconformingtoNSSecureCodingyouneedtoinclude: 436\\nstatic varsupportsSecureCoding:Bool { return true } wheninit(coder:) ispartoftheclass. Next,whendecodingtheobject,acheckshouldbemade,e.g.: letobj=decoder.decodeObject(of:MyClass.self,forKey:\"myKey\") The conformance to NSSecureCoding ensures that objects being instantiated are indeed the ones that were expected. However,therearenoadditionalintegritychecksdoneoverthedataandthedataisnotencrypted. Therefore,anysecret dataneedsadditionalencryptionanddataofwhichtheintegritymustbeprotected,shouldgetanadditionalHMAC. Note,whenNSData(Objective-C)orthekeywordlet(Swift)isused: thenthedataisimmutableinmemoryandcannot beeasilyremoved. Object Archiving with NSKeyedArchiver NSKeyedArchiverisaconcretesubclassofNSCoderandprovidesawaytoencodeobjectsandstoretheminafile. The NSKeyedUnarchiverdecodesthedataandrecreatestheoriginaldata. Let’staketheexampleoftheNSCodingsection andnowarchiveandunarchivethem: //archiving: NSKeyedArchiver.archiveRootObject(customPoint,toFile:\"/path/to/archive\") //unarchiving: guard letcustomPoint =NSKeyedUnarchiver.unarchiveObjectWithFile(\"/path/to/archive\")as? CustomPoint else {return nil} Whendecodingakeyedarchive,becausevaluesarerequestedbyname,valuescanbedecodedoutofsequenceornotat all. Keyedarchives,therefore,providebettersupportforforwardandbackwardcompatibility. Thismeansthatanarchive ondiskcouldactuallycontainadditionaldatawhichisnotdetectedbytheprogram,unlessthekeyforthatgivendatais providedatalaterstage. Note that additional protection needs to be in place to secure the file in case of confidential data, as the data is not encryptedwithinthefile. Seethechapter“DataStorageoniOS”formoredetails. Codable WithSwift 4, the Codable type alias arrived: it is a combination of theDecodable and Encodable protocols. A String, Int,Double,Date,DataandURLareCodablebynature: meaningtheycaneasilybeencodedanddecodedwithoutany additionalwork. Let’stakethefollowingexample: struct CustomPointStruct:Codable { varx:Double varname:String } By adding Codable to the inheritance list for the CustomPointStruct in the example, the methods init(from:) and encode(to:) areautomaticallysupported. ForemoredetailsabouttheworkingsofCodablechecktheAppleDeveloper",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 147
  },
  "embedding": [
    -0.059727415442466736,
    -0.05733218416571617,
    -0.06799694150686264,
    -0.026206238195300102,
    0.031093653291463852,
    0.006016756407916546,
    0.05897730961441994,
    -0.10549454391002655,
    -0.018504265695810318,
    -0.029069622978568077,
    0.08174434304237366,
    0.016327466815710068,
    -0.01326647400856018,
    0.0599643774330616,
    -0.019558176398277283,
    0.03997313603758812,
    0.09972001612186432,
    -0.06713730096817017,
    -0.05842757225036621,
    0.056778281927108765,
    0.03295346349477768,
    -0.012664913199841976,
    0.010110520757734776,
    0.030701814219355583,
    0.051380712538957596,
    0.028525933623313904,
    -0.09633956104516983,
    -0.07932329922914505,
    -0.03278648108243942,
    0.01937868632376194,
    -0.00045976456021890044,
    -0.0180631335824728,
    -0.0180650781840086,
    0.014679203741252422,
    0.01082698069512844,
    -0.0746750459074974,
    -0.005344033241271973,
    0.027237605303525925,
    -0.0019640515092760324,
    0.029298102483153343,
    0.04424961283802986,
    -0.019846975803375244,
    -0.02698206529021263,
    0.12932433187961578,
    -0.06975747644901276,
    -0.0052847168408334255,
    0.009100387804210186,
    0.0022735814563930035,
    -0.011901567690074444,
    -0.04228023812174797,
    0.022319383919239044,
    0.029434138908982277,
    0.0072239721193909645,
    0.009435907937586308,
    -0.06541727483272552,
    -0.06692583858966827,
    -0.026442114263772964,
    0.022152118384838104,
    0.01933404989540577,
    0.06055808439850807,
    0.023934585973620415,
    -0.062424659729003906,
    0.03378619626164436,
    -0.01078095007687807,
    -0.041469816118478775,
    0.007282590493559837,
    -0.019654637202620506,
    -0.04273822158575058,
    -0.01410543080419302,
    0.0149827366694808,
    -0.020129870623350143,
    0.0586821474134922,
    0.0033186418004333973,
    0.00866116676479578,
    0.06917157769203186,
    0.023519141599535942,
    0.027717692777514458,
    -0.023544054478406906,
    -0.06785199046134949,
    -0.11199101060628891,
    0.055698588490486145,
    -0.06897871941328049,
    0.08383836597204208,
    0.0633644387125969,
    -0.018010571599006653,
    0.04290211573243141,
    -0.017762565985322,
    -0.0008868747390806675,
    0.008346788585186005,
    0.039920344948768616,
    0.041376471519470215,
    0.028853848576545715,
    0.013561300933361053,
    0.04466896504163742,
    0.030865462496876717,
    -0.011262738145887852,
    0.023092137649655342,
    -0.02299359254539013,
    -0.06013588234782219,
    0.017026785761117935,
    0.04614618420600891,
    -0.0351574644446373,
    0.02195052243769169,
    0.015507133677601814,
    -0.021383238956332207,
    -0.031647346913814545,
    0.09374689310789108,
    0.0009893056703731418,
    0.0004904672969132662,
    0.09085953235626221,
    0.020503701642155647,
    -0.02149953320622444,
    0.024274438619613647,
    0.008694536052644253,
    -0.028532732278108597,
    0.017831193283200264,
    -0.06188040226697922,
    0.02910313382744789,
    0.08610128611326218,
    0.04857557639479637,
    -0.06656152009963989,
    0.044624630361795425,
    0.02036629244685173,
    0.01638522371649742,
    0.0036692125722765923,
    -0.040375061333179474,
    0.0003054236003663391,
    1.7651320150231412e-32,
    -0.03938150778412819,
    0.015957817435264587,
    -0.12657815217971802,
    -0.02836558222770691,
    -0.01900382712483406,
    -0.031529344618320465,
    0.03564419969916344,
    0.07508762180805206,
    0.038128625601530075,
    -0.029050277546048164,
    -0.004992742091417313,
    -0.040103230625391006,
    -0.03656928986310959,
    -0.0638679713010788,
    -0.029089853167533875,
    0.002947930945083499,
    0.0038077395875006914,
    0.03466515988111496,
    0.07073484361171722,
    -0.017746230587363243,
    -0.008958793245255947,
    -0.09021726995706558,
    0.03022109717130661,
    -0.044734567403793335,
    -0.07229675352573395,
    -0.0023224763572216034,
    -0.029467420652508736,
    0.05177784338593483,
    -0.004424979444593191,
    0.02580074593424797,
    -0.045351311564445496,
    0.012042053043842316,
    -0.02087377943098545,
    0.01018043514341116,
    0.016713758930563927,
    0.0038489345461130142,
    0.025733405724167824,
    -0.01853412203490734,
    0.002094665542244911,
    -0.007870697416365147,
    -0.05706494301557541,
    -0.023953596130013466,
    -0.11331034451723099,
    0.014958926476538181,
    0.007448661606758833,
    -0.04224945232272148,
    -0.05409517511725426,
    0.011878004297614098,
    -0.03003685548901558,
    0.04895554482936859,
    -0.1072285994887352,
    -0.005822656210511923,
    0.013445761986076832,
    -0.05310746282339096,
    -0.1469798982143402,
    0.03925519809126854,
    -0.027782293036580086,
    -0.026320092380046844,
    -0.056243110448122025,
    -0.034820396453142166,
    0.02386239916086197,
    -0.04307156428694725,
    -0.09925048053264618,
    -0.08935009688138962,
    -0.046080827713012695,
    0.044360168278217316,
    0.023963984102010727,
    -0.040623728185892105,
    -0.039188433438539505,
    -0.0005751876742579043,
    -0.062117185443639755,
    0.000854627403896302,
    0.06265854835510254,
    0.09291502833366394,
    -0.06803815066814423,
    -0.012097584083676338,
    0.0027490200009196997,
    0.06941723078489304,
    0.04437953978776932,
    -0.05330544337630272,
    0.062377553433179855,
    0.017593618482351303,
    0.12222112715244293,
    -0.018721023574471474,
    -0.04081832244992256,
    -0.05193817988038063,
    -0.0007443279027938843,
    -0.06122201681137085,
    -0.062095366418361664,
    0.13099898397922516,
    -0.010748316533863544,
    -0.016157682985067368,
    -0.032115474343299866,
    0.005444588139653206,
    -0.003109856741502881,
    -1.7068288176535004e-32,
    -0.048960186541080475,
    -0.010401098057627678,
    -0.07302306592464447,
    0.0016905154334381223,
    -0.04133123159408569,
    0.04393761232495308,
    0.0227217897772789,
    0.12517650425434113,
    0.06229671835899353,
    -0.028108255937695503,
    0.10015992075204849,
    0.051192060112953186,
    0.019434621557593346,
    -0.08320966362953186,
    -0.01905938610434532,
    0.009012740105390549,
    0.01160516869276762,
    -0.0332571379840374,
    -0.012615395709872246,
    0.07482413947582245,
    0.028372367843985558,
    0.0117241982370615,
    -0.029451753944158554,
    0.03195594623684883,
    -0.04386875405907631,
    -0.04926493391394615,
    -0.01639111526310444,
    -0.010462320409715176,
    0.0205491092056036,
    0.04829452931880951,
    0.10450074821710587,
    -0.03622651472687721,
    -0.07575764507055283,
    -0.04523301497101784,
    -0.06423584371805191,
    -0.0441143736243248,
    -0.022164486348628998,
    0.053545959293842316,
    -0.0579143650829792,
    -0.01172262616455555,
    0.14772053062915802,
    0.03463480994105339,
    -0.060450196266174316,
    0.039704009890556335,
    -0.0020455338526517153,
    0.042063601315021515,
    -0.03652171418070793,
    -0.0053598592057824135,
    -0.02279876172542572,
    -0.011378387920558453,
    0.05777139589190483,
    -0.05228058621287346,
    0.10152873396873474,
    -0.008966098539531231,
    -0.004931659437716007,
    0.10438930243253708,
    0.0865822434425354,
    -0.01878988742828369,
    -0.027115829288959503,
    -0.05565298721194267,
    0.05081754922866821,
    -0.018519684672355652,
    -0.1127358227968216,
    -0.002444573910906911,
    0.10862983763217926,
    0.033863365650177,
    -0.06015681102871895,
    0.03956947848200798,
    0.04491161182522774,
    0.1010400578379631,
    -0.05886759236454964,
    -0.08089212328195572,
    -0.04752511903643608,
    -0.046851128339767456,
    -5.614811379928142e-05,
    -0.021547831594944,
    0.04874056577682495,
    0.0059371404349803925,
    -0.06095041334629059,
    0.01675165444612503,
    0.025385065004229546,
    0.11841864883899689,
    -0.06742550432682037,
    0.000611243536695838,
    0.15861447155475616,
    -0.002888775197789073,
    -0.026469308882951736,
    0.013802679255604744,
    -0.01606188900768757,
    0.025834932923316956,
    -0.04887367784976959,
    0.0043233842588961124,
    -0.08748067170381546,
    0.03970786929130554,
    -0.027804287150502205,
    -5.863181584686572e-08,
    0.00028179370565339923,
    0.001228668843396008,
    -0.038324858993291855,
    -0.01499100960791111,
    0.0776558518409729,
    0.004331920295953751,
    -0.0090201860293746,
    -0.010214821435511112,
    0.002237039152532816,
    -0.07076386362314224,
    -0.07518886774778366,
    0.03797644004225731,
    -0.07957921177148819,
    -0.02056373655796051,
    0.02513417974114418,
    -0.0856187492609024,
    -0.035758186131715775,
    -0.047736670821905136,
    0.005579490214586258,
    -0.04897591099143028,
    -0.017168818041682243,
    -0.055030785501003265,
    0.000717641320079565,
    0.041257329285144806,
    0.0658678337931633,
    0.058352477848529816,
    0.002090633846819401,
    0.0232858844101429,
    0.03874583542346954,
    0.06829051673412323,
    0.000758836162276566,
    -0.0692753717303276,
    -0.06379897147417068,
    -0.030574114993214607,
    -0.04483817145228386,
    0.1441238969564438,
    -0.020820897072553635,
    -0.09755823016166687,
    0.015270108357071877,
    0.005544357933104038,
    0.031223274767398834,
    0.044357456266880035,
    0.08119262009859085,
    0.01037489715963602,
    0.05599759891629219,
    0.021040113642811775,
    -0.045329462736845016,
    0.04690153896808624,
    0.11616984009742737,
    -0.01413517352193594,
    -0.07251015305519104,
    -0.040814872831106186,
    -0.03740641847252846,
    0.0406697578728199,
    -0.05089694261550903,
    -0.07860391587018967,
    0.08910215646028519,
    -0.06986840814352036,
    -0.033731162548065186,
    0.0828692615032196,
    0.14466707408428192,
    -0.052811022847890854,
    0.020594939589500427,
    -0.0015303025720641017
  ]
}