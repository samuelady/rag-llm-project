{
  "text": "extracted dump in the file system. If you have any problems,afirststepwouldbetoenablethedebugflag-dwhenrunningobjectionor,ifthatdoesn’thelp,filean issueinobjection’sGitHub. Next,weareabletofindthe“HellofromC++”stringswithradare2: $r2/Users/foo/memory_Android/memory [0x00000000]>izz~Hellofrom 11360x000652700x00065270 14 15 ()asciiHellofromC++ AlternativelyyoucanuseFridump. Thistime, wewillinputastringandseeifwecanfinditinthememorydump. For this, opentheMASTGHackingPlaygroundapp, navigateto“OMTG_DATAST_002_LOGGING”andenter“owasp-mstg”to thepasswordfield. Next,runFridump: python3fridump.py -Usg.vp.owasp_mobile.omtg_android -s CurrentDirectory:/Users/foo/git/fridump Outputdirectoryissetto:/Users/foo/git/fridump/dump StartingMemorydump... Oops,memoryaccessviolation!-------------------------------]0.28%Complete Progress: [##################################################]99.58%Complete Runningstringsonallfiles: Progress: [##################################################]100.0%Complete Finished! Tip: Enableverbositybyincludingtheflag-vifyouwanttoseemoredetails,e.g.theregionsprovokingmemory accessviolations. 162\\nIt will take a while until it’s completed and you’ll get a collection of *.data files inside the dump folder. When you add the-sflag,allstringsareextractedfromthedumpedrawmemoryfilesandaddedtothefilestrings.txt,whichisalso storedinthedumpdirectory. lsdump/ dump/1007943680_dump.datadump/357826560_dump.data dump/630456320_dump.data...strings.txt Finally,searchfortheinputstringinthedumpdirectory: $grep -nri owasp-mstgdump/ Binaryfiledump//316669952_dump.datamatches Binaryfiledump//strings.txtmatches The“owasp-mstg”stringcanbefoundinoneofthedumpfilesaswellasintheprocessedstringsfile. Repackaging & Re-Signing Platform: android Repackaging Youcaneasilyrepackageanappbydoingthefollowing: cdUnCrackable-Level1 apktoolb zipalign -v4dist/UnCrackable-Level1.apk../UnCrackable-Repackaged.apk Note that the Android Studio build tools directory must be in the path. It is located at [SDK-Path]/build-tools/[ version]. Thezipalignandapksignertoolsareinthisdirectory. Re-Signing Beforere-signing, youfirstneedacode-signingcertificate. IfyouhavebuiltaprojectinAndroidStudiobefore,theIDE hasalreadycreatedadebugkeystoreandcertificatein$HOME/.android/debug.keystore. Thedefaultpasswordforthis KeyStoreis“android”andthekeyiscalled“androiddebugkey”. ThestandardJavadistributionincludeskeytoolformanagingKeyStoresandcertificates. Youcancreateyourownsigning certificateandkey,thenaddittothedebugKeyStore: keytool -genkey -v-keystore ~/.android/debug.keystore -alias signkey -keyalg RSA-keysize 2048 -validity 20000 Afterthecertificateisavailable,youcanre-signtheAPKwithit. Besurethatapksignerisinthepathandthatyourunit fromthefolderwhereyourrepackagedAPKislocated. apksignersign --ks ~/.android/debug.keystore --ks-key-alias signkeyUnCrackable-Repackaged.apk Note: If you experience JRE compatibility issues with apksigner, you can use jarsigner instead. When you do this, zipalignmustbecalledaftersigning. jarsigner -verbose -keystore ~/.android/debug.keystore../UnCrackable-Repackaged.apksignkey zipalign -v4dist/UnCrackable-Level1.apk../UnCrackable-Repackaged.apk Nowyoumayreinstalltheapp: 163\\nadbinstallUnCrackable-Repackaged.apk Reviewing Decompiled Java Code Platform: android Followingtheexamplefrom“DecompilingJavaCode”,weassumethatyou’vesuccessfullydecompiledandopenedthe UnCrackableAppforAndroidLevel1inIntelliJ.AssoonasIntelliJhasindexedthecode,youcanbrowseitjustlikeyou’d browseanyotherJavaproject. Notethatmanyofthedecompiledpackages,classes,andmethodshaveweirdone-letter names;thisisbecausethebytecodehasbeen“minified”withProGuardatbuildtime. Thisisabasictypeofobfuscation thatmakesthebytecodealittlemoredifficulttoread,butwithafairlysimpleapplikethisone,itwon’tcauseyoumuch ofaheadache. Whenyou’reanalyzingamorecomplexapp,however,itcangetquiteannoying. When analyzing obfuscated code, annotating class names, method names, and other identifiers as you go along is a good practice. Open the MainActivity class in the package sg.vantagepoint.uncrackable1. The method verify is calledwhenyoutapthe“verify”button. Thismethodpassestheuserinputtoastaticmethodcalleda.a,whichreturns abooleanvalue. Itseemsplausiblethata.averifiesuserinput,sowe’llrefactorthecodetoreflectthis. Right-clicktheclassname(thefirstaina.a)andselectRefactor->Renamefromthedrop-downmenu(orpressShift-F6). Changetheclassnametosomethingthatmakesmoresensegivenwhatyouknowabouttheclasssofar. Forexample, youcouldcallit“Validator”(youcanalways revisethenamelater). a.anowbecomesValidator.a. Followthesame proceduretorenamethestaticmethodatocheck_input. Congratulations,youjustlearnedthefundamentalsofstaticanalysis! Itisallabouttheorizing,annotating,andgradually revisingtheoriesabouttheanalyzedprogramuntilyouunderstanditcompletelyor, atleast, wellenoughforwhatever youwanttoachieve. Next,Ctrl+click(orCommand+clickonMac)onthecheck_inputmethod. Thistakesyoutothemethoddefinition. The decompiledmethodlookslikethis: public static boolean check_input(Stringstring){ byte[]arrby =Base64.decode((String)\\ \"5UJiFctbmgbDoLXmpL12mkno8HT4Lv8dlat8FxR2GOc=\",(int)0); byte[]arrby2 =newbyte[]{}; try{ arrby =sg.vantagepoint.a.a.a(Validator.b(\"8d127684cbc37c17616d806cf50473cc\"),arrby); arrby2 =arrby; 164\\n}sa catch (Exceptionexception){ Log.d((String)\"CodeCheck\",(String)(\"AESerror:\" +exception.getMessage())); } if(string.equals(newString(arrby2))){ return true; } return false; } So,youhaveaBase64-encodedStringthat’spassedtothefunctionainthepackage sg.vantagepoint.a.a (again, everything is called a) along with something that looks suspiciously like a hex-encoded encryptionkey(16hexbytes=128bit,acommonkeylength). Whatexactlydoesthisparticularado? Ctrl-clickittofind out. public class a{ public static byte[]a(byte[]object,byte[]arrby){ object =newSecretKeySpec((byte[])object,\"AES/ECB/PKCS7Padding\"); Ciphercipher =Cipher.getInstance(\"AES\"); cipher.init(2,(Key)object); return cipher.doFinal(arrby); } } Nowyou’regettingsomewhere: it’ssimplystandardAES-ECB.LooksliketheBase64stringstoredinarrby1incheck_- inputisaciphertext. Itisdecryptedwith128bitAES,thencomparedwiththeuserinput. Asabonustask,trytodecrypt theextractedciphertextandfindthesecretvalue! A faster way to get the decrypted string is to add dynamic analysis. We’ll revisit UnCrackable App for Android Level 1 latertoshowhow(e.g.intheDebuggingsection),sodon’tdeletetheprojectyet! Get Open Connections Platform: android Youcanfindsystem-widenetworkinginformationin/proc/netorjustbyinspectingthe/proc/<pid>/netdirectories(for somereasonnotprocessspecific). Therearemultiplefilespresentinthesedirectories,ofwhichtcp,tcp6andudpmight beconsideredrelevantfromthetester’sperspective. ##cat/proc/7254/net/tcp sl local_addressrem_address sttx_queuerx_queuetrtm->whenretrnsmt uid timeoutinode ... 69:1101A8C0:BB2F9A447D4A:01BB0100000000:0000000000:000000000000000010093 075412 100000000000000002031910 -1 70:1101A8C0:917CE3CB3AD8:01BB0100000000:0000000000:000000000000000010093 075553 100000000000000002032310 -1 71:1101A8C0:C1E39C187D4A:01BB0100000000:0000000000:000000000000000010093 075458 100000000000000002031910 -1 ... Intheoutputabove,themostrelevantfieldsforusare: • rem_address: remoteaddressandportnumberpair(inhexadecimalrepresentation). • tx_queue and rx_queue: the outgoing and incoming data queue in terms of kernel memory usage. These fields giveanindicationhowactivelytheconnectionisbeingused. • uid: containingtheeffectiveUIDofthecreatorofthesocket. Anotheralternativeistousethenetstatcommand,whichalsoprovidesinformationaboutthenetworkactivityforthe complete system in a more readable format, and can be easily filtered as per our requirements. For instance, we can easilyfilteritbyPID: ##netstat-p|grep24685 ActiveInternetconnections (w/oservers) ProtoRecv-QSend-QLocalAddress ForeignAddress State PID/ProgramName tcp 0 0192.168.1.17:47368 172.217.194.103:https CLOSE_WAIT 24685/com.google.android.youtube tcp 0 0192.168.1.17:47233 172.217.194.94:https CLOSE_WAIT 24685/com.google.android.youtube tcp 0 0192.168.1.17:38480 sc-in-f100.1e100.:httpsESTABLISHED24685/com.google.android.youtube tcp 0 0192.168.1.17:44833 74.125.24.91:https ESTABLISHED24685/com.google.android.youtube tcp 0 0192.168.1.17:38481 sc-in-f100.1e100.:httpsESTABLISHED24685/com.google.android.youtube ... 165\\nnetstatoutputisclearlymoreuserfriendlythanreading/proc/<pid>/net. Themostrelevantfieldsforus, similarto thepreviousoutput,arefollowing: • Foreign Address: remoteaddressandportnumberpair(portnumbercanbereplacedwiththewell-knownname ofaprotocolassociatedwiththeport). • Recv-QandSend-Q:Statisticsrelatedtoreceiveandsendqueue. Givesanindicationonhowactivelytheconnection isbeingused. • State: thestateofasocket,forexample,ifthesocketisinactiveuse(ESTABLISHED)orclosed(CLOSED). Get Loaded Native Libraries Platform: android Using Process Memory Maps Thefile/proc/<pid>/mapscontainsthecurrentlymappedmemoryregionsandtheiraccesspermissions. Usingthisfile wecangetthelistofthelibrariesloadedintheprocess. ##cat/proc/9568/maps 12c00000-52c00000rw-p0000000000:0414917 /dev/ashmem/dalvik-mainspace (regionspace)(deleted) 6f019000-6f2c0000rw-p00000000fd:001146914 /data/dalvik-cache/arm64/system@framework@boot.art ... 7327670000-7329747000r--p00000000fd:001884627 /data/app/com.google.android.gms-4FJbDh-oZv-5bCw39jkIMQ==/oat/arm64/base.odex .. 733494d000-7334cfb000r-xp00000000fd:001884542 ↪ /data/app/com.google.android.youtube-Rl_hl9LptFQf3Vf-JJReGw==/lib/arm64/libcronet.80.0.3970.3.so ... Using Frida You can retrieve process related information straight from the Frida CLI by using the Process command. Within the ProcesscommandthefunctionenumerateModulesliststhelibrariesloadedintotheprocessmemory. [HuaweiNexus6P::sg.vantagepoint.helloworldjni]->Process.enumerateModules()",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 74
  },
  "embedding": [
    0.0017396507319062948,
    0.044815823435783386,
    -0.058942630887031555,
    -0.06129032373428345,
    0.06687796115875244,
    -0.02759462222456932,
    0.0015357425436377525,
    0.0404672808945179,
    0.0037794008385390043,
    0.010758806951344013,
    0.06043677031993866,
    -0.030616551637649536,
    0.04351327568292618,
    -0.04807545244693756,
    0.002025292720645666,
    -0.014534225687384605,
    -0.01692822389304638,
    0.02457444742321968,
    -0.05402916669845581,
    0.05371495336294174,
    0.08626067638397217,
    0.02730078622698784,
    0.03973516449332237,
    -0.0020667912904173136,
    0.03951086103916168,
    0.053625233471393585,
    -0.009001355618238449,
    -0.027530645951628685,
    -0.023950133472681046,
    -0.0044876388274133205,
    0.024670114740729332,
    0.03941319137811661,
    0.04528328403830528,
    0.04911193624138832,
    0.1183878481388092,
    -0.0010516563197597861,
    -0.043618932366371155,
    -0.027984175831079483,
    -0.036421023309230804,
    -0.03560793399810791,
    0.014792545698583126,
    0.08315785974264145,
    -0.048435911536216736,
    0.06852854043245316,
    -0.07131313532590866,
    0.0414615198969841,
    0.028015675023198128,
    -0.013005944900214672,
    -0.017941230908036232,
    0.0017350346315652132,
    0.03517572209239006,
    0.12694354355335236,
    0.019514603540301323,
    0.007474276702851057,
    -0.0023082727566361427,
    0.05501752346754074,
    -0.008264800533652306,
    0.07499465346336365,
    0.03563757240772247,
    0.10317031294107437,
    -0.03915921226143837,
    0.016873257234692574,
    -0.039794813841581345,
    -0.015600115060806274,
    -0.041081320494413376,
    0.030998991802334785,
    0.05786924064159393,
    -0.01244371011853218,
    0.012940021231770515,
    -0.07998639345169067,
    -0.12066945433616638,
    0.040629737079143524,
    -0.03789535164833069,
    -0.016108356416225433,
    -0.021637894213199615,
    0.049220290035009384,
    0.006302188150584698,
    -0.0002060193073702976,
    -0.05882863700389862,
    -0.11912288516759872,
    0.03861840069293976,
    -0.04316605255007744,
    0.01618807390332222,
    0.06601765006780624,
    0.08203230798244476,
    0.021153103560209274,
    0.04121740534901619,
    0.03275998309254646,
    -0.03070002980530262,
    0.030947769060730934,
    -0.0640186220407486,
    0.02451234683394432,
    -0.058070939034223557,
    -0.014593449421226978,
    -0.006912010256201029,
    0.018967637792229652,
    -0.022435087710618973,
    0.03744301199913025,
    -0.07328788191080093,
    0.043202757835388184,
    0.07861125469207764,
    0.06971471011638641,
    0.0443798266351223,
    -0.004660570994019508,
    0.016661182045936584,
    -0.07716766744852066,
    0.018048293888568878,
    0.016693387180566788,
    0.00013940752251073718,
    0.012807251885533333,
    0.049000658094882965,
    -0.009759013541042805,
    0.05454143509268761,
    -0.003729630494490266,
    0.14626996219158173,
    0.01892762817442417,
    -0.05125550925731659,
    0.04489922896027565,
    -0.03345925733447075,
    0.08454705774784088,
    0.038211941719055176,
    -0.06800965964794159,
    -0.016715295612812042,
    -0.08249591290950775,
    -0.05878675729036331,
    -0.025968430563807487,
    0.006434278562664986,
    1.3510448812259957e-32,
    0.02203916758298874,
    -0.004422060213983059,
    0.024193011224269867,
    0.03266231715679169,
    -0.048215147107839584,
    -0.036721840500831604,
    -0.016029687598347664,
    0.052359458059072495,
    0.06832268834114075,
    -0.007954244501888752,
    -0.03927762061357498,
    -0.010235809721052647,
    -0.030398566275835037,
    0.004021918401122093,
    -0.004843027796596289,
    -0.08187765628099442,
    -0.010672901757061481,
    -0.028919950127601624,
    -0.04388746991753578,
    0.09725160151720047,
    0.051545239984989166,
    0.001802663435228169,
    -0.01671733148396015,
    -0.07068819552659988,
    0.016970034688711166,
    0.027688346803188324,
    0.0198812372982502,
    0.0003501898027025163,
    0.08938205242156982,
    0.028649939224123955,
    -0.06321623176336288,
    -0.09455590695142746,
    -0.07250799983739853,
    -0.0033394002821296453,
    0.00129957206081599,
    -0.0676330104470253,
    -0.038489166647195816,
    -0.052334919571876526,
    -0.04159507155418396,
    -0.11531811952590942,
    -0.05652264878153801,
    0.007212666794657707,
    -0.04006500914692879,
    0.007852158509194851,
    -0.057694561779499054,
    -0.12521959841251373,
    -0.02872534841299057,
    0.022826801985502243,
    -0.006989504210650921,
    0.05294528976082802,
    0.0671500638127327,
    0.019597426056861877,
    -0.02208620309829712,
    -0.08075730502605438,
    -0.0753592848777771,
    -0.02055305428802967,
    -0.002920190803706646,
    -0.041156113147735596,
    0.029097137972712517,
    0.05184057354927063,
    0.070376455783844,
    0.07226215302944183,
    0.032774630934000015,
    -0.03945908695459366,
    0.024990538135170937,
    -0.010217583738267422,
    0.04552582651376724,
    -0.020064326003193855,
    -0.04810809716582298,
    -0.011580917052924633,
    -0.008890004828572273,
    -0.09294585883617401,
    0.0673469752073288,
    0.024327579885721207,
    -0.011530612595379353,
    0.038910653442144394,
    0.062035899609327316,
    -0.029294386506080627,
    -0.11078856140375137,
    -0.04316075146198273,
    0.028033655136823654,
    -0.07256728410720825,
    0.08052602410316467,
    -0.11341523379087448,
    -0.09061659872531891,
    -0.03467303514480591,
    0.032062556594610214,
    -0.11183477193117142,
    -0.03259275108575821,
    0.057667240500450134,
    -0.08713981509208679,
    -0.03714348003268242,
    -0.004693299066275358,
    -0.03751637786626816,
    -0.0391489714384079,
    -1.2868822853278874e-32,
    0.03012755885720253,
    -0.03230097517371178,
    -0.016558554023504257,
    -0.11260980367660522,
    0.03694479167461395,
    -0.04596282169222832,
    -0.06160803884267807,
    0.06938837468624115,
    -0.0386715903878212,
    -0.045291803777217865,
    -0.0400417260825634,
    0.03611224144697189,
    0.033143218606710434,
    -0.05907652527093887,
    0.07180747389793396,
    0.02739178016781807,
    0.06874918937683105,
    0.02845953404903412,
    -0.02324283868074417,
    0.044264405965805054,
    -0.01982061006128788,
    0.05441635474562645,
    0.07784825563430786,
    0.009955625049769878,
    -0.02815304696559906,
    0.047868721187114716,
    0.07063587754964828,
    0.05721663311123848,
    0.006418626755475998,
    -0.03965875506401062,
    0.06609424948692322,
    0.04793472960591316,
    -0.06361513584852219,
    0.046743810176849365,
    -0.00383754656650126,
    -0.029569324105978012,
    -0.04754841327667236,
    -0.038066279143095016,
    -0.01201681513339281,
    -0.014020465314388275,
    0.10957475751638412,
    0.04053511843085289,
    -0.040173012763261795,
    0.00407415209338069,
    0.03692958503961563,
    -0.0604628287255764,
    -0.08208319544792175,
    0.014610971324145794,
    0.030828967690467834,
    -0.03977842256426811,
    0.10296168178319931,
    0.010560641065239906,
    0.007471745368093252,
    -0.01943919248878956,
    0.04054611921310425,
    0.059290964156389236,
    0.08070186525583267,
    -0.03822215646505356,
    0.014614830724895,
    -0.11805522441864014,
    0.008645405992865562,
    -0.0482405424118042,
    -0.09801782667636871,
    -0.06953051686286926,
    0.022649448364973068,
    -0.000987902982160449,
    0.07539991289377213,
    -0.04436100274324417,
    -0.06263698637485504,
    0.06033729016780853,
    -0.019041378051042557,
    0.005035895388573408,
    -0.10138262063264847,
    0.009046370163559914,
    -0.030432075262069702,
    0.12361451238393784,
    -0.09531065076589584,
    -0.026376690715551376,
    -0.040435392409563065,
    -0.05715058371424675,
    0.034219272434711456,
    0.02152368612587452,
    0.006181264761835337,
    0.0040436857379972935,
    0.027865517884492874,
    -0.09240676462650299,
    -0.09475751966238022,
    0.05826887860894203,
    0.022927621379494667,
    -0.05138401687145233,
    -0.08838924020528793,
    0.019742673262953758,
    -0.04174361377954483,
    0.038869429379701614,
    0.009512556716799736,
    -6.390161644276304e-08,
    -0.008529651910066605,
    -0.057983603328466415,
    0.060082145035266876,
    0.0364934466779232,
    0.07414982467889786,
    -0.038273464888334274,
    -0.06789333373308182,
    -0.016659468412399292,
    0.06060207635164261,
    -0.021798156201839447,
    0.00402407068759203,
    -0.06096750870347023,
    -0.0820908471941948,
    -0.037687867879867554,
    0.006230159197002649,
    0.027159279212355614,
    0.03782261162996292,
    0.03286883980035782,
    -0.022255146875977516,
    0.00023235846310853958,
    0.0191248320043087,
    0.0052134450525045395,
    -0.028776055201888084,
    -0.0025718414690345526,
    0.06494296342134476,
    -0.01593123748898506,
    0.09211233258247375,
    0.05853738263249397,
    0.015296244993805885,
    -0.0438636876642704,
    0.03843587636947632,
    -0.00549528282135725,
    -0.016783518716692924,
    -0.1463155597448349,
    -0.03628683090209961,
    0.11504164338111877,
    0.08124234527349472,
    -0.0533706396818161,
    0.04238516837358475,
    0.027494870126247406,
    -0.032332710921764374,
    0.059552546590566635,
    0.0559137724339962,
    0.00017238077998626977,
    -0.03319508582353592,
    -0.06970448046922684,
    -0.026772387325763702,
    0.032304681837558746,
    0.021527208387851715,
    0.03178144618868828,
    -0.09591738879680634,
    -0.00633995421230793,
    -0.08135472983121872,
    0.0232823695987463,
    -0.010284096002578735,
    -0.03711124137043953,
    -0.04368782043457031,
    -0.027655238285660744,
    0.012764993123710155,
    0.0569705031812191,
    0.0259641595184803,
    0.07874756306409836,
    0.021074874326586723,
    0.030504778027534485
  ]
}