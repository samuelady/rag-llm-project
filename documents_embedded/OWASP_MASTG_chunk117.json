{
  "text": "thandeviceB.ThesedifferentialprivilegesshouldnotchangewhenanappiscopiedfromdeviceAtodeviceB. Beforewedescribetheusableidentifiers,let’squicklydiscusshowtheycanbeusedforbinding. Therearethreemethods thatallowdevicebinding: • Augmentingthecredentialsusedforauthenticationwithdeviceidentifiers. Thismakesenseiftheapplicationneeds tore-authenticateitselfand/ortheuserfrequently. • Encryptingthedatastoredinthedevicewiththekeymaterialwhichisstronglyboundtothedevicecanstrengthen the device binding. The Android Keystore offers non-exportable private keys which we can use for this. When a maliciousactorwouldextractsuchdatafromadevice,itwouldn’tbepossibletodecryptthedata,asthekeyisnot accessible. Implementingthis,takesthefollowingsteps: – GeneratethekeypairintheAndroidKeystoreusingKeyGenParameterSpecAPI. //Source:<https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.html> KeyPairGeneratorkeyPairGenerator =KeyPairGenerator.getInstance( KeyProperties.KEY_ALGORITHM_RSA,\"AndroidKeyStore\"); keyPairGenerator.initialize( newKeyGenParameterSpec.Builder( \"key1\", KeyProperties.PURPOSE_DECRYPT) .setDigests(KeyProperties.DIGEST_SHA256,KeyProperties.DIGEST_SHA512) .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_RSA_OAEP) .build()); KeyPairkeyPair =keyPairGenerator.generateKeyPair(); Ciphercipher =Cipher.getInstance(\"RSA/ECB/OAEPWithSHA-256AndMGF1Padding\"); cipher.init(Cipher.DECRYPT_MODE,keyPair.getPrivate()); ... //ThekeypaircanalsobeobtainedfromtheAndroidKeystoreanytimeasfollows: KeyStorekeyStore =KeyStore.getInstance(\"AndroidKeyStore\"); keyStore.load(null); PrivateKeyprivateKey =(PrivateKey)keyStore.getKey(\"key1\",null); PublicKeypublicKey =keyStore.getCertificate(\"key1\").getPublicKey(); – GeneratingasecretkeyforAES-GCM: //Source:<https://developer.android.com/reference/android/security/keystore/KeyGenParameterSpec.html> KeyGeneratorkeyGenerator = KeyGenerator.getInstance( KeyProperties.KEY_ALGORITHM_AES,\"AndroidKeyStore\"); keyGenerator.init( newKeyGenParameterSpec.Builder(\"key2\", KeyProperties.PURPOSE_ENCRYPT |KeyProperties.PURPOSE_DECRYPT) .setBlockModes(KeyProperties.BLOCK_MODE_GCM) .setEncryptionPaddings(KeyProperties.ENCRYPTION_PADDING_NONE) 316\\n.build()); SecretKeykey =keyGenerator.generateKey(); //ThekeycanalsobeobtainedfromtheAndroidKeystoreanytimeasfollows: KeyStorekeyStore =KeyStore.getInstance(\"AndroidKeyStore\"); keyStore.load(null); key=(SecretKey)keyStore.getKey(\"key2\",null); – Encrypttheauthenticationdataandothersensitivedatastoredbytheapplicationusingasecretkeythrough AES-GCMcipherandusedevicespecificparameterssuchasInstanceID,etc. asassociateddata: Ciphercipher =Cipher.getInstance(\"AES/GCM/NoPadding\"); final byte[]nonce =newbyte[GCM_NONCE_LENGTH]; random.nextBytes(nonce); GCMParameterSpecspec =new GCMParameterSpec(GCM_TAG_LENGTH *8,nonce); cipher.init(Cipher.ENCRYPT_MODE,key,spec); byte[]aad=\"<deviceidentifierhere>\".getBytes();; cipher.updateAAD(aad); cipher.init(Cipher.ENCRYPT_MODE,key); //usetheciphertoencrypttheauthenticationdatasee0x50eformoredetails. – EncryptthesecretkeyusingthepublickeystoredinAndroidKeystoreandstoretheencryptedsecretkeyin theprivatestorageoftheapplication. – Wheneverauthenticationdatasuchasaccesstokensorothersensitivedataisrequired,decryptthesecretkey usingprivatekeystoredinAndroidKeystoreandthenusethedecryptedsecretkeytodecrypttheciphertext. • Usetoken-baseddeviceauthentication(InstanceID)tomakesurethatthesameinstanceoftheappisused. Testing whether the App is Debuggable Platform: android MASVSV1: MSTG-CODE-2 MASVSV2: MASVS-RESILIENCE-4 Overview Static Analysis Check AndroidManifest.xml to determine whether the android:debuggable attribute has been set and to find the attribute’svalue: ... <application android:allowBackup=\"true\" android:debuggable=\"true\" android:icon=\"@drawable/ic_launcher\" android:label=\"@string/app_name\" ↪ android:theme=\"@style/AppTheme\"> ... You can use aapt tool from the Android SDK with the following command line to quickly check if the an- droid:debuggable=\"true\"directiveispresent: ##Ifthecommandprint1thenthedirectiveispresent ##Theregexsearchforthisline:android:debuggable(0x0101000f)=(type0x12)0xffffffff $aaptdxmltreesieve.apkAndroidManifest.xml |grep -Ec\"android:debuggable\\(0x[0-9a-f]+\\)=\\(type\\s0x[0-9a-f]+\\)0xffffffff\" 1 Forareleasebuild,thisattributeshouldalwaysbesetto\"false\"(thedefaultvalue). Dynamic Analysis adbcanbeusedtodeterminewhetheranapplicationisdebuggable. Usethefollowingcommand: 317\\n##Ifthecommandprintanumbersuperiortozerothentheapplicationhavethedebugflag ##Theregexsearchfortheselines: ##flags=[DEBUGGABLEHAS_CODEALLOW_CLEAR_USER_DATAALLOW_BACKUP] ##pkgFlags=[DEBUGGABLEHAS_CODEALLOW_CLEAR_USER_DATAALLOW_BACKUP] $adbshelldumpsyspackagecom.mwr.example.sieve |grep -c\"DEBUGGABLE\" 2 $adbshelldumpsyspackagecom.nondebuggableapp |grep -c\"DEBUGGABLE\" 0 Ifanapplicationisdebuggable,executingapplicationcommandsistrivial. Intheadbshell,executerun-asbyappending thepackagenameandapplicationcommandtothebinaryname: $run-ascom.vulnerable.appid uid=10084(u0_a84)gid=10084(u0_a84) ↪ groups=10083(u0_a83),1004(input),1007(log),1011(adb),1015(sdcard_rw),1028(sdcard_r),3001(net_bt_admin),3002(net_bt),3003(inet),3006(net_bw_stats) ↪ context=u:r:untrusted_app:s0:c512,c768 AndroidStudiocanalsobeusedtodebuganapplicationandverifydebuggingactivationforanapp. Anothermethodfordeterminingwhetheranapplicationisdebuggableisattachingjdbtotherunningprocess. Ifthisis successful,debuggingwillbeactivated. Thefollowingprocedurecanbeusedtostartadebugsessionwithjdb: 1. Usingadbandjdwp,identifythePIDoftheactiveapplicationthatyouwanttodebug: $adb jdwp 2355 16346 <==last launched,correspondstoourapplication 2. Createacommunicationchannelbyusingadbbetweentheapplicationprocess(withthePID)andyourhostcom- puterbyusingaspecificlocalport: #adb forwardtcp:[LOCAL_PORT]jdwp:[APPLICATION_PID] $adb forwardtcp:55555jdwp:16346 3. Usingjdb,attachthedebuggertothelocalcommunicationchannelportandstartadebugsession: $jdb -connect com.sun.jdi.SocketAttach:hostname=localhost,port=55555 Setuncaught java.lang.Throwable Setdeferred uncaughtjava.lang.Throwable Initializingjdb ... >help Afewnotesaboutdebugging: • ThetoolJADXcanbeusedtoidentifyinterestinglocationsforbreakpointinsertion. • UsageofbasiccommandsforjdbcanbefoundatTutorialspoint. • Ifyougetanerrortellingthat“theconnectiontothedebuggerhasbeenclosed”whilejdbisbeingboundtothe localcommunicationchannelport,killalladbsessionsandstartasinglenewsession. Testing Reverse Engineering Tools Detection Platform: android MASVSV1: MSTG-RESILIENCE-4 MASVSV2: MASVS-RESILIENCE-4 Effectiveness Assessment Launchtheappwithvariousreverseengineeringtoolsandframeworksinstalledinyourtestdevice. Includeatleastthe following: Frida,Xposed,SubstrateforAndroid,RootCloak,AndroidSSLTrustKiller. Theappshouldrespondinsomewaytothepresenceofthosetools. Forexampleby: • Alertingtheuserandaskingforacceptingliability. 318\\n• Preventingexecutionbygracefullyterminating. • Securelywipinganysensitivedatastoredonthedevice. • Reportingtoabackendserver,e.g,forfrauddetection. Next,workonbypassingthedetectionofthereverseengineeringtoolsandanswerthefollowingquestions: • Canthemechanismsbebypassedtrivially(e.g.,byhookingasingleAPIfunction)? • Howdifficultisidentifyingtheantireverseengineeringcodeviastaticanddynamicanalysis? • Didyouneedtowritecustomcodetodisablethedefenses? Howmuchtimedidyouneed? • Whatisyourassessmentofthedifficultyofbypassingthemechanisms? Thefollowingstepsshouldguideyouwhenbypassingdetectionofreverseengineeringtools: 1. Patchtheantireverseengineeringfunctionality. Disabletheunwantedbehaviorbysimplyoverwritingtheassoci- atedbytecodeornativecodewithNOPinstructions. 2. UseFridaorXposedtohookfilesystemAPIsontheJavaandnativelayers. Returnahandletotheoriginalfile,not themodifiedfile. 3. Use a kernel module to intercept file-related system calls. When the process attempts to open the modified file, returnafiledescriptorfortheunmodifiedversionofthefile. Refertothe“TamperingandReverseEngineeringonAndroid”chapterforexamplesofpatching,codeinjection,andkernel modules. Testing Root Detection Platform: android MASVSV1: MSTG-RESILIENCE-1 MASVSV2: MASVS-RESILIENCE-1 Bypassing Root Detection Run execution traces with jdb, DDMS, strace, and/or kernel modules to find out what the app is doing. You’ll usually see all kinds of suspect interactions with the operating system, such as opening su for reading and obtaining a list of processes. Theseinteractionsaresurefiresignsofrootdetection. Identifyanddeactivatetherootdetectionmechanisms, oneatatime. Ifyou’reperformingablackboxresilienceassessment,disablingtherootdetectionmechanismsisyour firststep. Tobypassthesechecks,youcanuseseveraltechniques,mostofwhichwereintroducedinthe“ReverseEngineeringand Tampering”chapter: • Renamingbinaries. Forexample,insomecasessimplyrenamingthesubinaryisenoughtodefeatrootdetection (trynottobreakyourenvironmentthough!). • Unmounting/proctopreventreadingofprocesslists. Sometimes,theunavailabilityof/procisenoughtobypass suchchecks. • UsingFridaorXposedtohookAPIsontheJavaandnativelayers. Thishidesfilesandprocesses,hidesthecontents offiles,andreturnsallkindsofbogusvaluesthattheapprequests. • Hookinglow-levelAPIsbyusingkernelmodules. • Patchingtheapptoremovethechecks. Effectiveness Assessment Checkforrootdetectionmechanisms,includingthefollowingcriteria: • Multiple detection methods are scattered throughout the app (as opposed to putting everything into a single method). • TherootdetectionmechanismsoperateonmultipleAPIlayers(JavaAPIs,nativelibraryfunctions,assembler/system calls). 319\\n• Themechanismsaresomehoworiginal(they’renotcopiedandpastedfromStackOverfloworothersources). Developbypassmethodsfortherootdetectionmechanismsandanswerthefollowingquestions: • Canthemechanismsbeeasilybypassedwithstandardtools,suchasRootCloak? • Isstatic/dynamicanalysisnecessarytohandletherootdetection? • Doyouneedtowritecustomcode? • Howlongdidsuccessfullybypassingthemechanismstake? • Whatisyourassessmentofthedifficultyofbypassingthemechanisms? Ifrootdetectionismissingortooeasilybypassed,makesuggestionsinlinewiththeeffectivenesscriterialistedabove. These suggestions may include more detection mechanisms and better integration of existing mechanisms with other defenses. Testing File Integrity Checks Platform: android MASVSV1: MSTG-RESILIENCE-3 MASVSV2: MASVS-RESILIENCE-2 Bypassing File Integrity Checks Bypassing the application-source integrity checks 1. Patchtheanti-debuggingfunctionality. Disabletheunwantedbehaviorbysimplyoverwritingtheassociatedbyte- codeornativecodewithNOPinstructions. 2. Use Frida or Xposed to hook file system APIs on the Java and native layers. Return a handle to the original file insteadofthemodifiedfile. 3. Usethekernelmoduletointerceptfile-relatedsystemcalls. Whentheprocessattemptstoopenthemodifiedfile, returnafiledescriptorfortheunmodifiedversionofthefile. Refertothe“TamperingandReverseEngineeringonAndroid”chapterforexamplesofpatching,codeinjection,andkernel modules. Bypassing the storage integrity checks 1. Retrievethedatafromthedevice. 2. Altertheretrieveddataandthenputitbackintostorage.",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 117
  },
  "embedding": [
    -0.08005769550800323,
    -0.02107577957212925,
    -0.000627090863417834,
    -0.09462180733680725,
    0.022381749004125595,
    0.04789058491587639,
    0.042015522718429565,
    -0.009447610937058926,
    0.026293087750673294,
    0.06212105229496956,
    0.09191479533910751,
    -0.033108729869127274,
    0.07826013118028641,
    -0.045817188918590546,
    -0.002425543498247862,
    -0.03544804826378822,
    0.012697314843535423,
    0.049384187906980515,
    -0.07897539436817169,
    0.11044514924287796,
    0.056134238839149475,
    -0.00573583273217082,
    0.005706253927201033,
    0.009442579001188278,
    0.04465053975582123,
    -0.04536561667919159,
    -0.016332106664776802,
    -0.04692798852920532,
    0.00422648387029767,
    0.023151317611336708,
    -0.008656810969114304,
    0.014217756688594818,
    0.014319985173642635,
    0.058263201266527176,
    -0.0061611211858689785,
    -0.003961366135627031,
    0.03560477867722511,
    0.06035598739981651,
    -0.037398576736450195,
    -0.0412101186811924,
    -0.015238514170050621,
    -0.04343898966908455,
    -0.13663245737552643,
    0.08547645807266235,
    -0.08954222500324249,
    0.033579226583242416,
    -0.005741083063185215,
    -0.02639446221292019,
    -0.06045548617839813,
    0.04953096807003021,
    0.004927083384245634,
    0.08478818088769913,
    -0.03921550139784813,
    0.015225069597363472,
    -0.08917389065027237,
    0.028693892061710358,
    0.006119564175605774,
    0.025759367272257805,
    0.08681371062994003,
    0.09062720090150833,
    0.01767830364406109,
    0.0022983811795711517,
    0.02214224264025688,
    -0.030466990545392036,
    -0.06760341674089432,
    0.1109129786491394,
    0.03686796873807907,
    -0.06884492188692093,
    0.034684110432863235,
    -0.03544804826378822,
    -0.006197225768119097,
    -0.029299357905983925,
    0.004381941631436348,
    -0.04222273826599121,
    0.0453006848692894,
    -0.01072011049836874,
    -0.057455990463495255,
    -0.021388184279203415,
    -0.06331522017717361,
    -0.12274810671806335,
    0.0028839674778282642,
    0.00582209462299943,
    -0.027968233451247215,
    0.044532131403684616,
    -0.022070009261369705,
    0.08421124517917633,
    -0.025521090254187584,
    -0.012975123710930347,
    0.02247769944369793,
    0.09159186482429504,
    -0.0746733546257019,
    0.0060068643651902676,
    0.013637443073093891,
    -0.045443497598171234,
    -0.0011296943994238973,
    0.02149479277431965,
    0.007095007691532373,
    -0.0070135630667209625,
    -0.017424004152417183,
    0.018290109932422638,
    -0.008808466605842113,
    0.012939302250742912,
    -0.05189267173409462,
    -0.09949170798063278,
    0.07192354649305344,
    -0.037895362824201584,
    -0.01997486874461174,
    -0.150520920753479,
    0.008537109941244125,
    0.06331481039524078,
    0.03699411824345589,
    0.01660911925137043,
    0.027906816452741623,
    -0.05456280708312988,
    0.019074272364377975,
    0.10343796759843826,
    -0.036697324365377426,
    0.09778056293725967,
    0.06509239226579666,
    0.018528366461396217,
    0.0016772825038060546,
    -0.018810877576470375,
    0.09571477025747299,
    -0.029185332357883453,
    -0.1243206262588501,
    -0.018410146236419678,
    -0.031109420582652092,
    2.228879083165125e-32,
    -0.02651144750416279,
    0.016703378409147263,
    -0.0019267727620899677,
    -0.051485877484083176,
    -0.047317296266555786,
    -0.011847675777971745,
    0.056575220078229904,
    0.01898415945470333,
    -0.014150612987577915,
    -0.09570908546447754,
    0.0025541449431329966,
    0.02596738561987877,
    -0.010582229122519493,
    0.020176205784082413,
    0.04471280425786972,
    -0.0384686216711998,
    -0.02487044222652912,
    0.017365507781505585,
    0.034022171050310135,
    0.06865699589252472,
    -0.01905844733119011,
    -0.0333254300057888,
    0.03473716974258423,
    0.01642048917710781,
    -0.01856246590614319,
    -0.008892186917364597,
    -0.029166527092456818,
    0.030334876850247383,
    0.10429047793149948,
    0.0343586765229702,
    -0.0582679882645607,
    0.023572830483317375,
    -0.00930589810013771,
    -0.03525322675704956,
    0.010000847280025482,
    -0.003678184002637863,
    0.032633282244205475,
    -0.0446196012198925,
    0.0030854300130158663,
    -0.10232045501470566,
    -0.026627542451024055,
    -0.06913194060325623,
    -0.09227071702480316,
    -0.02184535562992096,
    -0.032273028045892715,
    -0.0476163886487484,
    0.0072981202974915504,
    0.026435570791363716,
    0.04413120448589325,
    0.005082717165350914,
    -0.0772448182106018,
    -0.010777626186609268,
    0.04863132908940315,
    -0.13233928382396698,
    -0.11729563772678375,
    -0.10574909299612045,
    -0.03642990440130234,
    -0.0012533605331555009,
    0.04490111023187637,
    0.03697606176137924,
    -0.049209270626306534,
    0.06059206277132034,
    0.06420087069272995,
    0.005555677227675915,
    -0.02534804306924343,
    -0.04619808495044708,
    -0.0010247993050143123,
    -0.11197446286678314,
    -0.058809544891119,
    -0.10473678261041641,
    -0.020090121775865555,
    -0.012636696919798851,
    -0.049618374556303024,
    -0.013610548339784145,
    -0.045250024646520615,
    0.01904836855828762,
    0.004160817712545395,
    0.05971655994653702,
    0.029981816187500954,
    -0.08948732167482376,
    0.021852614358067513,
    0.08475217968225479,
    0.020895550027489662,
    -0.012932047247886658,
    -0.06117824837565422,
    0.010874721221625805,
    -0.05783675238490105,
    -0.10166744887828827,
    -0.026325039565563202,
    0.024189118295907974,
    -0.02429007925093174,
    -0.0003455720143392682,
    -0.007510910741984844,
    0.01214667409658432,
    -0.08454260975122452,
    -2.137651317586509e-32,
    0.014967693947255611,
    -0.10224943608045578,
    -0.06313470005989075,
    0.043157909065485,
    0.03999582678079605,
    0.025976376608014107,
    -0.07125765085220337,
    0.04682968184351921,
    0.009022924117743969,
    -0.043746668845415115,
    0.013875666074454784,
    -0.004492002073675394,
    0.059578314423561096,
    -0.10343340039253235,
    0.0636502355337143,
    -0.00883040763437748,
    0.060913365334272385,
    0.014558574184775352,
    -0.017780469730496407,
    -0.003379159839823842,
    0.010071279481053352,
    0.02747049741446972,
    -0.0015119063900783658,
    0.13841022551059723,
    0.008490508422255516,
    0.021363580599427223,
    -0.023166129365563393,
    0.13048453629016876,
    -0.03077765181660652,
    -0.027583997696638107,
    0.07863850891590118,
    0.057411450892686844,
    -0.09704200178384781,
    -0.03724171593785286,
    -0.059768952429294586,
    -0.06204911693930626,
    -0.06918834894895554,
    0.011598370969295502,
    -0.025278009474277496,
    -0.015179823152720928,
    0.027446389198303223,
    -0.0036173907574266195,
    0.04772978276014328,
    -0.0033840721007436514,
    0.01930917426943779,
    -0.014609462581574917,
    0.053373388946056366,
    -0.019092267379164696,
    0.057846568524837494,
    0.03359459340572357,
    0.1238161101937294,
    -0.0034290193580091,
    -0.0317239835858345,
    -0.030001534149050713,
    -0.03149483725428581,
    0.12636937201023102,
    0.05137350782752037,
    -0.02181258052587509,
    0.05187327787280083,
    -0.09282387793064117,
    0.08147026598453522,
    -0.041884586215019226,
    0.033236775547266006,
    0.07868974655866623,
    -0.008753757923841476,
    0.003251165384426713,
    0.09960205852985382,
    0.004667746834456921,
    -0.008194972760975361,
    0.05488082766532898,
    0.03198631480336189,
    -0.09337837994098663,
    -0.026868760585784912,
    -0.07217297703027725,
    0.029959602281451225,
    -0.018059805035591125,
    -0.024155670776963234,
    -0.06316588073968887,
    -0.061498548835515976,
    -0.04828453063964844,
    0.057070810347795486,
    0.038688305765390396,
    0.001612480846233666,
    -0.026560431346297264,
    0.08707954734563828,
    -0.08356136828660965,
    -0.0056263660080730915,
    0.010961735621094704,
    0.005395345855504274,
    0.03852999955415726,
    -0.06548392027616501,
    -0.01736214943230152,
    -0.12025927752256393,
    0.03553614020347595,
    0.06712473928928375,
    -7.301018456473685e-08,
    0.08975125849246979,
    0.027799997478723526,
    0.013803042471408844,
    -0.001930569182150066,
    0.03584719076752663,
    -0.05688817426562309,
    0.007143731694668531,
    -0.06505850702524185,
    0.017133325338363647,
    -0.08808033168315887,
    0.020163873210549355,
    -0.06373514235019684,
    -0.0623847134411335,
    -0.00461845425888896,
    0.028334302827715874,
    0.008317741565406322,
    0.03531455993652344,
    0.03413458168506622,
    -0.05081002786755562,
    -0.03484836220741272,
    -0.029392646625638008,
    -0.011638198979198933,
    -0.036858897656202316,
    -0.03334343060851097,
    0.030582532286643982,
    0.02950931154191494,
    0.08591128140687943,
    0.03659462183713913,
    0.09037549048662186,
    0.005292663350701332,
    -0.021881693974137306,
    -0.014744545333087444,
    0.015529237687587738,
    -0.034778300672769547,
    -0.07681044191122055,
    0.08698408305644989,
    -0.0068263462744653225,
    -0.02383500523865223,
    0.04825787991285324,
    0.03706957772374153,
    -0.030434153974056244,
    -0.02955528162419796,
    -0.022480478510260582,
    0.039743050932884216,
    -0.07893690466880798,
    -0.03537363186478615,
    0.009968720376491547,
    0.012910396791994572,
    0.01198307890444994,
    0.07412059605121613,
    -0.07446081936359406,
    -0.0271481741219759,
    -0.051799315959215164,
    0.046589795500040054,
    -0.006902880035340786,
    0.025315649807453156,
    -0.025751378387212753,
    -0.003121577436104417,
    0.031002452597022057,
    -0.0030602787155658007,
    0.0819927453994751,
    0.009461106732487679,
    0.025450708344578743,
    0.009628627449274063
  ]
}