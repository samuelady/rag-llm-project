{
  "text": "other= \"Iwanttobelieve\" main[1]cont Thisistheplaintextstringyou’relookingfor! Debugging with an IDE SettingupaprojectinanIDEwiththedecompiledsourcesisaneattrickthatallowsyoutosetmethodbreakpointsdirectly inthesourcecode. Inmostcases,youshouldbeabletosingle-stepthroughtheappandinspectthestateofvariables withtheGUI.Theexperiencewon’tbeperfect,it’snottheoriginalsourcecodeafterall,soyouwon’tbeabletosetline breakpointsandthingswillsometimessimplynotworkcorrectly. Thenagain,reversingcodeisnevereasy,andefficiently navigatinganddebuggingplainoldJavacodeisaprettyconvenientwayofdoingit. Asimilarmethodhasbeendescribed intheNetSPIblog. TosetupIDEdebugging,firstcreateyourAndroidprojectinIntelliJandcopythedecompiledJavasourcesintothesource folderasdescribedaboveinthe“ReviewingDecompiledJavaCode”section. Onthedevice, choosetheappasdebug apponthe“Developeroptions”(UnCrackableAppforAndroidLevel1inthistutorial),andmakesureyou’veswitchedon the“WaitForDebugger”feature. Onceyoutaptheappiconfromthelauncher,itwillbesuspendedin“WaitForDebugger”mode. 144\\nNowyoucansetbreakpointsandattachtotheappprocesswiththe“AttachDebugger”toolbarbutton. Notethatonlymethodbreakpointsworkwhendebugginganappfromdecompiledsources. Onceamethodbreakpoint isreached,you’llgetthechancetosinglestepduringthemethodexecution. 145\\nAfteryouchoosetheappfromthelist,thedebuggerwillattachtotheappprocessandyou’llreachthebreakpointthatwas setontheonCreatemethod. Thisapptriggersanti-debuggingandanti-tamperingcontrolswithintheonCreatemethod. That’swhysettingabreakpointontheonCreatemethodjustbeforetheanti-tamperingandanti-debuggingchecksare performedisagoodidea. Next, single-step through the onCreate method by clicking “Force Step Into” in Debugger view. The “Force Step Into” optionallowsyoutodebugtheAndroidframeworkfunctionsandcoreJavaclassesthatarenormallyignoredbydebug- gers. Once you “Force Step Into”, the debugger will stop at the beginning of the next method, which is the a method of the classsg.vantagepoint.a.c. 146\\nThismethodsearchesforthe“su”binarywithinalistofdirectories(/system/xbinandothers). Sinceyou’rerunningthe apponarooteddevice/emulator,youneedtodefeatthischeckbymanipulatingvariablesand/orfunctionreturnvalues. Youcanseethedirectorynamesinsidethe“Variables”windowbyclicking“StepOver”theDebuggerviewtostepinto andthroughtheamethod. StepintotheSystem.getenvmethodwiththe“ForceStepInto”feature. Afteryougetthecolon-separateddirectorynames,thedebuggercursorwillreturntothebeginningoftheamethod,not to the next executable line. This happens because you’re working on the decompiled code instead of the source code. Thisskippingmakesfollowingthecodeflowcrucialtodebuggingdecompiledapplications. Otherwise,identifyingthenext linetobeexecutedwouldbecomecomplicated. Ifyoudon’twanttodebugcoreJavaandAndroidclasses,youcanstepoutofthefunctionbyclicking“StepOut”inthe Debuggerview. Using“ForceStepInto”mightbeagoodideaonceyoureachthedecompiledsourcesand“StepOut”of thecoreJavaandAndroidclasses. Thiswillhelpspeedupdebuggingwhileyoukeepaneyeonthereturnvaluesofthe coreclassfunctions. 147\\nAfter the a method gets the directory names, it will search for the su binary within these directories. To defeat this check, step through the detection method and inspect the variable content. Once execution reaches a location where thesubinarywouldbedetected,modifyoneofthevariablesholdingthefilenameordirectorynamebypressingF2or right-clickingandchoosing“SetValue”. Onceyoumodifythebinarynameorthedirectoryname,File.existsshouldreturnfalse. 148\\nThisdefeatsthefirstrootdetectioncontroloftheapp. Theremaininganti-tamperingandanti-debuggingcontrolscanbe defeatedinsimilarwayssothatyoucanfinallyreachthesecretstringverificationfunctionality. Thesecretcodeisverifiedbythemethodaofclasssg.vantagepoint.uncrackable1.a. Setabreakpointonmethoda and“ForceStepInto”whenyoureachthebreakpoint. Then,single-stepuntilyoureachthecalltoString.equals. This iswhereuserinputiscomparedwiththesecretstring. Youcanseethesecretstringinthe“Variables”viewwhenyoureachtheString.equalsmethodcall. 149\\nDebugging Native Code NativecodeonAndroidispackedintoELFsharedlibrariesandrunsjustlikeanyothernativeLinuxprogram. Consequently, youcandebugitwithstandardtools(includingGDBandbuilt-inIDEdebuggerssuchasIDAPro)aslongastheysupport thedevice’sprocessorarchitecture(mostdevicesarebasedonARMchipsets,sothisisusuallynotanissue). You’llnowsetupyourJNIdemoapp,HelloWorld-JNI.apk,fordebugging. It’sthesameAPKyoudownloadedin“Statically AnalyzingNativeCode”. Useadb installtoinstallitonyourdeviceoronanemulator. adbinstallHelloWorld-JNI.apk If you followed the instructions at the beginning of this chapter, you should already have the Android NDK. It contains prebuiltversionsofgdbserverforvariousarchitectures. Copythegdbserverbinarytoyourdevice: 150\\nadbpush $NDK/prebuilt/android-arm/gdbserver/gdbserver/data/local/tmp The gdbserver --attach command causes gdbserver to attach to the running process and bind to the IP address and portspecifiedincomm,whichinthiscaseisaHOST:PORTdescriptor. StartHelloWorldJNIonthedevice,thenconnectto thedeviceanddeterminethePIDoftheHelloWorldJNIprocess(sg.vantagepoint.helloworldjni). Thenswitchtotheroot userandattachgdbserver: $adbshell $ps |grep helloworld u0_a164 12690201 153340051692ffffffff00000000Ssg.vantagepoint.helloworldjni $su ##/data/local/tmp/gdbserver--attachlocalhost:123412690 Attached;pid=12690 Listeningonport1234 Theprocessisnowsuspended,andgdbserverislisteningfordebuggingclientsonport1234. Withthedeviceconnected viaUSB,youcanforwardthisporttoalocalportonthehostwiththeabd forwardcommand: adbforwardtcp:1234tcp:1234 You’llnowusetheprebuiltversionofgdbincludedintheNDKtoolchain. $$TOOLCHAIN/bin/gdblibnative-lib.so GNUgdb (GDB)7.11 (...) Readingsymbolsfromlibnative-lib.so...(nodebuggingsymbolsfound)...done. (gdb)targetremote:1234 Remotedebuggingusing:1234 0xb6e0f124in ??() Youhavesuccessfullyattachedtotheprocess! Theonlyproblemisthatyou’realreadytoolatetodebugtheJNIfunction StringFromJNI;itonlyrunsonce, atstartup. Youcansolvethisproblembyactivatingthe“WaitforDebugger”option. GotoDeveloperOptions->SelectdebugappandpickHelloWorldJNI,thenactivatetheWaitfordebuggerswitch. Thenterminateandre-launchtheapp. Itshouldbesuspendedautomatically. OurobjectiveistosetabreakpointatthefirstinstructionofthenativefunctionJava_sg_vantagepoint_helloworldjni_- MainActivity_stringFromJNIbeforeresumingtheapp. Unfortunately,thisisn’tpossibleatthispointintheexecution becauselibnative-lib.soisn’tyetmappedintoprocessmemory,it’sloadeddynamicallyduringruntime. Togetthis working,you’llfirstusejdbtogentlychangetheprocessintothedesiredstate. First,resumeexecutionoftheJavaVMbyattachingjdb. Youdon’twanttheprocesstoresumeimmediatelythough,so pipethesuspendcommandintojdb: $adbjdwp 14342 $adbforwardtcp:7777jdwp:14342 ${echo \"suspend\";cat;}|jdb-attach localhost:7777 Next,suspendtheprocesswheretheJavaruntimeloadslibnative-lib.so. Injdb,setabreakpointatthejava.lang. System.loadLibrary method and resume the process. After the breakpoint has been reached, execute the step up command,whichwillresumetheprocessuntilloadLibraryreturns. Atthispoint,libnative-lib.sohasbeenloaded. >stop injava.lang.System.loadLibrary >resume Allthreadsresumed. Breakpointhit: \"thread=main\",java.lang.System.loadLibrary(),line=988bci=0 >stepup main[1]stepup > Stepcompleted: \"thread=main\",sg.vantagepoint.helloworldjni.MainActivity.<clinit>(),line=12 bci=5 main[1] Executegdbservertoattachtothesuspendedapp. ThiswillcausetheapptobesuspendedbyboththeJavaVMandthe Linuxkernel(creatingastateof“double-suspension”). 151\\n$adbforwardtcp:1234tcp:1234 $$TOOLCHAIN/arm-linux-androideabi-gdblibnative-lib.so GNUgdb (GDB)7.7 Copyright (C)2014FreeSoftwareFoundation,Inc. (...) (gdb)targetremote:1234 Remotedebuggingusing:1234 0xb6de83b8in ??() JNI Tracing Platform: android AsdetailedinsectionReviewingDisassembledNativeCode,thefirstargumentpassedtoeveryJNIfunctionisaJNIinter- facepointer. ThispointercontainsatableoffunctionsthatallowsnativecodetoaccesstheAndroidRuntime. Identifying callstothesefunctionscanhelpwithunderstandinglibraryfunctionality,suchaswhatstringsarecreatedorJavamethods arecalled. jnitraceisaFridabasedtoolsimilartofrida-tracewhichspecificallytargetstheusageofAndroid’sJNIAPIbynativelibraries, providingaconvenientwaytoobtainJNImethodtracesincludingargumentsandreturnvalues. Youcaneasilyinstallitbyrunningpip install jnitraceandrunitstraightawayasfollows: jnitrace -llibnative-lib.sosg.vantagepoint.helloworldjni The-loptioncanbeprovidedmultipletimestotracemultiplelibraries,or*canbeprovidedtotracealllibraries. This,however,mayprovidealotofoutput. IntheoutputyoucanseethetraceofacalltoNewStringUTFmadefromthenativecode(itsreturnvalueisthengiven backtoJavacode,seesection“ReviewingDisassembledNativeCode”formoredetails). Notehowsimilarlytofrida-trace, theoutputiscolorizedhelpingtovisuallydistinguishthedifferentthreads. When tracing JNI API calls you can see the thread ID at the top, followed by the JNI method call including the method name,theinputargumentsandthereturnvalue. InthecaseofacalltoaJavamethodfromnativecode,theJavamethod argumentswillalsobe supplied. Finallyjnitracewillattempt tousetheFridabacktracinglibrarytoshowwheretheJNI callwasmadefrom. Tolearnmoreaboutalloptionsforadvancedusage,checkthedocumentationonthejnitraceGitHubpage. Monitoring System Logs Platform: android OnAndroidyoucaneasilyinspectthelogofsystemmessagesbyusingLogcat. TherearetwowaystoexecuteLogcat: • LogcatispartofDalvikDebugMonitorServer (DDMS)inAndroidStudio. Iftheappisrunningindebugmode,the logoutputwillbeshownintheAndroidMonitorontheLogcattab. Youcanfiltertheapp’slogoutputbydefining patternsinLogcat. 152\\n• YoucanexecuteLogcatwithadbtostorethelogoutputpermanently: adblogcat >logcat.log Withthefollowingcommandyoucanspecificallygrepforthelogoutputoftheappinscope,justinsertthepackagename. OfcourseyourappneedstoberunningforpstobeabletogetitsPID. adblogcat |grep \"$(adbshellps |grep <package-name>|awk'{print$2}')\" Runtime Reverse Engineering Platform: android Runtimereverseengineeringcanbeseenastheon-the-flyversionofreverseengineeringwhereyoudon’thavethebinary datatoyourhostcomputer. Instead,you’llanalyzeitstraightfromthememoryoftheapp. We’llkeepusingtheHelloWorldJNIapp,openasessionwithr2fridar2frida://usb//sg.vantagepoint.helloworldjni andyoucanstartbydisplayingthetargetbinaryinformationbyusingthe:icommand: [0x00000000]>:i arch arm bits 64 os linux pid 13215 uid 10096 objc false runtime V8 java true cylang false pageSize 4096 pointerSize 8 codeSigningPolicy optional isDebuggerAttached false cwd / dataDir /data/user/0/sg.vantagepoint.helloworldjni codeCacheDir /data/user/0/sg.vantagepoint.helloworldjni/code_cache extCacheDir /storage/emulated/0/Android/data/sg.vantagepoint.helloworldjni/cache obbDir /storage/emulated/0/Android/obb/sg.vantagepoint.helloworldjni filesDir /data/user/0/sg.vantagepoint.helloworldjni/files noBackupDir /data/user/0/sg.vantagepoint.helloworldjni/no_backup codePath /data/app/sg.vantagepoint.helloworldjni-1/base.apk packageName sg.vantagepoint.helloworldjni androidId c92f43af46f5578d cacheDir /data/local/tmp jniEnv 0x7d30a43c60 Searchallsymbolsofacertainmodulewith:is <lib>,e.g.:is libnative-lib.so. [0x00000000]>\\islibnative-lib.so [0x00000000]> 153\\nWhich are empty in this case. Alternatively, you might prefer to look into the imports/exports. For example, list the importswith:ii <lib>: [0x00000000]>:iilibnative-lib.so 0x7dbe1159d0f__cxa_finalize/system/lib64/libc.so 0x7dbe115868f__cxa_atexit/system/lib64/libc.so Andlisttheexportswith:iE <lib>: [0x00000000]>:iElibnative-lib.so 0x7d1c49954cfJava_sg_vantagepoint_helloworldjni_MainActivity_stringFromJNI Forbigbinariesit’srecommendedtopipetheoutputtotheinternallessprogrambyappending~..,i.e.\\iiliban- droid_runtime.so~.. (ifnot,forthisbinary,you’dgetalmost2500linesprintedtoyourterminal). ThenextthingyoumightwanttolookatarethecurrentlyloadedJavaclasses: [0x00000000]>\\ic~sg.vantagepoint.helloworldjni sg.vantagepoint.helloworldjni.MainActivity Listclassfields:",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 71
  },
  "embedding": [
    -0.019653448835015297,
    -0.07271327823400497,
    0.012302841991186142,
    -0.01634318195283413,
    0.03483729436993599,
    0.025026721879839897,
    0.08046373724937439,
    -0.019825546070933342,
    -0.061873264610767365,
    -0.0037556211464107037,
    0.03334041312336922,
    -0.07380058616399765,
    0.0325288325548172,
    -0.05752325430512428,
    0.022291887551546097,
    -0.007672949694097042,
    0.02589985355734825,
    0.011879652738571167,
    -0.03883906453847885,
    -0.006781351286917925,
    0.024809211492538452,
    0.01832900196313858,
    0.02173502743244171,
    0.036603961139917374,
    0.016689078882336617,
    0.04785136133432388,
    -0.04614690691232681,
    -0.04915434867143631,
    -0.06168042868375778,
    -0.05277707800269127,
    -0.03497447073459625,
    -0.005364011041820049,
    -0.015793023630976677,
    0.020408105105161667,
    0.08188840746879578,
    0.03061317652463913,
    0.021008186042308807,
    -0.010561097413301468,
    0.04839053377509117,
    -0.08909057080745697,
    -0.10795275121927261,
    -0.024248825386166573,
    0.004531752318143845,
    0.007562391925603151,
    0.0042302594520151615,
    -0.05931052938103676,
    -0.11498308181762695,
    -0.052038855850696564,
    0.026258345693349838,
    0.0014848479768261313,
    -0.027341224253177643,
    0.02321741357445717,
    0.015518398955464363,
    0.03998284786939621,
    0.016221068799495697,
    0.024337569251656532,
    -0.015207566320896149,
    0.0808861181139946,
    0.05015188083052635,
    0.04304271191358566,
    0.017737891525030136,
    0.03690243884921074,
    -0.005324138794094324,
    0.019897518679499626,
    -0.027907710522413254,
    -0.001256162184290588,
    -0.08458377420902252,
    -0.01998821645975113,
    0.0019261445850133896,
    0.07369280606508255,
    -0.07932054251432419,
    0.004976849537342787,
    -0.07363004237413406,
    0.06655745953321457,
    0.03901009261608124,
    0.002261184621602297,
    -0.026335442438721657,
    -0.0031965309754014015,
    0.02295715920627117,
    -0.14926636219024658,
    -0.03239928185939789,
    0.03571676090359688,
    0.03834887966513634,
    0.11515696346759796,
    0.07198555022478104,
    -0.0009006559266708791,
    0.01914145238697529,
    0.06072474643588066,
    0.06871382147073746,
    0.01411107275635004,
    -0.023495817556977272,
    -0.058414991945028305,
    -0.04358784481883049,
    -0.013250882737338543,
    0.009498746134340763,
    -0.015677975490689278,
    -0.060622405260801315,
    0.005977413151413202,
    -0.08515811711549759,
    0.058883026242256165,
    -0.022441482171416283,
    0.0007367327343672514,
    0.03632068634033203,
    -0.05071629211306572,
    -0.005553329363465309,
    -0.04887687414884567,
    0.04228803887963295,
    -0.02123602293431759,
    0.03928082063794136,
    -0.03728918358683586,
    -0.06512303650379181,
    0.0219567883759737,
    -0.02385460026562214,
    -0.1065215989947319,
    0.061828725039958954,
    0.019749782979488373,
    0.011684718541800976,
    0.05020532384514809,
    0.09645318239927292,
    0.047755543142557144,
    0.11612816154956818,
    0.01208118349313736,
    -0.03450872004032135,
    -0.06822516024112701,
    -0.008592021651566029,
    -0.05100935325026512,
    -0.013607299886643887,
    2.344146736775614e-32,
    0.07224823534488678,
    -0.042101193219423294,
    -0.0252402201294899,
    0.06063040718436241,
    0.04946644976735115,
    0.00855399202555418,
    -0.009657640010118484,
    0.08888392895460129,
    -0.06751734763383865,
    0.034403588622808456,
    -0.0371873714029789,
    0.03099045529961586,
    -0.03936757892370224,
    0.026291925460100174,
    0.03709719702601433,
    -0.07182082533836365,
    -0.09724415093660355,
    0.06581728905439377,
    -0.07050756365060806,
    -0.00638940092176199,
    -0.007325037382543087,
    -0.10105323791503906,
    -0.013293826952576637,
    -0.011614245362579823,
    -0.03218919038772583,
    0.01681249588727951,
    0.039334215223789215,
    0.03119075298309326,
    -0.017778756096959114,
    0.0675811618566513,
    -0.04665961116552353,
    -0.04741550609469414,
    -0.13511063158512115,
    -0.05018667131662369,
    -0.045936040580272675,
    -0.065389484167099,
    0.03866073116660118,
    -0.04757837578654289,
    0.0199608001857996,
    -0.054473452270030975,
    -0.07126856595277786,
    -0.03720390424132347,
    -0.10270295292139053,
    -0.05759735405445099,
    0.0024759573861956596,
    -0.04033273085951805,
    -0.050730347633361816,
    0.00466731796041131,
    -0.0002685062645468861,
    0.03736042231321335,
    0.027283238247036934,
    0.032983507961034775,
    0.09208100289106369,
    -0.05247202515602112,
    -0.09851747006177902,
    -0.00619963463395834,
    -0.03242786228656769,
    0.04122019559144974,
    0.08902692049741745,
    0.09008771926164627,
    -0.006160859949886799,
    0.04482235014438629,
    -0.029129384085536003,
    -0.029864775016903877,
    0.009104001335799694,
    0.006321349181234837,
    -0.03853585943579674,
    -0.0520443469285965,
    0.03942491114139557,
    -0.09486186504364014,
    -0.07469996064901352,
    -0.040221020579338074,
    0.06865096837282181,
    0.010673463344573975,
    -0.0008049954194575548,
    -0.0401063933968544,
    -0.03020879626274109,
    0.016473716124892235,
    -0.03339306637644768,
    -0.04446805641055107,
    0.0777210220694542,
    -0.03028099797666073,
    -0.03785901889204979,
    -0.04932502284646034,
    0.033974938094615936,
    -0.03147205710411072,
    0.033787064254283905,
    -0.13959015905857086,
    -0.12343244254589081,
    0.07530393451452255,
    -0.033816829323768616,
    0.04740199074149132,
    -0.008023295551538467,
    -0.02070481888949871,
    -0.022981805726885796,
    -2.2987585489016637e-32,
    -0.007974641397595406,
    -0.029440363869071007,
    -0.03503800556063652,
    -0.01654971018433571,
    -0.01854238659143448,
    -0.062044426798820496,
    -0.006234391126781702,
    -0.01974937692284584,
    0.040139518678188324,
    0.012661575339734554,
    0.04231156036257744,
    -0.053704824298620224,
    -0.062061745673418045,
    -0.006636975798755884,
    0.028058160096406937,
    0.05656042695045471,
    -0.009724962525069714,
    0.010534978471696377,
    0.0012342367554083467,
    0.0629313588142395,
    -0.005849331617355347,
    0.09406936913728714,
    -0.04599802568554878,
    0.027575543150305748,
    0.009259544312953949,
    0.037814099341630936,
    0.03229576721787453,
    0.06332360953092575,
    0.058922380208969116,
    -0.0613333061337471,
    0.04142502695322037,
    0.030798882246017456,
    -0.1273636817932129,
    0.04160287231206894,
    0.027111560106277466,
    -0.039266977459192276,
    -0.03582419082522392,
    -0.05972707271575928,
    -0.08394456654787064,
    0.07548831403255463,
    0.14350368082523346,
    -0.01284042838960886,
    0.007530634757131338,
    0.050951577723026276,
    0.03780743479728699,
    -0.009761650115251541,
    -0.03233972564339638,
    -0.030442439019680023,
    -0.059773046523332596,
    0.017071494832634926,
    0.09587478637695312,
    -0.10145750641822815,
    -0.03541478142142296,
    -0.00387965957634151,
    0.005315092857927084,
    0.02793237566947937,
    0.05247591435909271,
    -0.08416938781738281,
    -0.019906112924218178,
    -0.05352310836315155,
    0.03334350883960724,
    0.024132637307047844,
    0.047335583716630936,
    -0.005906885024160147,
    0.11214132606983185,
    -0.026729753240942955,
    -0.01226052362471819,
    0.04686055704951286,
    -0.0374818816781044,
    -0.01913423277437687,
    -0.13009746372699738,
    -0.0467132106423378,
    -0.012395808473229408,
    -0.09182530641555786,
    0.030805261805653572,
    0.00781842041760683,
    0.03201249986886978,
    -0.10744984447956085,
    -0.03537226840853691,
    0.0014179248828440905,
    -0.04381019249558449,
    -0.006540347822010517,
    -0.017896810546517372,
    -0.05636084824800491,
    -0.015296448022127151,
    0.0026587003376334906,
    -0.09439390152692795,
    0.09050219506025314,
    -0.006227867677807808,
    -0.0205371156334877,
    -0.0449431948363781,
    0.06474334746599197,
    -0.002536814659833908,
    0.0954345166683197,
    -0.014047848992049694,
    -7.974254856435437e-08,
    -0.11410556733608246,
    -0.0450223833322525,
    -0.004093352239578962,
    -0.02609044313430786,
    0.12467332184314728,
    0.04085976630449295,
    0.01599411852657795,
    0.04865944758057594,
    -0.0031223148107528687,
    -0.08022023737430573,
    0.02651682309806347,
    -0.01881387084722519,
    -0.0024180347099900246,
    0.031188664957880974,
    -0.004880801774561405,
    -0.08129934966564178,
    -0.027494940906763077,
    0.027514636516571045,
    -0.035155732184648514,
    -0.01914834976196289,
    0.002612882060930133,
    -0.00447049830108881,
    -0.04734700173139572,
    -0.0248770359903574,
    -0.02327347919344902,
    -0.00521269952878356,
    0.09653716534376144,
    0.04774218052625656,
    -0.0022342558950185776,
    0.029699020087718964,
    0.03612048923969269,
    0.053015608340501785,
    -0.0255093052983284,
    -0.10068747401237488,
    -0.09770854562520981,
    0.0457334965467453,
    5.6963694078149274e-05,
    -0.003486708039417863,
    0.03903256729245186,
    -0.030708102509379387,
    0.017628289759159088,
    0.03872469812631607,
    -0.007622284349054098,
    0.07606919854879379,
    -0.028157537803053856,
    -0.04126109555363655,
    -0.01794336922466755,
    0.07277251780033112,
    0.04021264240145683,
    -0.08274419605731964,
    -0.12498228996992111,
    -0.028207531198859215,
    0.054752856492996216,
    0.010030887089669704,
    -0.011806698516011238,
    0.04052893817424774,
    0.05304190143942833,
    0.014402140863239765,
    0.02157125622034073,
    0.06946346163749695,
    0.07843147218227386,
    0.034193672239780426,
    0.0668538436293602,
    0.043423157185316086
  ]
}