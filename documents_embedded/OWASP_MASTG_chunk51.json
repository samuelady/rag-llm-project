{
  "text": "vulnerable to the padding oracle attack. Therefore, it is best to use OAEP (Optimal Asymmetric Encryption Padding) captured in PKCS#1 v2.0 (in code: OAEPPadding, OAEPwithSHA-256andMGF1Padding, OAEPwithSHA-224andMGF1Padding, OAEPwithSHA-384andMGF1Padding, OAEPwithSHA-512andMGF1Padding). Note that, even when using OAEP, you can still run into an issue known best as the Manger’s attack as described in the blog at Kudelskisecurity. Note: AES-CBCwithPKCS#5hasshowntobevulnerabletopaddingoracleattacksaswell,giventhattheimplementation giveswarnings,suchas“Paddingerror”,“MACerror”,or“decryptionfailed”. SeeThePaddingOracleAttackandTheCBC PaddingOracleProblemforanexample. Next,itisbesttoensurethatyouaddanHMACafteryouencrypttheplaintext: afterallaciphertextwithafailingMACwillnothavetobedecryptedandcanbediscarded. Protecting Keys in Storage and in Memory When memory dumping is part of your threat model, then keys can be accessed the moment they are actively used. Memorydumpingeitherrequiresroot-access(e.g.arooteddeviceorjailbrokendevice)oritrequiresapatchedapplication withFrida(soyoucanusetoolslikeFridump). Thereforeitisbesttoconsiderthefollowing,ifkeysarestillneededatthe device: • KeysinaRemoteServer: youcanuseremoteKeyvaultssuchasAmazonKMSorAzureKeyVault. Forsomeuse cases,developinganorchestrationlayerbetweentheappandtheremoteresourcemightbeasuitableoption. For instance,aserverlessfunctionrunningonaFunctionasaService(FaaS)system(e.g.AWSLambdaorGoogleCloud Functions)whichforwardsrequeststoretrieveanAPIkeyorsecret. ThereareotheralternativessuchasAmazon Cognito,GoogleIdentityPlatformorAzureActiveDirectory. • Keys inside Secure Hardware-backed Storage: make sure that all cryptographic actions and the key itself remainintheTrustedExecutionEnvironment(e.g.useAndroidKeystore)orSecureEnclave(e.g.usetheKeychain). RefertotheAndroidDataStorageandiOSDataStoragechaptersformoreinformation. • KeysprotectedbyEnvelopeEncryption: IfkeysarestoredoutsideoftheTEE/SE,considerusingmulti-layered encryption: anenvelopeencryptionapproach(seeOWASPCryptographicStorageCheatSheet,GoogleCloudKey managementguide,AWSWell-ArchitectedFrameworkguide),oraHPKEapproachtoencryptdataencryptionkeys withkeyencryptionkeys. 75\\n• KeysinMemory: makesurethatkeysliveinmemoryfortheshortesttimepossibleandconsiderzeroingoutand nullifyingkeysaftersuccessfulcryptographicoperations,andincaseoferror. Forgeneralcryptocodingguidelines, refertoCleanmemoryofsecretdata. Note: giventheeaseofmemorydumping,neversharethesamekeyamongaccountsand/ordevices,otherthanpublic keysusedforsignatureverificationorencryption. Protecting Keys in Transport Whenkeysneedtobetransportedfromonedevicetoanother,orfromtheapptoabackend,makesurethatproperkey protectionisinplace,bymeansofatransportkeypairoranothermechanism. Often,keysaresharedwithobfuscation methods which can be easily reversed. Instead, make sure asymmetric cryptography or wrapping keys are used. For example,asymmetrickeycanbeencryptedwiththepublickeyfromanasymmetrickeypair. Cryptographic APIs on Android and iOS WhilesamebasiccryptographicprinciplesapplyindependentoftheparticularOS,eachoperatingsystemoffersitsown implementationandAPIs. Platform-specificcryptographicAPIsfordatastoragearecoveredingreaterdetailinthe“Data StorageonAndroid”and“TestingDataStorageoniOS”chapters. Encryptionofnetworktraffic,especiallyTransportLayer Security(TLS),iscoveredinthe“AndroidNetworkAPIs”chapter. Cryptographic Policy Inlargerorganizations,orwhenhigh-riskapplicationsarecreated,itcanoftenbeagoodpracticetohaveacryptographic policy, based on frameworks such as NIST Recommendation for Key Management. When basic errors are found in the applicationofcryptography,itcanbeagoodstartingpointofsettingupalessonslearned/cryptographickeymanagement policy. Cryptography Regulations WhenyouuploadtheapptotheAppStoreorGooglePlay,yourapplicationistypicallystoredonaUSserver. Ifyourapp containscryptographyandisdistributedtoanyothercountry,itisconsideredacryptographyexport. Itmeansthatyou needtofollowUSexportregulationsforcryptography. Also,somecountrieshaveimportregulationsforcryptography. Learnmore: • ComplyingwithEncryptionExportRegulations(Apple) • Exportcomplianceoverview(Apple) • Exportcompliance(Google) • EncryptionandExportAdministrationRegulations(USA) • EncryptionControl(France) • Worldmapofencryptionlawsandpolicies 76\\nMobile App Code Quality Mobileappdevelopersuseawidevarietyofprogramminglanguagesandframeworks. Assuch,commonvulnerabilities such as SQL injection, buffer overflows, and cross-site scripting (XSS), may manifest in apps when neglecting secure programmingpractices. The same programming flaws may affect both Android and iOS apps to some degree, so we’ll provide an overview of the most common vulnerability classes frequently in the general section of the guide. In later sections, we will cover OS-specificinstancesandexploitmitigationfeatures. Injection Flaws Aninjectionflawdescribesaclassofsecurityvulnerabilityoccurringwhenuserinputisinsertedintobackendqueriesor commands. By injecting meta-characters, an attacker can execute malicious code that is inadvertently interpreted as partofthecommandorquery. Forexample,bymanipulatingaSQLquery,anattackercouldretrievearbitrarydatabase recordsormanipulatethecontentofthebackenddatabase. Vulnerabilitiesofthisclassaremostprevalentinserver-sidewebservices. Exploitableinstancesalsoexistwithinmobile apps,butoccurrencesarelesscommon,plustheattacksurfaceissmaller. Forexample,whileanappmightqueryalocalSQLitedatabase,suchdatabasesusuallydonotstoresensitivedata(assum- ingthedeveloperfollowedbasicsecuritypractices). ThismakesSQLinjectionanon-viableattackvector. Nevertheless, exploitable injection vulnerabilities sometimes occur, meaning proper input validation is a necessary best practice for programmers. SQL Injection A SQL injection attack involves integrating SQL commands into input data, mimicking the syntax of a predefined SQL command. A successful SQL injection attack allows the attacker to read or write to the database and possibly execute administrativecommands,dependingonthepermissionsgrantedbytheserver. AppsonbothAndroidandiOSuseSQLitedatabasesasameanstocontrolandorganizelocaldatastorage. Assumean Android app handles local user authentication by storing the user credentials in a local database (a poor programming practicewe’lloverlookforthesakeofthisexample). Uponlogin,theappqueriesthedatabasetosearchforarecordwith theusernameandpasswordenteredbytheuser: SQLiteDatabasedb; Stringsql =\"SELECT*FROMusersWHEREusername='\" + username +\"'ANDpassword='\" +password +\"'\"; Cursorc =db.rawQuery(sql,null ); return c.getCount()!=0; Let’sfurtherassumeanattackerentersthefollowingvaluesintothe“username”and“password”fields: username =1'or'1'='1 password =1'or'1'='1 Thisresultsinthefollowingquery: SELECT *FROM users WHERE username='1'OR'1'='1'ANDPassword='1'OR'1'= '1' Becausethecondition'1'='1'alwaysevaluatesastrue,thisqueryreturnallrecordsinthedatabase,causingthelogin functiontoreturntrueeventhoughnovaliduseraccountwasentered. OstorlabexploitedthesortparameterofYahoo’sweathermobileapplicationwithadbusingthisSQLinjectionpayload. Another real-world instance of client-side SQL injection was discovered by Mark Woods within the “Qnotes” and “Qget” AndroidappsrunningonQNAPNASstorageappliances. TheseappsexportedcontentprovidersvulnerabletoSQLinjection, allowinganattackertoretrievethecredentialsfortheNASdevice. Adetaileddescriptionofthisissuecanbefoundon theNettitudeBlog. 77\\nXML Injection InaXMLinjectionattack,theattackerinjectsXMLmeta-characterstostructurallyalterXMLcontent. Thiscanbeusedto eithercompromisethelogicofanXML-basedapplicationorservice,aswellaspossiblyallowanattackertoexploitthe operationoftheXMLparserprocessingthecontent. ApopularvariantofthisattackisXMLeXternalEntity(XXE).Here, anattackerinjectsanexternalentitydefinitioncon- taininganURIintotheinputXML.Duringparsing,theXMLparserexpandstheattacker-definedentitybyaccessingthe resourcespecifiedbytheURI.Theintegrityoftheparsingapplicationultimatelydeterminescapabilitiesaffordedtothe attacker, wherethemalicioususer coulddoany(orall) ofthefollowing: accesslocalfiles, triggerHTTPrequeststoar- bitraryhostsandports, launchacross-siterequestforgery(CSRF)attack, andcauseadenial-of-servicecondition. The OWASPwebtestingguidecontainsthefollowingexampleforXXE: <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?> <!DOCTYPE foo[ <!ELEMENT fooANY> <!ENTITY xxeSYSTEM \"file:///dev/random\" >]><foo>&xxe;</foo> Inthisexample,thelocalfile/dev/randomisopenedwhereanendlessstreamofbytesisreturned,potentiallycausinga denial-of-service. The current trend in app development focuses mostly on REST/JSON-based services as XML is becoming less common. However,intherarecaseswhereuser-suppliedorotherwiseuntrustedcontentisusedtoconstructXMLqueries,itcould be interpreted by local XML parsers, such as NSXMLParser on",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 51
  },
  "embedding": [
    -0.10804371535778046,
    0.061546482145786285,
    -0.04807934910058975,
    -0.011331929825246334,
    0.005241225007921457,
    -0.08675388246774673,
    0.06478625535964966,
    0.03138238191604614,
    0.04611354321241379,
    0.012247991748154163,
    -0.016569826751947403,
    -0.021681778132915497,
    0.019587012007832527,
    -0.029869921505451202,
    -0.07267799228429794,
    -0.024875644594430923,
    -0.03929486870765686,
    0.060574911534786224,
    -0.0008817347697913647,
    0.07158485800027847,
    0.06322966516017914,
    -0.011099846102297306,
    0.057162776589393616,
    -0.03660164400935173,
    -0.04402703791856766,
    0.07582030445337296,
    0.03765388950705528,
    0.05290455371141434,
    0.014702212065458298,
    -0.0864509865641594,
    -0.005876575596630573,
    -0.034691739827394485,
    0.024728065356612206,
    -0.008308886550366879,
    0.05344937741756439,
    0.05278520658612251,
    -0.0003789365873672068,
    -0.07326363027095795,
    -0.06493174284696579,
    -0.0019482800271362066,
    -0.04553918167948723,
    -0.019742781296372414,
    -0.096436507999897,
    0.08586636930704117,
    -0.06218450143933296,
    0.018310070037841797,
    0.06270668655633926,
    -0.0036618884187191725,
    -0.04181904345750809,
    -0.04452120512723923,
    0.0647987648844719,
    0.01704983226954937,
    -0.0032186165917664766,
    0.04082857072353363,
    -0.04579593613743782,
    -0.06902429461479187,
    -0.09047645330429077,
    0.06122780218720436,
    0.02843768335878849,
    0.028471387922763824,
    -0.006596299819648266,
    0.08076144009828568,
    0.044657591730356216,
    0.08169573545455933,
    -0.04954192787408829,
    0.10389622300863266,
    0.07173584401607513,
    -0.039426546543836594,
    -0.0015263301320374012,
    0.048694975674152374,
    -0.031931258738040924,
    0.022131163626909256,
    -0.03490094840526581,
    0.0686931237578392,
    0.02676873654127121,
    0.061612170189619064,
    -0.05299646034836769,
    -0.018136611208319664,
    0.014431210234761238,
    -0.07608842104673386,
    0.0666719526052475,
    -0.08290950208902359,
    -0.055304791778326035,
    0.02104945480823517,
    -0.023779258131980896,
    -0.0110633485019207,
    -0.035132408142089844,
    -0.037964459508657455,
    0.1106528714299202,
    0.043007127940654755,
    0.10227611660957336,
    -0.06598082184791565,
    0.02110774628818035,
    0.008921293541789055,
    0.0718855932354927,
    -0.0626065731048584,
    0.029266273602843285,
    0.034681160002946854,
    -0.09078863263130188,
    0.009840249083936214,
    -0.04431447014212608,
    0.04657177999615669,
    -0.06156361475586891,
    -0.04376104846596718,
    0.032979242503643036,
    -0.006998073775321245,
    0.01738045923411846,
    -0.14523640275001526,
    0.007512807846069336,
    0.026181407272815704,
    0.026177015155553818,
    0.00824423972517252,
    -0.023440776392817497,
    -0.08965666592121124,
    0.049291376024484634,
    0.042281944304704666,
    -0.08532442152500153,
    0.0023465058766305447,
    0.0012137535959482193,
    0.04255053773522377,
    -0.03536614775657654,
    -0.09627287834882736,
    -0.04922107979655266,
    0.09163202345371246,
    -0.03161230310797691,
    -0.003582358593121171,
    -0.04021234065294266,
    1.607399921862785e-32,
    0.02929265983402729,
    0.019369976595044136,
    0.03619183227419853,
    -0.07658247649669647,
    0.011471729725599289,
    -0.010609160177409649,
    0.05399208143353462,
    -0.022974751889705658,
    -0.01851678639650345,
    -0.04075504094362259,
    -0.04381663724780083,
    -0.11334545165300369,
    0.02964303083717823,
    -0.10572543740272522,
    0.06926172226667404,
    0.10740474611520767,
    -0.042686209082603455,
    -0.028969483450055122,
    -0.09362185746431351,
    0.07529328018426895,
    0.07711700350046158,
    0.009200065396726131,
    0.033952925354242325,
    -0.00444755656644702,
    0.017453540116548538,
    -0.014492080546915531,
    -0.013955029658973217,
    -0.05962498486042023,
    0.05433908849954605,
    0.05097828432917595,
    -0.06318176537752151,
    -0.09898915141820908,
    -0.058436933904886246,
    -0.026901179924607277,
    -0.03874562308192253,
    0.032154880464076996,
    -0.014164933003485203,
    -0.044923752546310425,
    -0.05297268554568291,
    -0.06030750647187233,
    -0.03987788408994675,
    -0.007859100587666035,
    -0.02825702726840973,
    0.01300741545855999,
    0.029771002009510994,
    -0.050911009311676025,
    -0.005590914748609066,
    0.05087336525321007,
    -0.06489172577857971,
    -0.014526856131851673,
    0.008719807490706444,
    0.005488875322043896,
    -0.06605230271816254,
    0.0029586218297481537,
    -0.033564869314432144,
    -0.04081135615706444,
    0.07456372678279877,
    -0.04986504092812538,
    0.0015426060417667031,
    0.09567610919475555,
    0.054471056908369064,
    -0.047830164432525635,
    0.05272743105888367,
    -0.05901644006371498,
    -0.02193436212837696,
    -0.02290530316531658,
    -0.037740133702754974,
    -0.03337351232767105,
    -0.07124818861484528,
    -0.03131747618317604,
    -0.02889772690832615,
    -0.039044901728630066,
    -0.019686022773385048,
    0.023805495351552963,
    -0.05498881638050079,
    0.03517605736851692,
    0.028530387207865715,
    0.043272919952869415,
    0.02180906943976879,
    -0.05666021630167961,
    0.03930993005633354,
    -0.03407497704029083,
    0.061475448310375214,
    -0.0017294775461778045,
    -0.05997176095843315,
    0.014252050779759884,
    0.029337162151932716,
    -0.05060024932026863,
    -0.047938767820596695,
    0.0738021656870842,
    0.07117430120706558,
    -0.07144946604967117,
    0.05857815593481064,
    -0.04611354321241379,
    -0.0836014375090599,
    -1.5184784762004822e-32,
    0.006182021461427212,
    -0.022347290068864822,
    -0.057958804070949554,
    0.022227918729186058,
    -0.04506133869290352,
    0.016644369810819626,
    0.02540046162903309,
    0.11242648214101791,
    -0.024594895541667938,
    -0.06013932824134827,
    -0.05447281524538994,
    0.016921885311603546,
    0.03387785702943802,
    -0.006432390306144953,
    0.10414419323205948,
    -0.014194738119840622,
    0.009369870647788048,
    0.1477012187242508,
    0.030113035812973976,
    0.03825714439153671,
    0.04811592027544975,
    -0.032408855855464935,
    0.059874143451452255,
    0.04522266983985901,
    0.018455594778060913,
    0.057405781000852585,
    -0.00042425349238328636,
    0.083933025598526,
    -0.029482955113053322,
    0.02318689040839672,
    -0.03167586028575897,
    0.031080713495612144,
    -0.06122436746954918,
    -0.00827064085751772,
    -0.06761537492275238,
    -0.08532818406820297,
    0.011323614977300167,
    -0.01433106604963541,
    -0.007454643491655588,
    -0.0029560148250311613,
    0.03239528462290764,
    0.04027317091822624,
    -0.030640412122011185,
    0.003431957680732012,
    -0.013655158691108227,
    -0.0074705565348267555,
    -0.046238772571086884,
    0.06202062964439392,
    0.012219040654599667,
    -0.05096786469221115,
    0.046067383140325546,
    0.06470558047294617,
    -0.021017277613282204,
    0.07701259106397629,
    0.02882927469909191,
    0.11104349792003632,
    -0.029056888073682785,
    0.019031422212719917,
    -0.040132787078619,
    -0.006036093924194574,
    -0.02891189604997635,
    -0.009860100224614143,
    0.06934505701065063,
    0.02828161045908928,
    0.07618261873722076,
    0.025399865582585335,
    0.03717481717467308,
    -0.005997953936457634,
    -0.04754440858960152,
    0.02484082616865635,
    -0.008581721223890781,
    -0.04242842644453049,
    -0.0217900350689888,
    0.057376738637685776,
    0.0843563973903656,
    0.08170558512210846,
    0.009234441444277763,
    -0.03165297955274582,
    0.030042538419365883,
    -0.0002983621961902827,
    -0.08963414281606674,
    -0.03190365061163902,
    -0.015244081616401672,
    0.048819635063409805,
    0.03588481247425079,
    0.030286530032753944,
    0.13010990619659424,
    0.01008673571050167,
    -0.015400270000100136,
    -0.014642800204455853,
    -0.05214497819542885,
    0.0012098639272153378,
    -0.01624187082052231,
    0.10722112655639648,
    0.11596914380788803,
    -6.60823715747938e-08,
    -0.05343903973698616,
    -0.04578832536935806,
    -0.018260003998875618,
    0.028200294822454453,
    0.07647369801998138,
    -0.023097608238458633,
    -0.034487951546907425,
    0.002726284321397543,
    -0.038938283920288086,
    -0.11950641125440598,
    0.04135482758283615,
    0.04633353650569916,
    0.020922256633639336,
    -0.001918420079164207,
    -0.0014354336308315396,
    0.04129764810204506,
    -0.005945608485490084,
    -0.09146180748939514,
    -0.07882054895162582,
    -0.11730942130088806,
    -0.009060610085725784,
    -0.02356771007180214,
    -0.04658978804945946,
    0.025870272889733315,
    0.022074075415730476,
    0.08443623781204224,
    0.019439781084656715,
    0.06512685865163803,
    0.058413952589035034,
    -0.016074232757091522,
    -0.06747504323720932,
    -0.049932416528463364,
    -0.031430814415216446,
    -0.031070323660969734,
    -0.04330651834607124,
    0.092312291264534,
    -0.04835125058889389,
    0.008787796832621098,
    0.041395481675863266,
    0.024992067366838455,
    -0.07376814633607864,
    -0.05272061005234718,
    0.06024399399757385,
    0.039825789630413055,
    0.06280656158924103,
    0.0743008628487587,
    0.04649941995739937,
    0.044259801506996155,
    -0.04081732779741287,
    -0.016011666506528854,
    0.017534751445055008,
    -0.05324232950806618,
    -0.03942485153675079,
    0.012150388211011887,
    -0.05227769538760185,
    -0.05582476779818535,
    -0.06497636437416077,
    -0.031325820833444595,
    0.01727953366935253,
    0.002734614070504904,
    0.029109423980116844,
    -0.07212251424789429,
    0.0055364458821713924,
    0.044087640941143036
  ]
}