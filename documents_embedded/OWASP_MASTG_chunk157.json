{
  "text": "IfweclickonLocation,anothermethodwillbetraced: 11186ms +[CLLocationManagerauthorizationStatus] 11186ms |+[CLLocationManager_authorizationStatus] 11186ms | |+[CLLocationManager_authorizationStatusForBundleIdentifier:0x0bundle:0x0] Use the auto-generated stubs of frida-trace to get more information like the return values and a backtrace. Do the followingmodificationstotheJavaScriptfilebelow(thepathisrelativetothecurrentdirectory): 473\\n//__handlers__/__CLLocationManager_authorizationStatus_.js onEnter:function (log,args,state){ log(\"+[CLLocationManagerauthorizationStatus]\"); log(\"Calledfrom:\\n\"+ Thread.backtrace(this.context,Backtracer.ACCURATE) .map(DebugSymbol.fromAddress).join(\"\\n\\t\")+\"\\n\"); }, onLeave:function (log,retval,state){ console.log('RET:' +retval.toString()); } Clickingagainon“Location”revealsmoreinformation: 3630ms -[CLLocationManager init] 3630ms |-[CLLocationManagerinitWithEffectiveBundleIdentifier:0x0bundle:0x0] 3634ms -[CLLocationManager setDelegate:0x14c9ab000] 3641ms +[CLLocationManagerauthorizationStatus] RET:0x4 3641ms Calledfrom: 0x1031aa158TelegramUI!+[TGLocationUtilsrequestWhenInUserLocationAuthorizationWithLocationManager:] 0x10337e2c0TelegramUI!-[TGLocationPickerControllerinitWithContext:intent:] 0x101ee93acTelegramUI!0x1013ac Weseethat+[CLLocationManager authorizationStatus]returned0x4(CLAuthorizationStatus.authorizedWhenInUse) and was called by +[TGLocationUtils requestWhenInUserLocationAuthorizationWithLocationManager:]. As we anticipatedbefore,youmightusethiskindofinformationasanentrypointwhenreverseengineeringtheappandfrom theregetinputs(e.g.namesofclassesormethods)tokeepfeedingthedynamicanalysis. Next,thereisavisualwaytoinspectthestatusofsomeapppermissionswhenusingtheiPhone/iPadbyopening“Settings” andscrollingdownuntilyoufindtheappyou’reinterestedin. Whenclickingonit,thiswillopenthe“ALLOWAPP_NAME TOACCESS”screen. However, notallpermissionsmightbedisplayedyet. Youwillhavetotriggertheminordertobe listedonthatscreen. Forexample,inthepreviousexample,the“Location”entrywasnotbeinglisteduntilwetriggeredthepermissiondialogue forthefirsttime. Oncewedidit,nomatterifweallowedtheaccessornot,thethe“Location”entrywillbedisplayed. Determining Whether Native Methods Are Exposed Through WebViews 474\\nPlatform: ios MASVSV1: MSTG-PLATFORM-7 MASVSV2: MASVS-PLATFORM-2 Overview Static Analysis Testing UIWebView JavaScript to Native Bridges SearchforcodethatmapsnativeobjectstotheJSContextassociatedwithaWebViewandanalyzewhatfunctionalityit exposes,forexamplenosensitivedatashouldbeaccessibleandexposedtoWebViews. InObjective-C,theJSContextassociatedwithaUIWebViewisobtainedasfollows: [webViewvalueForKeyPath:@\"documentView.webView.mainFrame.javaScriptContext\"] Testing WKWebView JavaScript to Native Bridges VerifyifaJavaScripttonativebridgeexistsbysearchingforWKScriptMessageHandlerandcheckallexposedmethods. Thenverifyhowthemethodsarecalled. Thefollowingexamplefrom“Where’sMyBrowser?” demonstratesthis. FirstweseehowtheJavaScriptbridgeisenabled: func enableJavaScriptBridge(_enabled:Bool){ options_dict[\"javaScriptBridge\"]?.value =enabled letuserContentController =wkWebViewConfiguration.userContentController userContentController.removeScriptMessageHandler(forName:\"javaScriptBridge\") ifenabled { letjavaScriptBridgeMessageHandler =JavaScriptBridgeMessageHandler() userContentController.add(javaScriptBridgeMessageHandler,name:\"javaScriptBridge\") } } Addingascriptmessagehandlerwithname\"name\"(or\"javaScriptBridge\"intheexampleabove)causestheJavaScript functionwindow.webkit.messageHandlers.myJavaScriptMessageHandler.postMessagetobedefinedinallframesin allwebviewsthatusetheusercontentcontroller. ItcanbethenusedfromtheHTMLfilelikethis: function invokeNativeOperation(){ value1 =document.getElementById(\"value1\").value value2 =document.getElementById(\"value2\").value window.webkit.messageHandlers.javaScriptBridge.postMessage([\"multiplyNumbers\",value1,value2]); } ThecalledfunctionresidesinJavaScriptBridgeMessageHandler.swift: class JavaScriptBridgeMessageHandler:NSObject,WKScriptMessageHandler { //... case \"multiplyNumbers\": letarg1 =Double(messageArray[1])! letarg2 =Double(messageArray[2])! result =String(arg1 *arg2) //... letjavaScriptCallBack =\"javascriptBridgeCallBack('\\(functionFromJS)','\\(result)')\" message.webView?.evaluateJavaScript(javaScriptCallBack,completionHandler:nil) TheproblemhereisthattheJavaScriptBridgeMessageHandlernotonlycontainsthatfunction,italsoexposesasensitive function: 475\\ncase \"getSecret\": result =\"XSRSOGKC342\" Dynamic Analysis At this point you’ve surely identified all potentially interesting WebViews in the iOS app and got an overview of the potentialattacksurface(viastaticanalysis,thedynamicanalysistechniquesthatwehaveseeninprevioussectionsora combinationofthem). ThiswouldincludeHTMLandJavaScriptfiles,usageoftheJSContext/JSExportforUIWebView andWKScriptMessageHandlerforWKWebView,aswellaswhichfunctionsareexposedandpresentinaWebView. Further dynamic analysis can help you exploit those functions and get sensitive data that they might be exposing. As wehaveseeninthestaticanalysis,inthepreviousexampleitwastrivialtogetthesecretvaluebyperformingreverse engineering (the secret value was found in plain text inside the source code) but imagine that the exposed function retrievesthesecretfromsecurestorage. Inthiscase,onlydynamicanalysisandexploitationwouldhelp. TheprocedureforexploitingthefunctionsstartswithproducingaJavaScriptpayloadandinjectingitintothefilethatthe appisrequesting. Theinjectioncanbeaccomplishedviavarioustechniques,forexample: • IfsomeofthecontentisloadedinsecurelyfromtheInternetoverHTTP(mixedcontent),youcantrytoimplement aMITMattack. • YoucanalwaysperformdynamicinstrumentationandinjecttheJavaScriptpayloadbyusingframeworkslikeFrida and the corresponding JavaScript evaluation functions available for the iOS WebViews (stringByEvaluating- JavaScriptFromString: forUIWebViewandevaluateJavaScript:completionHandler: forWKWebView). In order to get the secret from the previous example of the “Where’s My Browser?” app, you can use one of these techniquestoinjectthefollowingpayloadthatwillrevealthesecretbywritingittothe“result”fieldoftheWebView: function javascriptBridgeCallBack(name,value){ document.getElementById(\"result\").innerHTML=value; }; window.webkit.messageHandlers.javaScriptBridge.postMessage([\"getSecret\"]); Ofcourse,youmayalsousetheExploitationHelperitprovides: 476\\nSeeanotherexampleforavulnerableiOSappandfunctionthatisexposedtoaWebViewin[#thiel2]page156. Determining Whether Sensitive Data Is Exposed via IPC Mechanisms Platform: ios MASVSV1: MSTG-STORAGE-6 MASVSV2: MASVS-PLATFORM-1 477\\nOverview Static Analysis The following section summarizes keywords that you should look for to identify IPC implementations within iOS source code. XPC Services SeveralclassesmaybeusedtoimplementtheNSXPCConnectionAPI: • NSXPCConnection • NSXPCInterface • NSXPCListener • NSXPCListenerEndpoint Youcansetsecurityattributesfortheconnection. Theattributesshouldbeverified. CheckforthefollowingtwofilesintheXcodeprojectfortheXPCServicesAPI(whichisC-based): • xpc.h • connection.h Mach Ports Keywordstolookforinlow-levelimplementations: • mach_port_t • mach_msg_* Keywordstolookforinhigh-levelimplementations(CoreFoundationandFoundationwrappers): • CFMachPort • CFMessagePort • NSMachPort • NSMessagePort NSFileCoordinator Keywordstolookfor: • NSFileCoordinator Dynamic Analysis VerifyIPCmechanismswithstaticanalysisoftheiOSsourcecode. NoiOStooliscurrentlyavailabletoverifyIPCusage. Testing UIPasteboard Platform: ios MASVSV1: MSTG-PLATFORM-4 MASVSV2: MASVS-PLATFORM-1 478\\nOverview Static Analysis The systemwide general pasteboard can be obtained by using generalPasteboard, search the source code or the compiledbinaryforthismethod. Usingthesystemwidegeneralpasteboardshouldbeavoidedwhendealingwithsensitive data. Custom pasteboards can be created with pasteboardWithName:create: or pasteboardWithUniqueName. Verify if custom pasteboards are set to be persistent as this is deprecated since iOS 10. A shared container should be used instead. Inaddition,thefollowingcanbeinspected: • CheckifpasteboardsarebeingremovedwithremovePasteboardWithName:,whichinvalidatesanapppasteboard, freeingupallresourcesusedbyit(noeffectforthegeneralpasteboard). • Checkifthereareexcludedpasteboards,thereshouldbeacalltosetItems:options: withtheUIPasteboardOp- tionLocalOnlyoption. • Checkifthereareexpiringpasteboards,thereshouldbeacalltosetItems:options: withtheUIPasteboardOp- tionExpirationDateoption. • Checkiftheappswipesthepasteboarditemswhengoingtobackgroundorwhenterminating. Thisisdonebysome passwordmanagerappstryingtorestrictsensitivedataexposure. Dynamic Analysis Detect Pasteboard Usage Hookortracethefollowing: • generalPasteboardforthesystem-widegeneralpasteboard. • pasteboardWithName:create: andpasteboardWithUniqueNameforcustompasteboards. Detect Persistent Pasteboard Usage HookortracethedeprecatedsetPersistent: methodandverifyifit’sbeingcalled. Monitoring and Inspecting Pasteboard Items Whenmonitoringthepasteboards,thereisseveraldetailsthatmaybedynamicallyretrieved: • ObtainpasteboardnamebyhookingpasteboardWithName:create: andinspectingitsinputparametersorpaste- boardWithUniqueNameandinspectingitsreturnvalue. • Getthefirstavailablepasteboarditem: e.g.forstringsusestringmethod. Oruseanyoftheothermethodsfor thestandarddatatypes. • GetthenumberofitemswithnumberOfItems. • Checkforexistenceofstandarddatatypeswiththeconveniencemethods,e.g.hasImages,hasStrings,hasURLs (startinginiOS10). • Check for other data types (typically UTIs) with containsPasteboardTypes: inItemSet:. You may inspect for moreconcretedatatypeslike,forexampleanpictureaspublic.pngandpublic.tiff(UTIs)orforcustomdatasuch ascom.mycompany.myapp.mytype. Rememberthat,inthiscase,onlythoseappsthatdeclareknowledgeofthe",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 157
  },
  "embedding": [
    0.015746567398309708,
    0.006640947889536619,
    -0.046096835285425186,
    -0.03026718832552433,
    0.05622108280658722,
    -0.059335798025131226,
    0.03733319416642189,
    -0.009023807942867279,
    0.0035507846623659134,
    -0.011287350207567215,
    0.027908535674214363,
    -0.05361488461494446,
    -0.040328409522771835,
    -0.014641900546848774,
    -0.003646313678473234,
    0.03266621008515358,
    0.015259540639817715,
    -0.002003635047003627,
    -0.039136942476034164,
    -0.033632759004831314,
    0.09573273360729218,
    0.006299083586782217,
    0.018880579620599747,
    0.030070850625634193,
    0.06194455549120903,
    -0.05848956108093262,
    -0.014786423183977604,
    -0.006674926728010178,
    -0.01835060305893421,
    0.02258121781051159,
    0.04089996591210365,
    -0.03342234715819359,
    -0.057966962456703186,
    -0.015208574943244457,
    0.04339970648288727,
    0.034120555967092514,
    -0.0064058382995426655,
    -0.05952601134777069,
    0.022674987092614174,
    -0.011076071299612522,
    -0.0390767864882946,
    0.10923322290182114,
    0.012152641080319881,
    0.017483243718743324,
    0.017540546134114265,
    -0.06675248593091965,
    -0.021364465355873108,
    0.07993852347135544,
    -0.053366221487522125,
    0.048999954015016556,
    0.09148771315813065,
    0.010507714003324509,
    -0.008235244080424309,
    -0.03901965171098709,
    -0.04731126129627228,
    0.12297949939966202,
    -0.03425372391939163,
    0.053095247596502304,
    -0.013121873140335083,
    0.10587582737207413,
    0.025691566988825798,
    -0.08364634215831757,
    0.010643426328897476,
    -0.04098113626241684,
    -0.009595118463039398,
    0.03439130634069443,
    -0.028513284400105476,
    -0.0525205135345459,
    -0.027005735784769058,
    -0.0621768943965435,
    0.01115928590297699,
    0.037636179476976395,
    -0.046605441719293594,
    0.023545198142528534,
    0.08082175254821777,
    0.020229114219546318,
    -0.1427386850118637,
    0.08363132178783417,
    -0.00424590427428484,
    -0.13381393253803253,
    0.03352252021431923,
    -0.012092343531548977,
    0.07376295328140259,
    0.1096501350402832,
    0.12551924586296082,
    0.006552722305059433,
    -0.003133445745334029,
    0.07104897499084473,
    0.06501606106758118,
    0.030057048425078392,
    0.0669914036989212,
    -0.018021181225776672,
    -0.08730826526880264,
    0.02065003477036953,
    -0.04033634439110756,
    0.0828716978430748,
    -0.08488618582487106,
    0.006997036747634411,
    -0.03844025358557701,
    0.023541131988167763,
    -0.012837423011660576,
    -0.011616455391049385,
    0.014002939686179161,
    0.006370091810822487,
    0.07884784787893295,
    -0.010157120414078236,
    -0.005657306872308254,
    -0.003897422458976507,
    -0.0262637697160244,
    0.05170990154147148,
    -0.0032677927520126104,
    0.024145906791090965,
    0.03504857420921326,
    0.06327827274799347,
    0.021953938528895378,
    0.020972948521375656,
    0.0025518753100186586,
    0.012220638804137707,
    0.05774547904729843,
    0.008748136460781097,
    0.046027399599552155,
    -0.02347632870078087,
    0.00017875543562695384,
    -0.024373579770326614,
    0.0363268181681633,
    0.014521799981594086,
    0.054282836616039276,
    1.1550306839476008e-32,
    -0.0033507405314594507,
    0.04518315568566322,
    -0.025671476498246193,
    0.05525832995772362,
    -0.02351001463830471,
    -0.027685411274433136,
    -0.006480741780251265,
    0.004993482492864132,
    -0.008897257037460804,
    0.020121678709983826,
    -0.016600124537944794,
    0.07351357489824295,
    0.06859663873910904,
    -0.10971470177173615,
    0.012776808813214302,
    -0.02279382199048996,
    0.05112389847636223,
    0.04212041199207306,
    0.031651124358177185,
    0.029476379975676537,
    0.08766952157020569,
    -0.00945278350263834,
    0.015850262716412544,
    0.01599588431417942,
    0.07509882003068924,
    0.043688125908374786,
    -0.08613257110118866,
    0.10309263318777084,
    -0.039947379380464554,
    0.028391240164637566,
    0.03683799132704735,
    -0.05450060963630676,
    -0.054610420018434525,
    -0.031531255692243576,
    0.06376270949840546,
    -0.011100318282842636,
    0.02285129949450493,
    -0.025764241814613342,
    -0.07045841962099075,
    -0.03307308629155159,
    -0.03221479058265686,
    -0.06471927464008331,
    -0.14514221251010895,
    -0.017491163685917854,
    -0.06783342361450195,
    -0.15760652720928192,
    -0.0771307572722435,
    -0.04521284997463226,
    0.12858788669109344,
    0.05320403352379799,
    -0.11581249535083771,
    0.03425922617316246,
    -0.011261372826993465,
    -0.07582788914442062,
    -0.0020611451473087072,
    -0.006588166579604149,
    -0.03548036143183708,
    -0.019234642386436462,
    -0.004834009800106287,
    -0.048949968069791794,
    0.08912350982427597,
    0.025115778669714928,
    -0.048039354383945465,
    -0.054294731467962265,
    -0.02482091449201107,
    -0.04094881936907768,
    -0.05110650882124901,
    -0.010895680636167526,
    0.008543455973267555,
    -0.01762409694492817,
    0.0033647099044173956,
    -0.006324468180537224,
    0.08634147047996521,
    0.03318341448903084,
    -0.021280523389577866,
    -0.04617614671587944,
    -0.07053117454051971,
    0.01564386859536171,
    -0.02992813102900982,
    -0.07002196460962296,
    0.0630778819322586,
    -0.0705777034163475,
    -0.033032238483428955,
    0.08851936459541321,
    0.06405871361494064,
    -0.019830936565995216,
    -0.06056875362992287,
    -0.11753135919570923,
    -0.037308014929294586,
    0.07559792697429657,
    -0.03430715948343277,
    0.005529926158487797,
    -0.039900410920381546,
    0.003957515582442284,
    -0.09446418285369873,
    -1.2120993918436874e-32,
    0.008156148716807365,
    -0.03809931129217148,
    0.06819856911897659,
    -0.06347720324993134,
    -0.060411956161260605,
    0.02594573423266411,
    -0.0011987914331257343,
    0.09843611717224121,
    -0.02187151089310646,
    -0.06731446087360382,
    0.006504005286842585,
    -0.009844846092164516,
    -0.013469904661178589,
    0.04744928330183029,
    0.036544669419527054,
    0.12284156680107117,
    -0.025173505768179893,
    -0.03804001584649086,
    0.026583176106214523,
    0.032583266496658325,
    -0.013250472955405712,
    0.016130555421113968,
    0.00018081621965393424,
    0.002345204818993807,
    -0.03566764295101166,
    0.0029154992662370205,
    0.02594679966568947,
    -0.00791014451533556,
    0.0088117690756917,
    -0.05577032268047333,
    0.0320628397166729,
    -0.021886566653847694,
    -0.035029929131269455,
    0.05223511904478073,
    -0.027474554255604744,
    -0.07251255959272385,
    -0.04219605028629303,
    0.08596139401197433,
    -0.00698194419965148,
    0.0594002865254879,
    0.06611432880163193,
    -0.028295310214161873,
    0.04873625561594963,
    -0.0485110804438591,
    -0.03595680370926857,
    0.04504451900720596,
    -0.017526431009173393,
    -0.01735801249742508,
    -0.005858029704540968,
    -0.061055250465869904,
    0.10218460112810135,
    0.026379898190498352,
    0.017481395974755287,
    0.06881140917539597,
    -0.028857018798589706,
    0.07186434417963028,
    0.04362957552075386,
    -0.10263128578662872,
    0.017577938735485077,
    -0.05202201381325722,
    -0.02382100187242031,
    -0.08869587630033493,
    -0.009558502584695816,
    0.07143949717283249,
    0.05598776042461395,
    0.012422173283994198,
    -0.028229111805558205,
    0.031809497624635696,
    0.01936892233788967,
    0.00711655942723155,
    0.04124629870057106,
    -0.12699370086193085,
    -0.044539522379636765,
    -0.010223004035651684,
    0.02334754541516304,
    0.01488278154283762,
    -0.003095605643466115,
    -0.11978349089622498,
    -0.04894108325242996,
    0.026041598990559578,
    0.00795174203813076,
    -0.0005869428860023618,
    -0.07454333454370499,
    -0.06419605761766434,
    0.04509124532341957,
    -0.022459140047430992,
    -0.08896055072546005,
    0.016145600005984306,
    0.02689441666007042,
    0.040010966360569,
    -0.006467214785516262,
    0.06682226806879044,
    -0.08582339435815811,
    -0.046246811747550964,
    -0.015845242887735367,
    -5.9417367026526335e-08,
    -0.07172821462154388,
    -0.011515934020280838,
    -0.009282567538321018,
    -0.009633992798626423,
    0.031366199254989624,
    0.02537509985268116,
    0.04007628932595253,
    -0.027533510699868202,
    -0.05028269812464714,
    -0.05564314126968384,
    -0.011348500847816467,
    0.04045766592025757,
    -0.04992865025997162,
    -0.011542007327079773,
    -0.05878499150276184,
    -0.035320982336997986,
    -0.04146227240562439,
    0.012238878756761551,
    0.02811848558485508,
    -0.010278341360390186,
    -0.02058558352291584,
    -0.010196762159466743,
    0.044886212795972824,
    -0.0220709927380085,
    -0.022267818450927734,
    0.017606116831302643,
    -0.06479914486408234,
    0.06146542355418205,
    0.042049307376146317,
    0.016023291274905205,
    -0.024220356717705727,
    0.033620454370975494,
    0.01298132911324501,
    -0.02505424991250038,
    -0.11294403672218323,
    0.09504126757383347,
    -0.03352011367678642,
    -0.03762100264430046,
    -0.02636868506669998,
    -0.01026060525327921,
    0.06433768570423126,
    0.03608323261141777,
    0.02032320946455002,
    0.0599331296980381,
    0.06340789049863815,
    -0.04071745276451111,
    0.10882801562547684,
    0.03563983365893364,
    0.1279178261756897,
    -0.05915314704179764,
    -0.0537986233830452,
    -0.03958932310342789,
    -0.06350787729024887,
    0.06616973876953125,
    -0.06555421650409698,
    -0.02496623992919922,
    -0.07450655102729797,
    -0.09811889380216599,
    -0.001992730190977454,
    0.09845733642578125,
    -0.03223685920238495,
    -0.010807341895997524,
    -0.028555475175380707,
    -0.0015507556963711977
  ]
}