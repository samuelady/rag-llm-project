{
  "text": "These searches includecheckingforbusyboxandattemptingtoopenthesubinaryatdifferentlocations: /sbin/su /system/bin/su /system/bin/failsafe/su /system/xbin/su /system/xbin/busybox /system/sd/xbin/su /data/local/su /data/local/xbin/su /data/local/bin/su CheckingwhethersuisonthePATHalsoworks: public static boolean checkRoot(){ for(StringpathDir :System.getenv(\"PATH\").split(\":\")){ if(newFile(pathDir,\"su\").exists()){ return true; } } return false; } FilecheckscanbeeasilyimplementedinbothJavaandnativecode. ThefollowingJNIexample(adaptedfromrootinspec- tor)usesthestatsystemcalltoretrieveinformationaboutafileandreturns“1”ifthefileexists. jbooleanJava_com_example_statfile(JNIEnv *env,jobjectthis,jstringfilepath){ jbooleanfileExists =0; jbooleanisCopy; const char *path =(*env)->GetStringUTFChars(env,filepath,&isCopy); struct statfileattrib; if(stat(path,&fileattrib)<0){ __android_log_print(ANDROID_LOG_DEBUG,DEBUG_TAG,\"NATIVE:staterror:[%s]\",strerror(errno)); }else { __android_log_print(ANDROID_LOG_DEBUG,DEBUG_TAG,\"NATIVE:statsuccess,accessperms:[%d]\",fileattrib.st_mode); return 1; } return 0; } Executing su and other commands AnotherwayofdeterminingwhethersuexistsisattemptingtoexecuteitthroughtheRuntime.getRuntime.execmethod. AnIOExceptionwillbethrownifsuisnotonthePATH.Thesamemethodcanbeusedtocheckforotherprogramsoften foundonrooteddevices,suchasbusyboxandthesymboliclinksthattypicallypointtoit. Checking running processes Supersu-by far the most popular rooting tool-runs an authentication daemon named daemonsu, so the presence of this process is another sign of a rooted device. Running processes can be enumerated with the ActivityManager. getRunningAppProcessesandmanager.getRunningServicesAPIs, thepscommand, andbrowsingthroughthe/proc directory. Thefollowingisanexampleimplementedinrootinspector: 303\\npublic boolean checkRunningProcesses(){ boolean returnValue =false; //Getcurrentlyrunningapplicationprocesses List<RunningServiceInfo>list =manager.getRunningServices(300); if(list !=null){ StringtempName; for(inti=0;i<list.size();++i){ tempName =list.get(i).process; if(tempName.contains(\"supersu\")||tempName.contains(\"superuser\")){ returnValue =true; } } } return returnValue; } Checking installed app packages YoucanusetheAndroidpackagemanagertoobtainalistofinstalledpackages. Thefollowingpackagenamesbelongto popularrootingtools: com.thirdparty.superuser eu.chainfire.supersu com.noshufou.android.su com.koushikdutta.superuser com.zachspong.temprootremovejb com.ramdroid.appquarantine com.topjohnwu.magisk Checking for writable partitions and system directories Unusualpermissionsonsystemdirectoriesmayindicateacustomizedorrooteddevice. Althoughthesystemanddata directoriesarenormallymountedread-only, you’llsometimesfindthemmountedread-writewhenthedeviceisrooted. Lookforthesefilesystemsmountedwiththe“rw”flagortrytocreateafileinthedatadirectories. Checking for custom Android builds Checking for signs of test builds and custom ROMs is also helpful. One way to do this is to check the BUILD tag for test-keys,whichnormallyindicateacustomAndroidimage. ChecktheBUILDtagasfollows: private boolean isTestKeyBuild() { Stringstr =Build.TAGS; if((str!=null)&& (str.contains(\"test-keys\"))); for(inti=1;;i=0) return i; } Missing Google Over-The-Air (OTA) certificates is another sign of a custom ROM: on stock Android builds, OTA updates Google’spubliccertificates. Anti-Debugging Debuggingisahighlyeffectivewaytoanalyzeruntimeappbehavior. Itallowsthereverseengineertostepthroughthe code,stopappexecutionatarbitrarypoints,inspectthestateofvariables,readandmodifymemory,andalotmore. Anti-debugging features can be preventive or reactive. As the name implies, preventive anti-debugging prevents the debuggerfromattachinginthefirstplace; reactiveanti-debugginginvolvesdetectingdebuggersandreactingtothem in some way (e.g., terminating the app or triggering hidden behavior). The “more-is-better” rule applies: to maximize effectiveness,defenderscombinemultiplemethodsofpreventionanddetectionthatoperateondifferentAPIlayersand arewelldistributedthroughouttheapp. As mentioned in the “Reverse Engineering and Tampering” chapter, we have to deal with two debugging protocols on Android: we can debug on the Java level with JDWP or on the native layer via a ptrace-based debugger. A good anti- debuggingschemeshoulddefendagainstbothtypesofdebugging. 304\\nJDWP Anti-Debugging Inthechapter“ReverseEngineeringandTampering”,wetalkedaboutJDWP,theprotocolusedforcommunicationbetween thedebuggerandtheJavaVirtualMachine. Weshowedthatitiseasytoenabledebuggingforanyappbypatchingits manifestfile,andchangingthero.debuggablesystempropertywhichenablesdebuggingforallapps. Let’slookatafew thingsdevelopersdotodetectanddisableJDWPdebuggers. Checking the Debuggable Flag in ApplicationInfo Wehavealreadyencounteredtheandroid:debuggableattribute. ThisflagintheAndroidManifestdetermineswhether theJDWPthreadisstartedfortheapp. Itsvaluecanbedeterminedprogrammatically, viatheapp’sApplicationInfo object. Iftheflagisset,themanifesthasbeentamperedwithandallowsdebugging. public static boolean isDebuggable(Contextcontext){ return ((context.getApplicationContext().getApplicationInfo().flags & ApplicationInfo.FLAG_DEBUGGABLE)!=0); } isDebuggerConnected While this might be pretty obvious to circumvent for a reverse engineer, you can use isDebuggerConnected from the android.os.Debugclasstodeterminewhetheradebuggerisconnected. public static boolean detectDebugger(){ return Debug.isDebuggerConnected(); } ThesameAPIcanbecalledvianativecodebyaccessingtheDvmGlobalsglobalstructure. JNIEXPORTjbooleanJNICALLJava_com_test_debugging_DebuggerConnectedJNI(JNIenv *env,jobjectobj){ if(gDvm.debuggerConnected ||gDvm.debuggerActive) return JNI_TRUE; return JNI_FALSE; } Timer Checks Debug.threadCpuTimeNanos indicates the amount of time that the current thread has been executing code. Because debuggingslowsdownprocessexecution,youcanusethedifferenceinexecutiontimetoguesswhetheradebuggeris attached. static boolean detect_threadCpuTimeNanos(){ long start =Debug.threadCpuTimeNanos(); for(inti=0;i<1000000;++i) continue; long stop =Debug.threadCpuTimeNanos(); if(stop -start <10000000){ return false; } else { return true; } } Messing with JDWP-Related Data Structures InDalvik,theglobalvirtualmachinestateisaccessibleviatheDvmGlobalsstructure. TheglobalvariablegDvmholdsa pointertothisstructure. DvmGlobalscontainsvariousvariablesandpointersthatareimportantforJDWPdebuggingand canbetamperedwith. 305\\nstruct DvmGlobals { /* *Someoptionsthatcouldbeworthtamperingwith:) */ bool jdwpAllowed; //debuggingallowedforthisprocess? bool jdwpConfigured; //hasdebugginginfobeenprovided? JdwpTransportTypejdwpTransport; bool jdwpServer; char* jdwpHost; int jdwpPort; bool jdwpSuspend; Thread* threadList; bool nativeDebuggerActive; bool debuggerConnected; /*debuggerorDDMSisconnected*/ bool debuggerActive; /*debuggerismakingrequests*/ JdwpState* jdwpState; }; Forexample,settingthegDvm.methDalvikDdmcServer_dispatchfunctionpointertoNULLcrashestheJDWPthread: JNIEXPORTjbooleanJNICALLJava_poc_c_crashOnInit (JNIEnv*env,jobject ){ gDvm.methDalvikDdmcServer_dispatch =NULL; } YoucandisabledebuggingbyusingsimilartechniquesinARTeventhoughthegDvmvariableisnotavailable. TheART runtime exports some of the vtables of JDWP-related classes as global symbols (in C++, vtables are tables that hold pointerstoclassmethods). ThisincludesthevtablesoftheclassesJdwpSocketStateandJdwpAdbState,whichhandle JDWPconnectionsvianetworksocketsandADB,respectively. Youcanmanipulatethebehaviorofthedebuggingruntime byoverwritingthemethodpointersintheassociatedvtables(archived). OnewaytooverwritethemethodpointersistooverwritetheaddressofthefunctionjdwpAdbState::ProcessIncoming withtheaddressofJdwpAdbState::Shutdown. Thiswillcausethedebuggertodisconnectimmediately. #include <jni.h> #include <string> #include <android/log.h> #include <dlfcn.h> #include <sys/mman.h> #include <jdwp/jdwp.h> #definelog(FMT,...) __android_log_print(ANDROID_LOG_VERBOSE,\"JDWPFun\",FMT,##__VA_ARGS__) //Vtablestructure.Justtomakemessingaroundwithitmoreintuitive struct VT_JdwpAdbState",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 113
  },
  "embedding": [
    0.021221280097961426,
    -0.029141977429389954,
    -0.09944567829370499,
    -0.00988738238811493,
    0.05078710615634918,
    -0.03696150705218315,
    0.07675128430128098,
    0.05381100997328758,
    -0.003434722311794758,
    0.0041300030425190926,
    0.0784125104546547,
    0.028176316991448402,
    0.051189012825489044,
    -0.06244507431983948,
    -0.09446876496076584,
    -0.0392855629324913,
    0.015922971069812775,
    0.0007617901428602636,
    -0.019192032516002655,
    0.03030105121433735,
    0.10100719332695007,
    0.006795802619308233,
    0.008477900177240372,
    -0.010022806003689766,
    -0.0372491180896759,
    -0.0033336069900542498,
    -0.03542054444551468,
    -0.09606509655714035,
    -0.0454728901386261,
    0.014617803506553173,
    0.004160838667303324,
    0.01743561215698719,
    -0.015610643662512302,
    -0.004861065652221441,
    0.1452379822731018,
    0.0889696553349495,
    -0.01813846454024315,
    -0.07107367366552353,
    -0.05723685771226883,
    -0.0530521459877491,
    -0.06361542642116547,
    0.0003191293799318373,
    -0.021397408097982407,
    0.01699851080775261,
    -0.033094923943281174,
    -0.021763339638710022,
    -0.00805668719112873,
    -0.031104231253266335,
    -0.0242269616574049,
    -0.02013549581170082,
    -0.009772698394954205,
    0.022668110206723213,
    0.03875217214226723,
    0.03879864513874054,
    0.04787891358137131,
    0.0009081445750780404,
    -0.05555450916290283,
    0.05103745311498642,
    -0.04618056118488312,
    0.024344677105545998,
    0.010741928592324257,
    0.04335099831223488,
    -0.052777115255594254,
    -0.03945762664079666,
    0.046337153762578964,
    0.06631262600421906,
    -0.03691370412707329,
    -0.07190553843975067,
    0.05195139721035957,
    -0.06682410836219788,
    -0.041443951427936554,
    0.05999021232128143,
    -0.046478044241666794,
    0.1229030191898346,
    0.0015911200316622853,
    0.027074594050645828,
    0.045857541263103485,
    0.02108635939657688,
    0.023961547762155533,
    -0.13844269514083862,
    -0.0734480693936348,
    -0.015507274307310581,
    0.028737004846334457,
    0.06079382821917534,
    0.04062800481915474,
    0.069922536611557,
    -0.039624471217393875,
    0.012841308489441872,
    0.051563262939453125,
    0.03684645891189575,
    0.05449208617210388,
    -0.01304143201559782,
    -0.02028600685298443,
    -0.041447948664426804,
    0.02215087041258812,
    0.011414973065257072,
    -0.012353887781500816,
    0.12690295279026031,
    0.02249886654317379,
    0.021028291434049606,
    -0.03913140296936035,
    0.02198394574224949,
    -0.02696889638900757,
    -0.012814946472644806,
    0.09851303696632385,
    -0.01915738917887211,
    0.04747552424669266,
    0.0126826586201787,
    -0.029990531504154205,
    -0.00504315597936511,
    -0.04338378831744194,
    -0.1402028352022171,
    0.06810349971055984,
    -0.0028327552136033773,
    0.04956478625535965,
    0.0038793354760855436,
    0.014536291360855103,
    0.08853369206190109,
    -0.06961400806903839,
    0.039639320224523544,
    0.042267147451639175,
    -0.04079122096300125,
    0.040268540382385254,
    -0.019467022269964218,
    0.02187499776482582,
    -0.0005472699995152652,
    -0.0030502898152917624,
    9.219879738079222e-33,
    -0.006789292208850384,
    -0.06343298405408859,
    0.03856608644127846,
    0.07591425627470016,
    -0.036843832582235336,
    -0.08719613403081894,
    -0.001969774253666401,
    0.08191877603530884,
    -0.0163961723446846,
    0.08070367574691772,
    -0.008520031347870827,
    -0.012739666737616062,
    -0.020585795864462852,
    -0.06788773089647293,
    0.06940850615501404,
    -0.1124720647931099,
    -0.04922397434711456,
    -0.040710482746362686,
    -0.036753781139850616,
    0.020515503361821175,
    0.03926706314086914,
    -0.05767035856842995,
    -0.01493851002305746,
    -0.03939005360007286,
    -0.03531535342335701,
    -0.05711152032017708,
    0.015306186862289906,
    0.008560883812606335,
    0.0768793523311615,
    0.04623403400182724,
    -0.015832241624593735,
    -0.08384355902671814,
    -0.05217239260673523,
    0.08593104779720306,
    -0.07329810410737991,
    -0.04330926761031151,
    0.028848551213741302,
    -0.02762358821928501,
    -0.07386844605207443,
    -0.014380447566509247,
    0.01571677066385746,
    -0.10101032257080078,
    -0.000730194675270468,
    -0.033449020236730576,
    0.05510401725769043,
    -0.058989960700273514,
    -0.07852298766374588,
    0.002603987231850624,
    0.048000697046518326,
    0.0008211872191168368,
    0.07190989702939987,
    0.07311548292636871,
    0.05351501703262329,
    -0.005502467043697834,
    -0.04339835047721863,
    0.006109718699008226,
    -0.061136987060308456,
    0.02577456459403038,
    0.010194526985287666,
    0.07705648243427277,
    0.017645884305238724,
    0.012875421904027462,
    -0.01822526566684246,
    0.0038188137114048004,
    0.022535165771842003,
    0.0012606248492375016,
    0.008980663493275642,
    -0.13274475932121277,
    0.008025453425943851,
    -0.018689371645450592,
    -0.05589055269956589,
    -0.10317525267601013,
    0.07117040455341339,
    -0.005646785255521536,
    0.031340669840574265,
    -0.003390473546460271,
    -0.029562821611762047,
    0.04031636565923691,
    -0.053163837641477585,
    -0.1086246520280838,
    -0.0009786896407604218,
    -0.052430350333452225,
    -0.0210752971470356,
    0.027410194277763367,
    0.02578272670507431,
    -0.00698115536943078,
    -0.05266766995191574,
    -0.07446429133415222,
    -0.05968732386827469,
    -0.015301477164030075,
    0.009068841114640236,
    0.01237519457936287,
    -0.043023958802223206,
    0.001757877878844738,
    -0.003185275010764599,
    -8.32829445628738e-33,
    0.08682580292224884,
    -0.030119089409708977,
    0.10024948418140411,
    -0.024951843544840813,
    -0.014096136204898357,
    0.05944617837667465,
    -0.05509892851114273,
    -0.09565995633602142,
    -0.02483493834733963,
    -0.042333558201789856,
    -0.01775714010000229,
    0.018247075378894806,
    0.08095985651016235,
    0.026514993980526924,
    0.004368787165731192,
    0.05395284667611122,
    0.00029746757354587317,
    -0.06920021772384644,
    -0.08231649547815323,
    0.08615044504404068,
    0.019667059183120728,
    0.08950252085924149,
    0.005015307106077671,
    -0.004636414349079132,
    -0.030793601647019386,
    0.03361520543694496,
    -0.011884335428476334,
    0.07546631246805191,
    -0.027257900685071945,
    0.015581649728119373,
    0.023938234895467758,
    0.05067797750234604,
    -0.06766381114721298,
    -0.062379512935876846,
    -0.03846781700849533,
    -0.06357388943433762,
    -0.01828283630311489,
    0.05726516619324684,
    -0.039522428065538406,
    0.1086324080824852,
    0.0009025377221405506,
    -0.0523252859711647,
    -0.0075256251730024815,
    -0.0114993155002594,
    0.0436742901802063,
    -0.013305124826729298,
    -0.0013952646404504776,
    0.05076451227068901,
    0.034292515367269516,
    0.025172578170895576,
    0.09708071500062943,
    -0.026130961254239082,
    0.010504482313990593,
    0.07978269457817078,
    0.05094153806567192,
    0.1329430341720581,
    -0.024258553981781006,
    -0.0575035884976387,
    -0.01896032504737377,
    -0.02495458349585533,
    0.049193162471055984,
    -0.052072104066610336,
    -0.01553897000849247,
    0.03762760013341904,
    0.0402483306825161,
    -0.039034437388181686,
    0.047977201640605927,
    0.03457721322774887,
    0.022418085485696793,
    -0.048082031309604645,
    0.024148564785718918,
    -0.05749952048063278,
    -0.033353131264448166,
    -0.039999522268772125,
    0.05837605148553848,
    0.06483171880245209,
    0.026580974459648132,
    -0.1371462345123291,
    -0.041602957993745804,
    0.04368292912840843,
    -0.0418737456202507,
    0.03906993940472603,
    -0.03214704617857933,
    -0.006186194252222776,
    0.006894554011523724,
    -0.034172192215919495,
    -0.0596664622426033,
    0.02282753959298134,
    -0.007303925696760416,
    -0.009719484485685825,
    -0.07914851605892181,
    0.04510873928666115,
    -0.009108999744057655,
    -0.03277013450860977,
    -0.04008498415350914,
    -5.6191428399188226e-08,
    -0.09070941805839539,
    -0.00838523544371128,
    -0.027180418372154236,
    0.03880130499601364,
    0.11238843947649002,
    -0.008499782532453537,
    -0.0021440356504172087,
    0.0031182016246020794,
    -0.03695061057806015,
    -0.003907220903784037,
    0.04149681329727173,
    -0.02534238062798977,
    -0.09858105331659317,
    0.003963635303080082,
    0.022293830290436745,
    -0.11058630049228668,
    0.028547154739499092,
    0.06018171086907387,
    -0.05570525676012039,
    0.009565571323037148,
    0.06921803206205368,
    -0.06539317965507507,
    -0.0036537430714815855,
    0.07702367007732391,
    -0.017802178859710693,
    -0.04213821887969971,
    0.060661476105451584,
    -0.01588069275021553,
    0.0007506056572310627,
    0.0506608672440052,
    -0.03879327327013016,
    0.030385561287403107,
    0.07635630667209625,
    -0.010445578955113888,
    -0.08043680340051651,
    0.13354845345020294,
    -0.016583168879151344,
    0.04349951073527336,
    0.02020527794957161,
    0.09474142640829086,
    0.11125094443559647,
    0.05108977109193802,
    0.01558397151529789,
    0.033961232751607895,
    -0.020938130095601082,
    -0.03289656713604927,
    0.022469501942396164,
    0.06516796350479126,
    -0.03706543147563934,
    -0.05360957235097885,
    -0.07934744656085968,
    0.019233722239732742,
    -0.018229985609650612,
    0.0589100643992424,
    -0.039935264736413956,
    0.014906272292137146,
    0.044602010399103165,
    0.0016985525144264102,
    0.0011856897035613656,
    0.15233619511127472,
    -0.01994466781616211,
    0.050906695425510406,
    0.02014191634953022,
    -0.02372134104371071
  ]
}