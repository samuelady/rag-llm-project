{
  "text": "LookoutforusagesoftheabovementionedWebViewclassesbysearchinginXcode. Inthecompiledbinaryyoucansearchinitssymbolsorstringslikethis: #####UIWebView ```bash $rabin2 -zz./WheresMyBrowser |egrep \"UIWebView$\" 4890x0002fee90x10002fee9 9 10 (5.__TEXT.__cstring)asciiUIWebView 8960x0003c8130x0003c813 24 25 ()ascii@_OBJC_CLASS_$_UIWebView 17540x000595990x00059599 23 24 ()ascii_OBJC_CLASS_$_UIWebView WKWebView $rabin2 -zz./WheresMyBrowser |egrep \"WKWebView$\" 4900x0002fef30x10002fef3 9 10 (5.__TEXT.__cstring)asciiWKWebView 6250x000316700x100031670 17 18 (5.__TEXT.__cstring)asciiunwindToWKWebView 9040x0003c9600x0003c960 24 25 ()ascii@_OBJC_CLASS_$_WKWebView 17570x000595e40x000595e4 23 24 ()ascii_OBJC_CLASS_$_WKWebView AlternativelyyoucanalsosearchforknownmethodsoftheseWebViewclasses. Forexample,searchforthemethodused toinitializeaWKWebView(init(frame:configuration:)): $rabin2 -zzq ./WheresMyBrowser |egrep \"WKWebView.*frame\" 0x5c3ac7776__T0So9WKWebViewCABSC6CGRectV5frame_So0aB13ConfigurationC13configurationtcfC 0x5d97a7978__T0So9WKWebViewCABSC6CGRectV5frame_So0aB13ConfigurationC13configurationtcfcTO 0x6b5d57776__T0So9WKWebViewCABSC6CGRectV5frame_So0aB13ConfigurationC13configurationtcfC 0x6c3fa7978__T0So9WKWebViewCABSC6CGRectV5frame_So0aB13ConfigurationC13configurationtcfcTO Youcanalsodemangleit: $xcrunswift-demangle__T0So9WKWebViewCABSC6CGRectV5frame_So0aB13ConfigurationC13configurationtcfcTO --->@nonobjc__C.WKWebView.init(frame:__C_Synthesized.CGRect, configuration:__C.WKWebViewConfiguration)-> __C.WKWebView Testing Custom URL Schemes Platform: ios MASVSV1: MSTG-PLATFORM-3 MASVSV2: MASVS-PLATFORM-1 455\\nOverview Static Analysis Thereareacoupleofthingsthatwecandousingstaticanalysis. Inthenextsectionswewillseethefollowing: • TestingcustomURLschemesregistration • Testingapplicationqueryschemesregistration • TestingURLhandlingandvalidation • TestingURLrequeststootherapps • Testingfordeprecatedmethods Testing Custom URL Schemes Registration ThefirststeptotestcustomURLschemesisfindingoutwhetheranapplicationregistersanyprotocolhandlers. Ifyouhavetheoriginalsourcecodeandwanttoviewregisteredprotocolhandlers,simplyopentheprojectinXcode,go totheInfotabandopentheURLTypessectionaspresentedinthescreenshotbelow: AlsoinXcodeyoucanfindthisbysearchingfortheCFBundleURLTypeskeyintheapp’sInfo.plistfile(examplefrom iGoat-Swift): <key>CFBundleURLTypes</key> <array> <dict> <key>CFBundleURLName</key> <string>com.iGoat.myCompany</string> <key>CFBundleURLSchemes</key> <array> <string>iGoat</string> </array> </dict> </array> Inacompiledapplication(orIPA),registeredprotocolhandlersarefoundinthefileInfo.plistintheappbundle’sroot folder. OpenitandsearchfortheCFBundleURLSchemeskey,ifpresent,itshouldcontainanarrayofstrings(examplefrom iGoat-Swift): grep-A5-nriurlschInfo.plist Info.plist:45: <key>CFBundleURLSchemes</key> Info.plist-46- <array> Info.plist-47- <string>iGoat</string> Info.plist-48- </array> OncetheURLschemeisregistered,otherappscanopentheappthatregisteredthescheme,andpassparametersbycre- atingappropriatelyformattedURLsandopeningthemwiththeUIApplication openURL:options:completionHandler: method. NotefromtheAppProgrammingGuideforiOS: Ifmorethanonethird-partyappregisterstohandlethesameURLscheme,thereiscurrentlynoprocessfordeter- miningwhichappwillbegiventhatscheme. ThiscouldleadtoaURLschemehijackingattack(seepage136in[#thiel2]). 456\\nTesting Application Query Schemes Registration BeforecallingtheopenURL:options:completionHandler: method,appscancallcanOpenURL:toverifythatthetarget appisavailable. However,asthismethodwasbeingusedbymaliciousappasawaytoenumerateinstalledapps,from iOS 9.0 the URL schemes passed to it must be also declared by adding the LSApplicationQueriesSchemes key to the app’sInfo.plistfileandanarrayofupto50URLschemes. <key>LSApplicationQueriesSchemes</key> <array> <string>url_scheme1</string> <string>url_scheme2</string> </array> canOpenURLwillalwaysreturnNOforundeclaredschemes,whetherornotanappropriateappisinstalled. However,this restrictiononlyappliestocanOpenURL. TheopenURL:options:completionHandler: methodwillstillopenanyURLscheme,eveniftheLSApplication- QueriesSchemesarraywasdeclared,andreturnYES/NOdependingontheresult. Asanexample,TelegramdeclaresinitsInfo.plisttheseQueriesSchemes,amongothers: <key>LSApplicationQueriesSchemes</key> <array> <string>dbapi-3</string> <string>instagram</string> <string>googledrive</string> <string>comgooglemaps-x-callback</string> <string>foursquare</string> <string>here-location</string> <string>yandexmaps</string> <string>yandexnavi</string> <string>comgooglemaps</string> <string>youtube</string> <string>twitter</string> ... Testing URL Handling and Validation InordertodeterminehowaURLpathisbuiltandvalidated,ifyouhavetheoriginalsourcecode,youcansearchforthe followingmethods: • application:didFinishLaunchingWithOptions:methodorapplication:will-FinishLaunchingWithOptions:: verifyhowthedecisionismadeandhowtheinformationabouttheURLisretrieved. • application:openURL:options:: verifyhowtheresourceisbeingopened,i.e.howthedataisbeingparsed,verify theoptions,especiallyifaccessbythecallingapp(sourceApplication)shouldbeallowedordenied. Theappmight alsoneeduserpermissionwhenusingthecustomURLscheme. InTelegramyouwillfindfourdifferentmethodsbeingused: funcapplication(_application:UIApplication,openurl:URL,sourceApplication:String?)->Bool{ self.openUrl(url:url) returntrue } funcapplication(_application:UIApplication,openurl:URL,sourceApplication:String?, annotation:Any)->Bool{ self.openUrl(url:url) returntrue } funcapplication(_app:UIApplication,openurl:URL, options:[UIApplicationOpenURLOptionsKey:Any]=[:])->Bool{ self.openUrl(url:url) returntrue } funcapplication(_application:UIApplication,handleOpenurl:URL)->Bool{ self.openUrl(url:url) returntrue } Wecanobservesomethingshere: • Theappimplementsalsodeprecatedmethodslikeapplication:handleOpenURL:andapplication:openURL:sourceApplication:annotation:. • Thesourceapplicationisnotbeingverifiedinanyofthosemethods. • AllofthemcallaprivateopenUrlmethod. YoucaninspectittolearnmoreabouthowtheURLrequestishandled. 457\\nTesting URL Requests to Other Apps The method openURL:options:completionHandler: and the deprecated openURL: method of UIApplication are re- sponsibleforopeningURLs(i.e.tosendrequests/makequeriestootherapps)thatmaybelocaltothecurrentappor itmaybeonethatmustbeprovidedbyadifferentapp. Ifyouhavetheoriginalsourcecodeyoucansearchdirectlyfor usagesofthosemethods. Additionally,ifyouareinterestedintoknowingiftheappisqueryingspecificservicesorapps,andiftheappiswell-known, youcanalsosearchforcommonURLschemesonlineandincludetheminyourgreps. Forexample,aquickGooglesearch reveals: AppleMusic-music://ormusics://oraudio-player-event:// Calendar-calshow://orx-apple-calevent:// Contacts-contacts:// Diagnostics-diagnostics://ordiags:// GarageBand-garageband:// iBooks-ibooks://oritms-books://oritms-bookss:// Mail-message://ormailto://emailaddress Messages-sms://phonenumber Notes-mobilenotes:// ... WesearchforthismethodintheTelegramsourcecode,thistimewithoutusingXcode,justwithegrep: $egrep -nr\"open.*options.*completionHandler\" ./Telegram-iOS/ ./AppDelegate.swift:552:returnUIApplication.shared.open(parsedUrl, options:[UIApplicationOpenURLOptionUniversalLinksOnly:trueasNSNumber], completionHandler:{valuein ./AppDelegate.swift:556:returnUIApplication.shared.open(parsedUrl, options:[UIApplicationOpenURLOptionUniversalLinksOnly:trueasNSNumber], completionHandler:{valuein If we inspect the results we will see that openURL:options:completionHandler: is actually being used for universal links,sowehavetokeepsearching. Forexample,wecansearchforopenURL(: $egrep -nr\"openURL\\(\" ./Telegram-iOS/ ./ApplicationContext.swift:763: UIApplication.shared.openURL(parsedUrl) ./ApplicationContext.swift:792: UIApplication.shared.openURL(URL( string: \"https://telegram.org/deactivate?phone=\\(phone)\")! ) ./AppDelegate.swift:423: UIApplication.shared.openURL(url) ./AppDelegate.swift:538: UIApplication.shared.openURL(parsedUrl) ... If we inspect those lines we will see how this method is also being used to open “Settings” or to open the “App Store Page”. Whenjustsearchingfor://wesee: ifdocumentUri.hasPrefix(\"file://\"),letpath=URL(string:documentUri)?.path{ if!url.hasPrefix(\"mt-encrypted-file://?\"){ guardletdict=TGStringUtils.argumentDictionary(inUrlString:String(url[url.index(url.startIndex, offsetBy:\"mt-encrypted-file://?\".count)...]))else{ parsedUrl=URL(string:\"https://\\(url)\") ifleturl=URL(string:\"itms-apps://itunes.apple.com/app/id\\(appStoreId)\"){ }elseifleturl=urlas?String,url.lowercased().hasPrefix(\"tg://\"){ [[WKExtensionsharedExtension]openSystemURL:[NSURLURLWithString:[NSString stringWithFormat:@\"tel://%@\",userHandle.data]]]; Aftercombiningtheresultsofbothsearchesandcarefullyinspectingthesourcecodewefindthefollowingpieceofcode: openUrl:{urlin varparsedUrl=URL(string:url) ifletparsed=parsedUrl{ ifparsed.scheme==nil||parsed.scheme!.isEmpty{ parsedUrl=URL(string:\"https://\\(url)\") } ifparsed.scheme==\"tg\"{ return } } ifletparsedUrl=parsedUrl{ UIApplication.shared.openURL(parsedUrl) 458\\nBeforeopeningaURL,theschemeisvalidated,“https”willbeaddedifnecessaryanditwon’topenanyURLwiththe“tg” scheme. WhenreadyitwillusethedeprecatedopenURLmethod. Ifonlyhavingthecompiledapplication(IPA)youcanstilltrytoidentifywhichURLschemesarebeingusedtoqueryother apps: • CheckifLSApplicationQueriesSchemeswasdeclaredorsearchforcommonURLschemes. • Alsousethestring://orbuildaregularexpressiontomatchURLsastheappmightnotbedeclaringsomeschemes. Youcandothatbyfirstverifyingthattheappbinarycontainsthosestringsbye.g.usingunixstringscommand: strings <yourapp>|grep \"someURLscheme://\" orevenbetter,useradare2’siz/izzcommandorrafind2,bothwillfindstringswheretheunixstringscommandwon’t. ExamplefromiGoat-Swift: $r2 -qcizz~iGoat://iGoat-Swift 374360x001ee6100x001ee610 23 24 (4.__TEXT.__cstring)asciiiGoat://?contactNumber= Testing for Deprecated Methods Searchfordeprecatedmethodslike: • application:handleOpenURL: • openURL: • application:openURL:sourceApplication:annotation: Forexample,herewefindthosethree: $rabin2 -zzq Telegram\\X.app/Telegram\\X |grep -i\"openurl\" 0x1000d9e903130UIApplicationOpenURLOptionsKey 0x1000dee3f5049application:openURL:sourceApplication:annotation: 0x1000dee712928application:openURL:options: 0x1000dee8e2726application:handleOpenURL: 0x1000df2c998openURL: 0x1000df7661211canOpenURL: 0x1000df7723534openURL:options:completionHandler: ... Dynamic Analysis Onceyou’veidentifiedthecustomURLschemestheapphasregistered,thereareseveralmethodsthatyoucanuseto testthem: • PerformingURLrequests • IdentifyingandhookingtheURLhandlermethod • TestingURLschemessourcevalidation • FuzzingURLschemes Performing URL Requests Using Safari ToquicklytestoneURLschemeyoucanopentheURLsonSafariandobservehowtheappbehaves. Forexample,ifyou write tel://123456789 in the address bar of Safari, a pop up will appear with the telephone number and the options “Cancel”and“Call”. Ifyoupress“Call”itwillopenthePhoneappanddirectlymakethecall. YoumayalsoknowalreadyaboutpagesthattriggercustomURLschemes,youcanjustnavigatenormallytothosepages andSafariwillautomaticallyaskwhenitfindsacustomURLscheme. 459\\nUsing the Notes App As already seen in “Triggering Universal Links”, you may use the Notes app and long press the links you’ve written in ordertotestcustomURLschemes. Remembertoexittheeditingmodeinordertobeabletoopenthem. Notethatyou canclickorlongpresslinksincludingcustomURLschemesonlyiftheappisinstalled,ifnottheywon’tbehighlightedas clickablelinks. Using Frida IfyousimplywanttoopentheURLschemeyoucandoitusingFrida: $frida -UiGoat-Swift [iPhone::iGoat-Swift]->function openURL(url){ varUIApplication =ObjC.classes.UIApplication.sharedApplication(); vartoOpen =ObjC.classes.NSURL.URLWithString_(url); return UIApplication.openURL_(toOpen); } [iPhone::iGoat-Swift]->openURL(\"tel://234234234\") true InthisexamplefromFridaCodeSharetheauthorusesthenon-publicAPILSApplicationWorkspace.openSensitiveURL:withOptions: toopentheURLs(fromtheSpringBoardapp): function openURL(url){ varw=ObjC.classes.LSApplicationWorkspace.defaultWorkspace(); vartoOpen =ObjC.classes.NSURL.URLWithString_(url); return w.openSensitiveURL_withOptions_(toOpen,null); } Notethattheuseofnon-publicAPIsisnotpermittedontheAppStore,that’swhywedon’teventestthesebutwe areallowedtousethemforourdynamicanalysis. Identifying and Hooking",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 153
  },
  "embedding": [
    -0.021278146654367447,
    0.013379731215536594,
    -0.07645353674888611,
    -0.004298501182347536,
    -0.01406919490545988,
    -0.014821465127170086,
    0.056722093373537064,
    -0.012641578912734985,
    -0.06024223193526268,
    -0.047564439475536346,
    0.048755060881376266,
    -0.03299965336918831,
    0.041012488305568695,
    -0.010443737730383873,
    -0.03996581584215164,
    0.0315355621278286,
    -0.06455831974744797,
    0.0033878167159855366,
    -0.09342342615127563,
    -0.02864888496696949,
    0.03941233456134796,
    0.06048508733510971,
    -0.016692399978637695,
    -0.022762300446629524,
    0.020198190584778786,
    0.03825919330120087,
    -0.02786567434668541,
    -0.00984940305352211,
    0.0008505754522047937,
    -0.0351148322224617,
    0.02725648507475853,
    0.04853832349181175,
    0.007492130156606436,
    0.08443494886159897,
    0.05788450688123703,
    0.04097199812531471,
    -0.003263594815507531,
    -0.04037857800722122,
    -0.010782472789287567,
    -0.05697888508439064,
    0.0002730647101998329,
    0.06965842843055725,
    0.012252443470060825,
    0.0655343160033226,
    -0.06445126980543137,
    -0.019972659647464752,
    -0.0461534783244133,
    0.024682756513357162,
    -0.00026892201276496053,
    -0.12222104519605637,
    -0.07673061639070511,
    -0.0026265825144946575,
    -0.07170287519693375,
    0.04107252508401871,
    0.014081165194511414,
    -0.01808900013566017,
    -0.026993781328201294,
    -0.011126136407256126,
    0.08760809898376465,
    0.04270099103450775,
    -0.008258127607405186,
    0.034999631345272064,
    -0.02085619792342186,
    -0.02777530997991562,
    -0.06043446809053421,
    0.008422156795859337,
    -0.07660052925348282,
    -0.014416090212762356,
    0.008610294200479984,
    -0.009309564717113972,
    -0.08077873289585114,
    0.003004614729434252,
    -0.00714837247505784,
    0.05936327204108238,
    -0.0149164330214262,
    0.04352521151304245,
    0.054698843508958817,
    -0.01947285607457161,
    0.021241025999188423,
    -0.112860307097435,
    -0.1285802274942398,
    -0.05487065389752388,
    0.07107101380825043,
    0.13345853984355927,
    0.1475711613893509,
    0.036959074437618256,
    -0.05582290142774582,
    -0.01529773697257042,
    0.03666682913899422,
    -0.018786530941724777,
    -0.000612547795753926,
    -0.03373652696609497,
    -0.03428034111857414,
    0.007926253601908684,
    -0.005917780101299286,
    0.07993181049823761,
    0.07696034759283066,
    0.05457029864192009,
    -0.06081290543079376,
    0.08781629055738449,
    -0.03647756576538086,
    0.004847289994359016,
    0.07959593832492828,
    0.00037243313272483647,
    -0.049962472170591354,
    -0.03074999712407589,
    0.03718077391386032,
    0.06812687963247299,
    -0.014285107143223286,
    -0.0453474260866642,
    0.01768179051578045,
    -0.007471758406609297,
    -0.009746209718286991,
    -0.061035044491291046,
    -0.00029332030680961907,
    0.011488762684166431,
    0.04435061663389206,
    0.028010990470647812,
    0.041970815509557724,
    0.06095956265926361,
    0.020340345799922943,
    0.09308911114931107,
    -0.09881427884101868,
    0.01921619102358818,
    -0.021534863859415054,
    -0.06441877037286758,
    -0.014348091557621956,
    1.6022850520687695e-32,
    0.016914959996938705,
    0.0477171428501606,
    -0.05063437670469284,
    -0.07488168776035309,
    -0.026118872687220573,
    0.014044169336557388,
    -0.018441202118992805,
    0.10165409743785858,
    0.00965938251465559,
    0.10524535924196243,
    0.026472607627511024,
    -0.012604538351297379,
    0.009639338590204716,
    -0.020763857290148735,
    0.0755547359585762,
    -0.04520495608448982,
    -0.01648392155766487,
    -0.028582565486431122,
    -0.07248995453119278,
    -0.006123455706983805,
    0.023142758756875992,
    -0.012651948258280754,
    -0.07758385688066483,
    -0.05486077815294266,
    -0.04863876476883888,
    0.05893348157405853,
    -0.012187336571514606,
    -0.015316145494580269,
    -0.021855788305401802,
    0.051339007914066315,
    0.03289137780666351,
    -0.02264520525932312,
    -0.08460352569818497,
    -0.02358357049524784,
    0.03626026585698128,
    -0.05513126775622368,
    0.05168156698346138,
    0.027387285605072975,
    -0.02829594910144806,
    -0.048150092363357544,
    -0.04517579451203346,
    -0.0028369459323585033,
    -0.03636378049850464,
    -0.0010443100472912192,
    0.10890520364046097,
    -0.0279871616512537,
    -0.0756969004869461,
    -0.0028537516482174397,
    -0.04425176978111267,
    -0.015964865684509277,
    -0.0005517602548934519,
    0.03575855866074562,
    0.004349760245531797,
    0.03750079870223999,
    -0.07332178205251694,
    -0.01586739718914032,
    0.03175685554742813,
    0.0016926114913076162,
    0.024807723239064217,
    0.0292451661080122,
    0.006322680972516537,
    0.03939608857035637,
    0.0067271096631884575,
    0.018216881901025772,
    0.0060939122922718525,
    -0.0922384262084961,
    0.05954437330365181,
    -0.03619762137532234,
    -0.07562221586704254,
    0.04948476329445839,
    -0.02440984919667244,
    -0.004500969313085079,
    0.09923326969146729,
    0.02372748777270317,
    -0.03343041241168976,
    -0.04129629209637642,
    -0.042839594185352325,
    0.0033194939605891705,
    0.004763482138514519,
    -0.030905133113265038,
    0.015167821198701859,
    -0.050614334642887115,
    0.008788821287453175,
    -0.017650116235017776,
    0.03575889766216278,
    -0.057455141097307205,
    0.02678520977497101,
    -0.11920741945505142,
    -0.01742546632885933,
    0.021756013855338097,
    -0.03887879103422165,
    -0.028004061430692673,
    -0.05895589292049408,
    -0.13950029015541077,
    -0.07675230503082275,
    -1.5615787112573506e-32,
    0.03212067484855652,
    0.03087952546775341,
    0.02438020147383213,
    -0.0577022060751915,
    -0.0752139464020729,
    -0.023928578943014145,
    0.02745169587433338,
    -0.02489730529487133,
    -0.01755107380449772,
    -0.010879318229854107,
    0.06368773430585861,
    0.059819359332323074,
    0.010114427655935287,
    -0.01870228722691536,
    0.06720245629549026,
    0.1154574528336525,
    -0.01835745945572853,
    0.0024020897690206766,
    -0.001583562116138637,
    0.032794203609228134,
    0.03316916152834892,
    0.10499860346317291,
    -0.018579287454485893,
    0.05087563022971153,
    0.02308286353945732,
    0.019634878262877464,
    0.1077103391289711,
    0.08568378537893295,
    0.028660595417022705,
    0.06778347492218018,
    0.020255733281373978,
    -0.02319343015551567,
    -0.057337686419487,
    0.03587476909160614,
    -0.07916638255119324,
    -0.0022036454174667597,
    -0.029631048440933228,
    -0.011506393551826477,
    -0.046507664024829865,
    0.027144188061356544,
    0.11775906383991241,
    -0.008508487604558468,
    -0.029217738658189774,
    0.08716369420289993,
    -0.04206506907939911,
    -0.004366945941001177,
    -0.005262001417577267,
    0.10394183546304703,
    -0.035545215010643005,
    -0.039962951093912125,
    0.05079233646392822,
    -0.0233341995626688,
    -0.034368500113487244,
    0.032244324684143066,
    -0.01827334053814411,
    0.024847982451319695,
    0.08717162907123566,
    -0.06315979361534119,
    -0.11705736070871353,
    -0.04457626864314079,
    0.0004289497737772763,
    0.024462832137942314,
    -0.03347814455628395,
    -0.03130805492401123,
    0.0442664697766304,
    -0.05141041427850723,
    -0.08811689913272858,
    -0.020711364224553108,
    -0.02835489809513092,
    -0.022752925753593445,
    -0.020239122211933136,
    -0.002785557182505727,
    -0.08138063549995422,
    -0.05833122506737709,
    -0.07750990241765976,
    0.15540090203285217,
    0.11402014642953873,
    0.0867249146103859,
    -0.0033708014525473118,
    0.053286366164684296,
    0.01669883355498314,
    0.06292849034070969,
    0.05991639941930771,
    -0.007094055414199829,
    0.026816844940185547,
    -0.00483329501003027,
    -0.10534844547510147,
    0.11358857899904251,
    -0.005917202215641737,
    -0.06141243502497673,
    -0.05347823724150658,
    0.04152282327413559,
    0.038187477737665176,
    0.0751161202788353,
    0.03976549953222275,
    -5.5977437796173035e-08,
    -0.10381028056144714,
    -0.03701435402035713,
    -0.038979608565568924,
    0.024033887311816216,
    0.08118406683206558,
    0.003745132125914097,
    -0.10899706184864044,
    -0.042591679841279984,
    -0.050048474222421646,
    -0.017352815717458725,
    0.027349164709448814,
    -0.011297178454697132,
    -0.0727214440703392,
    0.019643383100628853,
    -0.013885579071938992,
    -0.04192397743463516,
    -0.010042909532785416,
    -0.05796327441930771,
    -0.013883663341403008,
    -0.024563517421483994,
    -0.01822536438703537,
    -0.010692687705159187,
    0.07112834602594376,
    -0.02606489323079586,
    -0.044768739491701126,
    -0.00932150799781084,
    -0.07004143297672272,
    0.030326878651976585,
    0.0005211839452385902,
    0.062372613698244095,
    0.10904137045145035,
    0.046559035778045654,
    -0.04435263201594353,
    -0.07991787046194077,
    -0.0035388758406043053,
    -0.003963146358728409,
    -0.028537463396787643,
    -0.0792243704199791,
    0.009275802411139011,
    -0.028512118384242058,
    0.05808465555310249,
    -0.01330935675650835,
    0.004676070064306259,
    0.0760638490319252,
    0.00759668555110693,
    -0.0631476566195488,
    0.0767848938703537,
    -0.013235141523182392,
    0.13406142592430115,
    -0.0513082779943943,
    -0.08282559365034103,
    -0.023391395807266235,
    0.013721170835196972,
    -0.0016759892459958792,
    -0.06638568639755249,
    -0.02347797155380249,
    0.005835913121700287,
    -0.0424235537648201,
    -0.016699355095624924,
    0.07301051914691925,
    0.03850210830569267,
    -0.03070869855582714,
    -0.018989792093634605,
    0.03718718886375427
  ]
}