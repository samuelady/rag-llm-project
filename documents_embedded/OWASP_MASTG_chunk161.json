{
  "text": "Opened IfyouwanttoknowmoreaboutwhichfunctionactuallyopenstheURLandhowthedataisactuallybeinghandledyou shouldkeepinvestigating. ExtendthepreviouscommandinordertofindoutifthereareanyotherfunctionsinvolvedintoopeningtheURL. frida-trace -UTelegram -m\"*[**restorationHandler*]\" -i\"*open*Url*\" -iincludesanymethod. Youcanalsouseaglobpatternhere(e.g.-i \"*open*Url*\"means“includeanyfunction containing‘open’,then‘Url’andsomethingelse”) Again,wefirstletfrida-tracegeneratethestubsin__handlers__/: $frida-trace -UTelegram -m\"*[**restorationHandler*]\" -i\"*open*Url*\" Instrumentingfunctions... -[AppDelegateapplication:continueUserActivity:restorationHandler:] $S10TelegramUI0A19ApplicationBindingsC16openUniversalUrlyySS_AA0ac4OpenG10Completion... $S10TelegramUI15openExternalUrl7account7context3url05forceD016presentationData18application... $S10TelegramUI31AuthorizationSequenceControllerC7account7strings7openUrl5apiId0J4HashAC0A4Core19... ... Nowyoucanseealonglistoffunctionsbutwestilldon’tknowwhichoneswillbecalled. Triggertheuniversallinkagain andobservethetraces. /*TID0x303 */ 298382ms -[AppDelegate application:0x10556b3c0continueUserActivity:0x1c4237780 restorationHandler:0x16f27a898] 298619ms |$S10TelegramUI15openExternalUrl7account7context3url05forceD016presentationData 18applicationContext20navigationController12dismissInputy0A4Core7AccountC_AA 14OpenURLContextOSSSbAA012PresentationK0CAA0a11ApplicationM0C7Display0 10NavigationO0CSgyyctF() ApartfromtheObjective-Cmethod,nowthereisoneSwiftfunctionthatisalsoofyourinterest. ThereisprobablynodocumentationforthatSwiftfunctionbutyoucanjustdemangleitssymbolusingswift-demangle viaxcrun: 496\\nxcruncanbeusedinvokeXcodedevelopertoolsfromthecommand-line,withouthavingtheminthepath. Inthis caseitwilllocateandrunswift-demangle,anXcodetoolthatdemanglesSwiftsymbols. $xcrunswift-demangleS10TelegramUI15openExternalUrl7account7context3url05forceD016presentationData 18applicationContext20navigationController12dismissInputy0A4Core7AccountC_AA14OpenURLContextOSSSbAA0 12PresentationK0CAA0a11ApplicationM0C7Display010NavigationO0CSgyyctF Resultingin: --- masvs_category:MASVS-CODE platform:ios --- #iOSCodeQualityandBuildSettings ##Overview ###AppSigning [Codesigning](0x06a-Platform-Overview.md#code-signing)yourappassuresusersthattheapphasaknownsourceandhasn'tbeenmodifiedsinceitwaslastsigned. ↪ Beforeyourappcanintegrateappservices,beinstalledonanon-jailbrokendevice,orbesubmittedtotheAppStore, itmustbesignedwithacertificate ↪ issuedbyApple.Formoreinformationonhowtorequestcertificatesandcodesignyourapps,reviewthe[AppDistribution ↪ Guide](https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/Introduction/Introduction.html\"AppDistribution ↪ Guide\"). ###Third-PartyLibraries iOSapplicationsoftenmakeuseofthirdpartylibrarieswhichacceleratedevelopmentasthedeveloperhastowritelesscode inordertosolveaproblem. ↪ However,thirdpartylibrariesmaycontainvulnerabilities,incompatiblelicensing,ormaliciouscontent.Additionally,itisdifficultfororganizationsand ↪ developerstomanageapplicationdependencies,includingmonitoringlibraryreleasesandapplyingavailablesecuritypatches. Therearethreewidelyusedpackagemanagementtools[SwiftPackageManager](https://swift.org/package-manager\"SwiftPackageManageronSwift.org\"), ↪ [Carthage](https://github.com/Carthage/Carthage\"CarthageonGitHub\"),and[CocoaPods](https://cocoapods.org\"CocoaPods.org\"): -TheSwiftPackageManagerisopensource,includedwiththeSwiftlanguage,integratedintoXcode(sinceXcode11)and supports[Swift,Objective-C, ↪ Objective-C++,C,andC++](https://developer.apple.com/documentation/xcode/swift-packages\"SwiftPackagesDocumentation\")packages.ItiswritteninSwift, ↪ decentralizedandusesthePackage.swiftfiletodocumentandmanageprojectdependencies. -CarthageisopensourceandcanbeusedforSwiftandObjective-Cpackages.ItiswritteninSwift,decentralized andusestheCartfilefiletodocumentand ↪ manageprojectdependencies. -CocoaPodsisopensourceandcanbeusedforSwiftandObjective-Cpackages.ItiswritteninRuby,utilizes acentralizedpackageregistryforpublicand ↪ privatepackagesandusesthePodfilefiletodocumentandmanageprojectdependencies. Therearetwocategoriesoflibraries: -Librariesthatarenot(orshouldnot)bepackedwithintheactualproductionapplication,suchas`OHHTTPStubs`usedfor testing. -Librariesthatarepackedwithintheactualproductionapplication,suchas`Alamofire`. Theselibrariescanleadtounwantedside-effects: -Alibrarycancontainavulnerability,whichwillmaketheapplicationvulnerable.Agoodexampleis`AFNetworking`version2.5.1, whichcontainedabugthat ↪ disabledcertificatevalidation.Thisvulnerabilitywouldallowattackerstoexecuteman-in-the-middleattacksagainstappsthatareusingthelibraryto ↪ connecttotheirAPIs. -Alibrarycannolongerbemaintainedorhardlybeused,whichiswhynovulnerabilitiesarereportedand/or fixed.Thiscanleadtohavingbadand/or ↪ vulnerablecodeinyourapplicationthroughthelibrary. -Alibrarycanusealicense,suchasLGPL2.1,whichrequirestheapplicationauthortoprovideaccesstothe sourcecodeforthosewhousetheapplicationand ↪ requestinsightinitssources.Infacttheapplicationshouldthenbeallowedtoberedistributedwithmodificationstoits sourcecode.Thiscanendanger ↪ theintellectualproperty(IP)oftheapplication. Pleasenotethatthisissuecanholdonmultiplelevels:WhenyouusewebviewswithJavaScriptrunninginthewebview, theJavaScriptlibrariescanhavethese ↪ issuesaswell.Thesameholdsforplugins/librariesforCordova,React-nativeandXamarinapps. ###MemoryCorruptionBugs iOSapplicationshavevariouswaystoruninto[memorycorruptionbugs](0x04h-Testing-Code-Quality.md#memory-corruption-bugs):firsttherearethenativecode ↪ issueswhichhavebeenmentionedinthegeneralMemoryCorruptionBugssection.Next,therearevariousunsafeoperationswithboth Objective-CandSwiftto ↪ actuallywraparoundnativecodewhichcancreateissues.Last,bothSwiftandObjective-Cimplementationscanresultinmemoryleaks duetoretaining ↪ objectswhicharenolongerinuse. Learnmore: -<https://developer.ibm.com/tutorials/mo-ios-memory/> -<https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/MemoryMgmt/Articles/MemoryMgmt.html> -<https://medium.com/zendesk-engineering/ios-identifying-memory-leaks-using-the-xcode-memory-graph-debugger-e84f097b9d15> ###BinaryProtectionMechanisms Detectingthepresenceof[binaryprotectionmechanisms](0x04h-Testing-Code-Quality.md#binary-protection-mechanisms)heavilydependonthelanguageusedfor ↪ developingtheapplication. AlthoughXcodeenablesallbinarysecurityfeaturesbydefault,itmayberelevanttoverifythisforoldapplicationsor tocheckforcompilerflag ↪ misconfigurations.Thefollowingfeaturesareapplicable: -[**PIE(PositionIndependentExecutable)**](0x04h-Testing-Code-Quality.md#position-independent-code): -PIEappliestoexecutablebinaries(Mach-Otype`MH_EXECUTE`). -Howeverit'snotapplicableforlibraries(Mach-Otype`MH_DYLIB`). 497\\n-[**Memorymanagement**](0x04h-Testing-Code-Quality.md#memory-management): -BothpureObjective-C,SwiftandhybridbinariesshouldhaveARC(AutomaticReferenceCounting)enabled. -ForC/C++libraries,thedeveloperisresponsiblefordoingproper[manualmemorymanagement](0x04h-Testing-Code-Quality.md#manual-memory-management).See ↪ [\"MemoryCorruptionBugs\"](0x04h-Testing-Code-Quality.md#memory-corruption-bugs). -[**StackSmashingProtection**](0x04h-Testing-Code-Quality.md#stack-smashing-protection):ForpureObjective-Cbinaries,thisshouldalwaysbeenabled.Since ↪ Swiftisdesignedtobememorysafe,ifalibraryispurelywritteninSwift,andstackcanariesweren’tenabled, theriskwillbeminimal. Learnmore: -[OSXABIMach-OFileFormatReference](https://github.com/aidansteele/osx-abi-macho-file-format-reference) -[OniOSBinaryProtections](https://sensepost.com/blog/2021/on-ios-binary-protections/) -[SecurityofruntimeprocessiniOSandiPadOS](https://support.apple.com/en-gb/guide/security/sec15bfe098e/web) -[Mach-OProgrammingTopics-Position-Independent ↪ Code](https://developer.apple.com/library/archive/documentation/DeveloperTools/Conceptual/MachOTopics/1-Articles/dynamic_code.html) Teststodetectthepresenceoftheseprotectionmechanismsheavilydependonthelanguageusedfordevelopingtheapplication.For example,existingtechniques ↪ fordetectingthepresenceofstackcanariesdonotworkforpureSwiftapps. ####XcodeProjectSettings #####StackCanaryprotection StepsforenablingstackcanaryprotectioninaniOSapplication: 1.InXcode,selectyourtargetinthe\"Targets\"section,thenclickthe\"BuildSettings\"tabtoviewthetarget's settings. 2.Makesurethatthe\"-fstack-protector-all\"optionisselectedinthe\"OtherCFlags\"section. 3.MakesurethatPositionIndependentExecutables(PIE)supportisenabled. #####PIEprotection StepsforbuildinganiOSapplicationasPIE: 1.InXcode,selectyourtargetinthe\"Targets\"section,thenclickthe\"BuildSettings\"tabtoviewthetarget's settings. 2.SettheiOSDeploymentTargettoiOS4.3orlater. 3.Makesurethat\"GeneratePosition-DependentCode\"(section\"AppleClang-CodeGeneration\")issettoitsdefaultvalue(\"NO\"). 4.Makesurethat\"GeneratePosition-DependentExecutable\"(section\"Linking\")issettoitsdefaultvalue(\"NO\"). #####ARCprotection ARCisautomaticallyenabledforSwiftappsbythe`swiftc`compiler.However,forObjective-Cappsyou'llhaveensurethatit'senabledbyfollowingthesesteps: 1.InXcode,selectyourtargetinthe\"Targets\"section,thenclickthe\"BuildSettings\"tabtoviewthetarget's settings. 2.Makesurethat\"Objective-CAutomaticReferenceCounting\"issettoitsdefaultvalue(\"YES\"). Seethe[TechnicalQ&AQA1788BuildingaPositionIndependentExecutable](https://developer.apple.com/library/mac/qa/qa1788/_index.html\"TechnicalQ&AQA1788 ↪ BuildingaPositionIndependentExecutable\"). ###DebuggableApps Appscanbemade[debuggable](0x06c-Reverse-Engineering-and-Tampering.md#debugging)byaddingthe ↪ [`get-task-allow`](https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution/resolving_common_notarization_issues ↪ \"Resolvingcommonnotarizationissues\")keytotheappentitlementsfileandsettingitto`true`. Whiledebuggingisausefulfeaturewhendevelopinganapp,ithastobeturnedoffbeforereleasingappstotheAppStoreorwithinanenterpriseprogram.Todo ↪ thatyouneedtodeterminethemodeinwhichyourappistobegeneratedtochecktheflagsin theenvironment: -Selectthebuildsettingsoftheproject -Under'AppleLVM-Preprocessing'and'PreprocessorMacros',makesure'DEBUG'or'DEBUG_MODE'isnotselected(Objective-C) -Makesurethatthe\"Debugexecutable\"optionisnotselected. -Orinthe'SwiftCompiler-CustomFlags'section/'OtherSwiftFlags',makesurethe'-DDEBUG'entry doesnotexist. ###DebuggingSymbols Asagoodpractice,aslittleexplanatoryinformationaspossibleshouldbeprovidedwithacompiledbinary.Thepresenceof additionalmetadatasuchasdebug ↪ symbolsmightprovidevaluableinformationaboutthecode,e.g.functionnamesleakinginformationaboutwhatafunctiondoes.Thismetadata isnotrequired ↪ toexecutethebinaryandthusitissafetodiscarditforthereleasebuild,whichcanbedone byusingpropercompilerconfigurations.Asatesteryou ↪ shouldinspectallbinariesdeliveredwiththeappandensurethatnodebuggingsymbolsarepresent(atleastthoserevealing anyvaluableinformationabout ↪ thecode). WhenaniOSapplicationiscompiled,thecompilergeneratesalistofdebugsymbolsforeachbinaryfileinan app(themainappexecutable,frameworks,andapp ↪ extensions).Thesesymbolsincludeclassnames,globalvariables,andmethodandfunctionnameswhicharemappedtospecificfilesand linenumberswhere ↪ they'redefined.[Debugbuilds](https://developer.apple.com/documentation/xcode/building-your-app-to-include-debugging-information\"BuildingYourAppto ↪ IncludeDebuggingInformation\")ofanappplacethedebugsymbolsinacompiledbinarybydefault,whilereleasebuildsof anappplacetheminacompanion ↪ _DebugSymbolfile_(dSYM)toreducethesizeofthedistributedapp. ###DebuggingCodeandErrorLogging Tospeedupverificationandgetabetterunderstandingoferrors,developersoftenincludedebuggingcode,suchasverboselogging statements(using`NSLog`, ↪ `println`,`print`,`dump`,and`debugPrint`)aboutresponsesfromtheirAPIsandabouttheirapplication'sprogressand/orstate.Furthermore,theremay be ↪ debuggingcodefor\"management-functionality\",whichisusedbydeveloperstosettheapplication'sstateormockresponsesfromanAPI. Reverseengineers ↪ caneasilyusethisinformationtotrackwhat'shappeningwiththeapplication.Therefore,debuggingcodeshouldberemovedfromthe application'srelease ↪ version. ###ExceptionHandling Exceptionsoftenoccurafteranapplicationentersanabnormalorerroneousstate. Testingexceptionhandlingisaboutmakingsurethattheapplicationwillhandletheexceptionandgetintoasafestate withoutexposinganysensitive ↪ informationviaitsloggingmechanismsortheUI. BearinmindthatexceptionhandlinginObjective-CisquitedifferentfromexceptionhandlinginSwift.Bridgingthetwoapproaches inanapplicationthatis ↪ writteninbothlegacyObjective-CcodeandSwiftcodecanbeproblematic. 498\\n####ExceptionHandlinginObjective-C Objective-Chastwotypesoferrors: **NSException:** `NSException`isusedtohandleprogrammingandlow-levelerrors(e.g.,divisionby0andout-of-boundsarrayaccess). An`NSException`caneitherberaisedby`raise`orthrownwith`@throw`.Unlesscaught,thisexceptionwillinvoketheunhandled exceptionhandler,withwhich ↪ youcanlogthestatement(loggingwillhalttheprogram).`@catch`allowsyoutorecoverfromtheexceptionifyou're usinga`@try`-`@catch`-block: ```objectivec @try{ //doworkhere } @catch(NSException*e){ //recoverfromexception } @finally{ //cleanup BearinmindthatusingNSExceptioncomeswithmemorymanagementpitfalls: youneedtocleanupallocationsfrom thetryblockthatareinthefinallyblock. NotethatyoucanpromoteNSExceptionobjectstoNSErrorbyinstantiatingan NSErrorinthe@catchblock. NSError: NSErrorisusedforallothertypesoferrors. SomeCocoaframeworkAPIsprovideerrorsasobjectsintheirfailurecallback incasesomethinggoeswrong; thosethatdon’tprovidethempassapointertoanNSErrorobjectbyreference. Itisa goodpracticetoprovideaBOOLreturntypetothemethodthattakesapointertoanNSErrorobjecttoindicatesuccess orfailure. Ifthere’sareturntype,makesuretoreturnnilforerrors. IfNOornilisreturned,itallowsyoutoinspectthe error/reasonforfailure. Exception Handling in Swift ExceptionhandinginSwift(2-5)isquitedifferent. Thetry-catchblockisnottheretohandleNSException. Theblockis usedtohandleerrorsthatconformtotheError(Swift3)orErrorType(Swift2)protocol. Thiscanbechallengingwhen Objective-CandSwiftcodearecombinedinanapplication. Therefore,NSErrorispreferabletoNSExceptionforprograms writteninbothlanguages. Furthermore,error-handlingisopt-ininObjective-C,butthrowsmustbeexplicitlyhandledin Swift. Toconverterror-throwing,lookattheAppledocumentation. Methodsthatcanthrowerrorsusethethrowskeyword. TheResulttyperepresentsasuccessorfailure,seeResult,HowtouseResultinSwift5andThepowerofResulttypes inSwift. TherearefourwaystohandleerrorsinSwift: • Propagate the error from a function to the code that calls that function. In this situation, there’s no do-catch; there’sonlyathrowthrowingtheactualerrororatrytoexecutethemethodthatthrows. Themethodcontaining thetryalsorequiresthethrowskeyword: funcdosomething(argumentx:TypeX)throws{ tryfunctionThatThrows(argumentx:argumentx) } • Handletheerrorwithado-catchstatement. Youcanusethefollowingpattern: funcdoTryExample() { do{ tryfunctionThatThrows(number: 203) }catch NumberError.lessThanZero{ //Handle numberislessthanzero }catch letNumberError.tooLarge(delta){ //Handle numberistoolarge(withdeltavalue) }catch { //Handle anyothererrors } } enumNumberError: Error{ caselessThanZero casetooLarge(Int) casetooSmall(Int) } funcfunctionThatThrows(number: Int)throws->Bool{ ifnumber <0{ throwNumberError.lessThanZero 499\\n}else ifnumber<10{ throwNumberError.tooSmall(10 -number) }else ifnumber>100{ throwNumberError.tooLarge(100 -number) }else { returntrue } } • Handletheerrorasanoptionalvalue: letx =try?functionThatThrows() //In thiscasethevalueofxisnilincaseofanerror. • Usethetry! expressiontoassertthattheerrorwon’toccur. • HandlethegenericerrorasaResultreturn: enumErrorType:Error{ casetypeOne casetypeTwo } funcfunctionWithResult(param:String?)->Result<String,ErrorType>{ guardletvalue=paramelse{ return.failure(.typeOne) } return.success(value) } funccallResultFunction(){ letresult=functionWithResult(param:\"OWASP\") switchresult{ caselet.success(value): //Handlesuccess caselet.failure(error): //Handlefailure(witherror) } } • HandlenetworkandJSONdecodingerrorswithaResulttype: structMSTG:Codable{ varroot:String varplugins:[String] varstructure:MSTGStructure vartitle:String varlanguage:String vardescription:String } structMSTGStructure:Codable{ varreadme:String } enumRequestError:Error{ caserequestError(Error) casenoData casejsonError } funcgetMSTGInfo(){ guardleturl=URL(string:\"https://raw.githubusercontent.com/OWASP/owasp-mastg/master/book.json\")else{ return } request(url:url){resultin switchresult{ caselet.success(data): //HandlesuccesswithMSTGdata letmstgTitle=data.title letmstgDescription=data.description caselet.failure(error): //Handlefailure switcherror{ caselet.requestError(error): //Handlerequesterror(witherror) case.noData: //Handlenodatareceivedinresponse case.jsonError: //HandleerrorparsingJSON } } } } 500\\nfuncrequest(url:URL,completion:@escaping(Result<MSTG,RequestError>)->Void){ lettask=URLSession.shared.dataTask(with:url){data,_,errorin ifleterror=error{ returncompletion(.failure(.requestError(error))) }else{ ifletdata=data{ letdecoder=JSONDecoder() guardletresponse=try?decoder.decode(MSTG.self,from:data)else{ returncompletion(.failure(.jsonError)) } returncompletion(.success(response)) } } } task.resume() } Testing Object Persistence Platform: ios MASVSV1: MSTG-PLATFORM-8 MASVSV2: MASVS-CODE-4 Overview Static Analysis Alldifferentflavorsofobjectpersistencesharethefollowingconcerns: • Ifyouuseobjectpersistencetostoresensitiveinformationonthedevice,thenmakesurethatthedataisencrypted: eitheratthedatabaselevel,orspecificallyatthevaluelevel. • Needtoguaranteetheintegrityoftheinformation? UseanHMACmechanismorsigntheinformationstored. Always verifytheHMAC/signaturebeforeprocessingtheactualinformationstoredintheobjects. • MakesurethatkeysusedinthetwonotionsabovearesafelystoredintheKeyChainandwellprotected. Seethe chapter“DataStorageoniOS”formoredetails. • Ensurethatthedatawithinthedeserializedobjectiscarefullyvalidatedbeforeitisactivelyused(e.g.,noexploit ofbusiness/applicationlogicispossible). • DonotusepersistencemechanismsthatuseRuntimeReferencetoserialize/deserializeobjectsinhigh-riskappli- cations,astheattackermightbeabletomanipulatethestepstoexecutebusinesslogicviathismechanism(see thechapter“iOSAnti-ReversingDefenses”formoredetails). • NotethatinSwift2andbeyond,aMirrorcanbeusedtoreadpartsofanobject,butcannotbeusedtowriteagainst theobject. Dynamic Analysis Thereareseveralwaystoperformdynamicanalysis: • Fortheactualpersistence: Usethetechniquesdescribedinthe“DataStorageoniOS”chapter. •",
  "metadata": {
    "doc_id": "OWASP_MASTG",
    "chunk_id": 161
  },
  "embedding": [
    0.0015772851184010506,
    -0.04923395439982414,
    0.007650367449969053,
    -0.023135408759117126,
    0.005744549445807934,
    -0.04409651830792427,
    -0.02422790788114071,
    -0.0009657371556386352,
    0.011249399743974209,
    0.0031695300713181496,
    0.02753201499581337,
    -0.035186249762773514,
    -0.07031288743019104,
    -0.03235375136137009,
    0.05012727901339531,
    0.02499847672879696,
    -0.015090437605977058,
    -0.013009332120418549,
    -0.12046010792255402,
    -0.018353285267949104,
    0.06680886447429657,
    0.03377264738082886,
    -0.020948680117726326,
    -0.09441686421632767,
    -0.05584999918937683,
    -0.05612066388130188,
    -0.09569356590509415,
    -0.0027312440797686577,
    0.045980580151081085,
    -0.009633469395339489,
    0.08214521408081055,
    0.01903495565056801,
    -0.06576897948980331,
    -0.05180482193827629,
    0.12037976086139679,
    0.10688810795545578,
    -0.024836966767907143,
    -0.10549823194742203,
    -0.03586594760417938,
    -0.048266589641571045,
    0.023496000096201897,
    -0.008516554720699787,
    -0.016539709642529488,
    0.02956252731382847,
    -0.05896973982453346,
    -0.018000245094299316,
    -0.05498114973306656,
    -0.008003601804375648,
    -0.040325336158275604,
    0.03247715160250664,
    -0.009624132886528969,
    0.0015564161585643888,
    -0.0026093663182109594,
    -0.005823236890137196,
    0.00364574883133173,
    0.08764712512493134,
    -0.057258836925029755,
    0.004734274465590715,
    0.014381651766598225,
    0.04280073195695877,
    0.008129685185849667,
    -0.0532490573823452,
    -0.02506275847554207,
    -0.03454067185521126,
    -0.04963907599449158,
    -0.005332633852958679,
    -0.1243501678109169,
    -0.06155535206198692,
    0.020453494042158127,
    -0.04457675293087959,
    -0.08345278352499008,
    0.0012844852171838284,
    -0.013034529983997345,
    0.07679335027933121,
    0.055139195173978806,
    0.05150256305932999,
    -0.053292617201805115,
    0.04400120675563812,
    -0.04199877381324768,
    -0.16413216292858124,
    0.12154819071292877,
    -0.04234083369374275,
    0.03526966646313667,
    0.0351957231760025,
    0.0940290242433548,
    0.07886918634176254,
    -0.015900684520602226,
    -0.05362798273563385,
    0.09519699960947037,
    0.07956075668334961,
    0.0744459480047226,
    -0.05603567510843277,
    -0.06012050062417984,
    0.009046602062880993,
    -0.054709501564502716,
    -0.04568984732031822,
    -0.04130459576845169,
    0.0698830634355545,
    -0.06592248380184174,
    0.09713893383741379,
    0.009795096702873707,
    0.011390541680157185,
    0.0674125999212265,
    -0.003979681991040707,
    -0.025948628783226013,
    0.0033406917937099934,
    -0.008463303558528423,
    0.04758654534816742,
    -0.015838980674743652,
    -0.03884268179535866,
    -0.014815879985690117,
    -0.05021149292588234,
    0.06055280938744545,
    -0.04761046543717384,
    0.017254294827580452,
    0.009039733558893204,
    0.0010234976653009653,
    -0.009023976512253284,
    0.029214581474661827,
    -0.016771582886576653,
    0.06897010654211044,
    0.01072994340211153,
    -0.003328226273879409,
    -0.07303673028945923,
    -0.026372751221060753,
    0.0008036796352826059,
    0.05977381020784378,
    1.3443605795368386e-32,
    0.03494882583618164,
    0.022407399490475655,
    -0.08308189362287521,
    -0.036292191594839096,
    0.040481142699718475,
    -0.06936318427324295,
    0.03968452662229538,
    0.060140594840049744,
    -0.044930167496204376,
    0.03621017932891846,
    -0.009439383633434772,
    0.04268220067024231,
    -0.05870773270726204,
    -0.06495432555675507,
    -0.0017972227651625872,
    0.027653666213154793,
    -0.0023531406186521053,
    0.07043788582086563,
    0.01794189028441906,
    -0.007705410942435265,
    0.058022208511829376,
    0.012905874289572239,
    0.03515031561255455,
    0.0002199249720433727,
    0.026097336784005165,
    -0.01732807420194149,
    0.04936148598790169,
    -0.007685522083193064,
    -0.002633332507684827,
    0.024101316928863525,
    0.0972815603017807,
    0.011508061550557613,
    -0.09125065058469772,
    -0.0037374363746494055,
    -0.025478342548012733,
    -0.021232999861240387,
    0.03660750016570091,
    -0.06789777427911758,
    -0.0751030445098877,
    -0.029494410380721092,
    -0.04913965240120888,
    -0.03089839406311512,
    -0.04056444764137268,
    0.017431331798434258,
    -0.012555427849292755,
    -0.11792618781328201,
    -0.09158600121736526,
    0.02694258838891983,
    0.08416189253330231,
    0.025879818946123123,
    -0.01622665487229824,
    0.01114153116941452,
    -0.022493161261081696,
    -0.0238532405346632,
    -0.06912551075220108,
    -0.0012988111702725291,
    -0.0572214350104332,
    -0.008476312272250652,
    -0.010463051497936249,
    -0.05076753720641136,
    0.013974464498460293,
    0.02680250070989132,
    -0.03102741949260235,
    -0.0490143708884716,
    -0.013409428298473358,
    0.018246809020638466,
    0.04335200414061546,
    0.033911317586898804,
    0.008046732284128666,
    -0.02961438149213791,
    -0.0753643661737442,
    -0.0216519758105278,
    0.07355113327503204,
    0.03237537667155266,
    0.04491491988301277,
    -0.0087773771956563,
    -0.024251097813248634,
    -0.00721513107419014,
    0.02970794029533863,
    -0.04320725053548813,
    0.031066279858350754,
    -0.023728275671601295,
    0.009379870258271694,
    0.05977869778871536,
    -0.009636388160288334,
    -4.8472840717295185e-05,
    0.0025812918320298195,
    -0.07949327677488327,
    -0.060186758637428284,
    0.03749396651983261,
    -0.031451284885406494,
    0.027561213821172714,
    -0.022069821134209633,
    0.061792124062776566,
    -0.052202463150024414,
    -1.3698303095096928e-32,
    0.04809653013944626,
    0.026936830952763557,
    0.0004413796414155513,
    0.006193039007484913,
    -0.036939091980457306,
    -0.007529796101152897,
    -0.06041395291686058,
    0.05655496567487717,
    0.022435549646615982,
    0.009079422801733017,
    0.06530146300792694,
    0.05577821657061577,
    0.08748192340135574,
    -0.04759528115391731,
    -0.04052836075425148,
    0.0636478066444397,
    -0.03055528737604618,
    -0.011725400574505329,
    -0.04973605275154114,
    0.060287270694971085,
    -0.017030594870448112,
    0.05952037498354912,
    -0.00678128469735384,
    0.017961682751774788,
    -0.020370444282889366,
    0.02473263069987297,
    0.1278831511735916,
    -0.03377782180905342,
    0.018305199220776558,
    -0.04597778990864754,
    0.08348079770803452,
    -0.007498246151953936,
    -0.08033803850412369,
    0.024278419092297554,
    0.00405464181676507,
    -0.04842981696128845,
    -0.00347385392524302,
    -0.01918630674481392,
    -0.015705531463027,
    0.03437083587050438,
    0.1134558618068695,
    0.03708833456039429,
    -0.04770795255899429,
    -0.023904908448457718,
    -0.057314738631248474,
    -0.006240240763872862,
    -0.05226626247167587,
    -0.05019340664148331,
    -0.07650330662727356,
    -0.06021929532289505,
    0.06378116458654404,
    -0.008696956560015678,
    0.0013552727177739143,
    -0.002443142468109727,
    0.04986978694796562,
    0.1464509218931198,
    0.13602657616138458,
    -0.10342443734407425,
    -0.13558998703956604,
    -0.023174835368990898,
    0.08920828253030777,
    -0.015892602503299713,
    -0.05330253392457962,
    -0.026072658598423004,
    0.06602068245410919,
    -0.0022050116676837206,
    0.014069468714296818,
    0.042174167931079865,
    -0.00900206621736288,
    -0.03056599572300911,
    -0.04151732474565506,
    -0.07217206805944443,
    -0.024811947718262672,
    -0.06849320232868195,
    0.01550055481493473,
    -0.006630037445574999,
    0.052399687469005585,
    -0.14497479796409607,
    -0.005256315227597952,
    0.11392905563116074,
    -0.06156066432595253,
    -0.03751387819647789,
    -0.004571779165416956,
    -0.06307398527860641,
    0.06883367151021957,
    -0.06120695918798447,
    -0.04361949488520622,
    0.06879124045372009,
    0.0412762314081192,
    0.07711729407310486,
    -0.04015392065048218,
    0.0760607048869133,
    0.003768012160435319,
    0.02988048642873764,
    0.026632409542798996,
    -6.680358666244501e-08,
    -0.04543570056557655,
    -0.01184961386024952,
    -0.05263622850179672,
    0.024336691945791245,
    0.06658484041690826,
    -0.047698866575956345,
    0.006771023850888014,
    0.04732606187462807,
    -0.057725269347429276,
    -0.037370823323726654,
    -0.041210636496543884,
    0.052708763629198074,
    -0.09636163711547852,
    -0.02365814708173275,
    -0.03055437095463276,
    -0.06727185100317001,
    0.0021792431361973286,
    0.0497218519449234,
    0.0011328138643875718,
    -0.03240260109305382,
    -0.017713164910674095,
    0.004570834804326296,
    0.07590685784816742,
    -0.017299143597483635,
    -0.05358022451400757,
    -0.020125804468989372,
    0.02360212802886963,
    0.010639226995408535,
    -0.03258605673909187,
    0.05755271762609482,
    -0.053815554827451706,
    0.01711084321141243,
    0.044653382152318954,
    -0.03322189301252365,
    -0.13694599270820618,
    0.14307299256324768,
    -0.017223764210939407,
    -0.05510687083005905,
    -0.02304268442094326,
    -0.007572838570922613,
    0.10779815167188644,
    0.016775719821453094,
    0.04721479117870331,
    0.047731801867485046,
    0.01871330663561821,
    -0.03047802671790123,
    0.06569798290729523,
    0.05432116240262985,
    0.0835610032081604,
    -0.009057441726326942,
    -0.06278669089078903,
    0.0012533243279904127,
    -0.027174001559615135,
    0.04534662887454033,
    -0.025367867201566696,
    0.06502888351678848,
    -0.027510305866599083,
    -0.02546369470655918,
    -0.03980057314038277,
    0.07368382811546326,
    0.024887556210160255,
    -0.02733774669468403,
    0.030894320458173752,
    -0.021306460723280907
  ]
}